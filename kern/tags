!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AF_INET	/home/trinity/src/kern/include/kern/socket.h	50;"	d
AF_INET6	/home/trinity/src/kern/include/kern/socket.h	51;"	d
AF_UNIX	/home/trinity/src/kern/include/kern/socket.h	49;"	d
AF_UNSPEC	/home/trinity/src/kern/include/kern/socket.h	48;"	d
ARG_MAX	/home/trinity/src/kern/include/limits.h	43;"	d
ARRAYASSERT	/home/trinity/src/kern/include/array.h	39;"	d
ARRAYASSERT	/home/trinity/src/kern/include/array.h	41;"	d
ARRAYCOUNT	/home/trinity/src/kern/include/cdefs.h	48;"	d
ARRAYINLINE	/home/trinity/src/kern/include/array.h	45;"	d
ARRAYINLINE	/home/trinity/src/kern/lib/array.c	30;"	d	file:
ARRAYS_CHECKED	/home/trinity/src/kern/include/array.h	36;"	d
AT	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	41;"	d
BASE_VERSION	/home/trinity/src/kern/include/version.h	37;"	d
BIGTESTSIZE	/home/trinity/src/kern/test/arraytest.c	36;"	d	file:
BITS_PER_WORD	/home/trinity/src/kern/lib/bitmap.c	46;"	d	file:
CCA_CODE	/home/trinity/src/kern/arch/mips/include/specialreg.h	75;"	d
CCA_CODESHIFT	/home/trinity/src/kern/arch/mips/include/specialreg.h	80;"	d
CCA_COPN	/home/trinity/src/kern/arch/mips/include/specialreg.h	77;"	d
CCA_IRQS	/home/trinity/src/kern/arch/mips/include/specialreg.h	76;"	d
CCA_JD	/home/trinity/src/kern/arch/mips/include/specialreg.h	78;"	d
CCA_UTLB	/home/trinity/src/kern/arch/mips/include/specialreg.h	74;"	d
CFGREG_DID	/home/trinity/src/kern/dev/lamebus/lamebus.c	44;"	d	file:
CFGREG_DRL	/home/trinity/src/kern/dev/lamebus/lamebus.c	45;"	d	file:
CFGREG_VID	/home/trinity/src/kern/dev/lamebus/lamebus.c	43;"	d	file:
CHAR_BIT	/home/trinity/src/kern/include/types.h	140;"	d
CHECKBEEF	/home/trinity/src/kern/vm/kmalloc.c	123;"	d	file:
CHECKGUARDS	/home/trinity/src/kern/vm/kmalloc.c	124;"	d	file:
CHECK_TIMES	/home/trinity/src/kern/test/synchprobs.c	74;"	d	file:
CIN_INDEX	/home/trinity/src/kern/arch/mips/include/specialreg.h	86;"	d
CIN_INDEXSHIFT	/home/trinity/src/kern/arch/mips/include/specialreg.h	88;"	d
CIN_P	/home/trinity/src/kern/arch/mips/include/specialreg.h	85;"	d
COMPILE_ASSERT	/home/trinity/src/kern/include/cdefs.h	42;"	d
COMPUTE_ITERS	/home/trinity/src/kern/test/tt3.c	50;"	d	file:
CONFNAME	/home/trinity/src/kern/compile/DUMBVM/Makefile	/^CONFNAME=DUMBVM$/;"	m
CONSOLE_INPUT_BUFFER_SIZE	/home/trinity/src/kern/dev/generic/console.h	40;"	d
CPU_FREQUENCY	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	54;"	d	file:
CREATELOOPS	/home/trinity/src/kern/test/synchtest.c	46;"	d	file:
CST_BEV	/home/trinity/src/kern/arch/mips/include/specialreg.h	69;"	d
CST_IEc	/home/trinity/src/kern/arch/mips/include/specialreg.h	61;"	d
CST_IEo	/home/trinity/src/kern/arch/mips/include/specialreg.h	65;"	d
CST_IEp	/home/trinity/src/kern/arch/mips/include/specialreg.h	63;"	d
CST_IRQMASK	/home/trinity/src/kern/arch/mips/include/specialreg.h	68;"	d
CST_KUc	/home/trinity/src/kern/arch/mips/include/specialreg.h	62;"	d
CST_KUo	/home/trinity/src/kern/arch/mips/include/specialreg.h	66;"	d
CST_KUp	/home/trinity/src/kern/arch/mips/include/specialreg.h	64;"	d
CST_MODEMASK	/home/trinity/src/kern/arch/mips/include/specialreg.h	67;"	d
CTLCPU_CIPI	/home/trinity/src/kern/dev/lamebus/lamebus.c	58;"	d	file:
CTLCPU_CIRQE	/home/trinity/src/kern/dev/lamebus/lamebus.c	57;"	d	file:
CTLCPU_CRAM	/home/trinity/src/kern/dev/lamebus/lamebus.c	59;"	d	file:
CTLREG_CPUE	/home/trinity/src/kern/dev/lamebus/lamebus.c	53;"	d	file:
CTLREG_CPUS	/home/trinity/src/kern/dev/lamebus/lamebus.c	52;"	d	file:
CTLREG_IRQE	/home/trinity/src/kern/dev/lamebus/lamebus.c	51;"	d	file:
CTLREG_IRQS	/home/trinity/src/kern/dev/lamebus/lamebus.c	49;"	d	file:
CTLREG_PWR	/home/trinity/src/kern/dev/lamebus/lamebus.c	50;"	d	file:
CTLREG_RAMSZ	/home/trinity/src/kern/dev/lamebus/lamebus.c	48;"	d	file:
CTLREG_SELF	/home/trinity/src/kern/dev/lamebus/lamebus.c	54;"	d	file:
CTX_PTBASE	/home/trinity/src/kern/arch/mips/include/specialreg.h	106;"	d
CTX_PTBASESHIFT	/home/trinity/src/kern/arch/mips/include/specialreg.h	108;"	d
CTX_VSHIFT	/home/trinity/src/kern/arch/mips/include/specialreg.h	105;"	d
CURCPU_EXISTS	/home/trinity/src/kern/include/current.h	72;"	d
CURCPU_EXISTS	/home/trinity/src/kern/include/current.h	80;"	d
DB_DEVICE	/home/trinity/src/kern/include/lib.h	82;"	d
DB_EXEC	/home/trinity/src/kern/include/lib.h	85;"	d
DB_INTERRUPT	/home/trinity/src/kern/include/lib.h	81;"	d
DB_KMALLOC	/home/trinity/src/kern/include/lib.h	91;"	d
DB_LOCORE	/home/trinity/src/kern/include/lib.h	79;"	d
DB_NET	/home/trinity/src/kern/include/lib.h	89;"	d
DB_NETFS	/home/trinity/src/kern/include/lib.h	90;"	d
DB_SEMFS	/home/trinity/src/kern/include/lib.h	87;"	d
DB_SFS	/home/trinity/src/kern/include/lib.h	88;"	d
DB_SYSCALL	/home/trinity/src/kern/include/lib.h	80;"	d
DB_THREADS	/home/trinity/src/kern/include/lib.h	83;"	d
DB_VFS	/home/trinity/src/kern/include/lib.h	86;"	d
DB_VM	/home/trinity/src/kern/include/lib.h	84;"	d
DEBUG	/home/trinity/src/kern/include/lib.h	111;"	d
DEBUGASSERT	/home/trinity/src/kern/include/lib.h	70;"	d
DEBUGASSERT	/home/trinity/src/kern/include/lib.h	72;"	d
DECLARRAY	/home/trinity/src/kern/include/array.h	258;"	d
DECLARRAY_BYTYPE	/home/trinity/src/kern/include/array.h	168;"	d
DEFARRAY	/home/trinity/src/kern/include/array.h	259;"	d
DEFARRAY_BYTYPE	/home/trinity/src/kern/include/array.h	185;"	d
DEFTEST	/home/trinity/src/kern/test/fstest.c	698;"	d	file:
DELAYBUFSIZE	/home/trinity/src/kern/dev/generic/console.c	82;"	d	file:
DEVOP_EACHOPEN	/home/trinity/src/kern/include/device.h	69;"	d
DEVOP_IO	/home/trinity/src/kern/include/device.h	70;"	d
DEVOP_IOCTL	/home/trinity/src/kern/include/device.h	71;"	d
DIM	/home/trinity/src/kern/test/tt3.c	42;"	d	file:
DIVROUNDUP	/home/trinity/src/kern/include/lib.h	196;"	d
DUMBVM_STACKPAGES	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	60;"	d	file:
E2BIG	/home/trinity/src/kern/include/kern/errno.h	58;"	d
EACCES	/home/trinity/src/kern/include/kern/errno.h	54;"	d
EADDRINUSE	/home/trinity/src/kern/include/kern/errno.h	98;"	d
EADDRNOTAVAIL	/home/trinity/src/kern/include/kern/errno.h	99;"	d
EAFNOSUPPORT	/home/trinity/src/kern/include/kern/errno.h	96;"	d
EAGAIN	/home/trinity/src/kern/include/kern/errno.h	48;"	d
EBADF	/home/trinity/src/kern/include/kern/errno.h	74;"	d
EBUSY	/home/trinity/src/kern/include/kern/errno.h	71;"	d
ECHILD	/home/trinity/src/kern/include/kern/errno.h	60;"	d
ECONNREFUSED	/home/trinity/src/kern/include/kern/errno.h	104;"	d
ECONNRESET	/home/trinity/src/kern/include/kern/errno.h	106;"	d
EDOM	/home/trinity/src/kern/include/kern/errno.h	84;"	d
EDQUOT	/home/trinity/src/kern/include/kern/errno.h	81;"	d
EEXIST	/home/trinity/src/kern/include/kern/errno.h	66;"	d
EFAULT	/home/trinity/src/kern/include/kern/errno.h	50;"	d
EFBIG	/home/trinity/src/kern/include/kern/errno.h	82;"	d
EFTYPE	/home/trinity/src/kern/include/kern/errno.h	83;"	d
EHOSTDOWN	/home/trinity/src/kern/include/kern/errno.h	102;"	d
EHOSTUNREACH	/home/trinity/src/kern/include/kern/errno.h	103;"	d
EILSEQ	/home/trinity/src/kern/include/kern/errno.h	86;"	d
EINTR	/home/trinity/src/kern/include/kern/errno.h	49;"	d
EINVAL	/home/trinity/src/kern/include/kern/errno.h	52;"	d
EIO	/home/trinity/src/kern/include/kern/errno.h	76;"	d
EIOCTL	/home/trinity/src/kern/include/kern/errno.h	75;"	d
EISCONN	/home/trinity/src/kern/include/kern/errno.h	89;"	d
EISDIR	/home/trinity/src/kern/include/kern/errno.h	62;"	d
EISSOCK	/home/trinity/src/kern/include/kern/errno.h	88;"	d
EI_ABIVERSION	/home/trinity/src/kern/include/elf.h	77;"	d
EI_CLASS	/home/trinity/src/kern/include/elf.h	73;"	d
EI_DATA	/home/trinity/src/kern/include/elf.h	74;"	d
EI_MAG0	/home/trinity/src/kern/include/elf.h	69;"	d
EI_MAG1	/home/trinity/src/kern/include/elf.h	70;"	d
EI_MAG2	/home/trinity/src/kern/include/elf.h	71;"	d
EI_MAG3	/home/trinity/src/kern/include/elf.h	72;"	d
EI_OSABI	/home/trinity/src/kern/include/elf.h	76;"	d
EI_PAD	/home/trinity/src/kern/include/elf.h	78;"	d
EI_VERSION	/home/trinity/src/kern/include/elf.h	75;"	d
ELFCLASS32	/home/trinity/src/kern/include/elf.h	90;"	d
ELFCLASS64	/home/trinity/src/kern/include/elf.h	91;"	d
ELFCLASSNONE	/home/trinity/src/kern/include/elf.h	89;"	d
ELFDATA2LSB	/home/trinity/src/kern/include/elf.h	95;"	d
ELFDATA2MSB	/home/trinity/src/kern/include/elf.h	96;"	d
ELFDATANONE	/home/trinity/src/kern/include/elf.h	94;"	d
ELFMAG0	/home/trinity/src/kern/include/elf.h	83;"	d
ELFMAG1	/home/trinity/src/kern/include/elf.h	84;"	d
ELFMAG2	/home/trinity/src/kern/include/elf.h	85;"	d
ELFMAG3	/home/trinity/src/kern/include/elf.h	86;"	d
ELFOSABI_HPUX	/home/trinity/src/kern/include/elf.h	104;"	d
ELFOSABI_STANDALONE	/home/trinity/src/kern/include/elf.h	105;"	d
ELFOSABI_SYSV	/home/trinity/src/kern/include/elf.h	103;"	d
ELF_NIDENT	/home/trinity/src/kern/include/elf.h	50;"	d
ELOOP	/home/trinity/src/kern/include/kern/errno.h	64;"	d
EMFILE	/home/trinity/src/kern/include/kern/errno.h	72;"	d
EMLINK	/home/trinity/src/kern/include/kern/errno.h	67;"	d
EMPROC	/home/trinity/src/kern/include/kern/errno.h	55;"	d
EMSGSIZE	/home/trinity/src/kern/include/kern/errno.h	107;"	d
EMU_BUFFER	/home/trinity/src/kern/dev/lamebus/emu.c	66;"	d	file:
EMU_MAXIO	/home/trinity/src/kern/dev/lamebus/emu.h	34;"	d
EMU_OP_CLOSE	/home/trinity/src/kern/dev/lamebus/emu.c	72;"	d	file:
EMU_OP_CREATE	/home/trinity/src/kern/dev/lamebus/emu.c	70;"	d	file:
EMU_OP_EXCLCREATE	/home/trinity/src/kern/dev/lamebus/emu.c	71;"	d	file:
EMU_OP_GETSIZE	/home/trinity/src/kern/dev/lamebus/emu.c	76;"	d	file:
EMU_OP_OPEN	/home/trinity/src/kern/dev/lamebus/emu.c	69;"	d	file:
EMU_OP_READ	/home/trinity/src/kern/dev/lamebus/emu.c	73;"	d	file:
EMU_OP_READDIR	/home/trinity/src/kern/dev/lamebus/emu.c	74;"	d	file:
EMU_OP_TRUNC	/home/trinity/src/kern/dev/lamebus/emu.c	77;"	d	file:
EMU_OP_WRITE	/home/trinity/src/kern/dev/lamebus/emu.c	75;"	d	file:
EMU_RES_BADHANDLE	/home/trinity/src/kern/dev/lamebus/emu.c	81;"	d	file:
EMU_RES_BADOP	/home/trinity/src/kern/dev/lamebus/emu.c	82;"	d	file:
EMU_RES_BADPATH	/home/trinity/src/kern/dev/lamebus/emu.c	83;"	d	file:
EMU_RES_BADSIZE	/home/trinity/src/kern/dev/lamebus/emu.c	84;"	d	file:
EMU_RES_EXISTS	/home/trinity/src/kern/dev/lamebus/emu.c	85;"	d	file:
EMU_RES_ISDIR	/home/trinity/src/kern/dev/lamebus/emu.c	86;"	d	file:
EMU_RES_MEDIA	/home/trinity/src/kern/dev/lamebus/emu.c	87;"	d	file:
EMU_RES_NOHANDLES	/home/trinity/src/kern/dev/lamebus/emu.c	88;"	d	file:
EMU_RES_NOSPACE	/home/trinity/src/kern/dev/lamebus/emu.c	89;"	d	file:
EMU_RES_NOTDIR	/home/trinity/src/kern/dev/lamebus/emu.c	90;"	d	file:
EMU_RES_SUCCESS	/home/trinity/src/kern/dev/lamebus/emu.c	80;"	d	file:
EMU_RES_UNKNOWN	/home/trinity/src/kern/dev/lamebus/emu.c	91;"	d	file:
EMU_RES_UNSUPP	/home/trinity/src/kern/dev/lamebus/emu.c	92;"	d	file:
EMU_ROOTHANDLE	/home/trinity/src/kern/dev/lamebus/emu.h	35;"	d
EM_386	/home/trinity/src/kern/include/elf.h	124;"	d
EM_486	/home/trinity/src/kern/include/elf.h	127;"	d
EM_68HC12	/home/trinity/src/kern/include/elf.h	156;"	d
EM_68K	/home/trinity/src/kern/include/elf.h	125;"	d
EM_860	/home/trinity/src/kern/include/elf.h	128;"	d
EM_88K	/home/trinity/src/kern/include/elf.h	126;"	d
EM_960	/home/trinity/src/kern/include/elf.h	137;"	d
EM_ALPHA	/home/trinity/src/kern/include/elf.h	144;"	d
EM_ALPHA_EXP	/home/trinity/src/kern/include/elf.h	158;"	d
EM_ARC	/home/trinity/src/kern/include/elf.h	148;"	d
EM_ARM	/home/trinity/src/kern/include/elf.h	143;"	d
EM_COLDFIRE	/home/trinity/src/kern/include/elf.h	155;"	d
EM_FR20	/home/trinity/src/kern/include/elf.h	140;"	d
EM_H8S	/home/trinity/src/kern/include/elf.h	151;"	d
EM_H8_300	/home/trinity/src/kern/include/elf.h	149;"	d
EM_H8_300H	/home/trinity/src/kern/include/elf.h	150;"	d
EM_H8_500	/home/trinity/src/kern/include/elf.h	152;"	d
EM_IA_64	/home/trinity/src/kern/include/elf.h	153;"	d
EM_M32	/home/trinity/src/kern/include/elf.h	122;"	d
EM_MACHINE	/home/trinity/src/kern/arch/mips/include/elf.h	39;"	d
EM_MIPS	/home/trinity/src/kern/include/elf.h	129;"	d
EM_MIPS_RS3_LE	/home/trinity/src/kern/include/elf.h	131;"	d
EM_MIPS_X	/home/trinity/src/kern/include/elf.h	154;"	d
EM_NCUBE	/home/trinity/src/kern/include/elf.h	134;"	d
EM_NONE	/home/trinity/src/kern/include/elf.h	121;"	d
EM_NUM	/home/trinity/src/kern/include/elf.h	159;"	d
EM_PARISC	/home/trinity/src/kern/include/elf.h	133;"	d
EM_PPC	/home/trinity/src/kern/include/elf.h	138;"	d
EM_RCE	/home/trinity/src/kern/include/elf.h	142;"	d
EM_RH32	/home/trinity/src/kern/include/elf.h	141;"	d
EM_RS6000	/home/trinity/src/kern/include/elf.h	132;"	d
EM_S370	/home/trinity/src/kern/include/elf.h	130;"	d
EM_SH	/home/trinity/src/kern/include/elf.h	145;"	d
EM_SPARC	/home/trinity/src/kern/include/elf.h	123;"	d
EM_SPARC32PLUS	/home/trinity/src/kern/include/elf.h	136;"	d
EM_SPARCV9	/home/trinity/src/kern/include/elf.h	146;"	d
EM_TRICORE	/home/trinity/src/kern/include/elf.h	147;"	d
EM_V800	/home/trinity/src/kern/include/elf.h	139;"	d
EM_VAX	/home/trinity/src/kern/include/elf.h	157;"	d
EM_VPP500	/home/trinity/src/kern/include/elf.h	135;"	d
ENAMETOOLONG	/home/trinity/src/kern/include/kern/errno.h	51;"	d
ENETDOWN	/home/trinity/src/kern/include/kern/errno.h	100;"	d
ENETUNREACH	/home/trinity/src/kern/include/kern/errno.h	101;"	d
ENFILE	/home/trinity/src/kern/include/kern/errno.h	73;"	d
ENODEV	/home/trinity/src/kern/include/kern/errno.h	69;"	d
ENOENT	/home/trinity/src/kern/include/kern/errno.h	63;"	d
ENOEXEC	/home/trinity/src/kern/include/kern/errno.h	57;"	d
ENOMEM	/home/trinity/src/kern/include/kern/errno.h	47;"	d
ENOPROTOOPT	/home/trinity/src/kern/include/kern/errno.h	97;"	d
ENOSPC	/home/trinity/src/kern/include/kern/errno.h	80;"	d
ENOSYS	/home/trinity/src/kern/include/kern/errno.h	45;"	d
ENOTCONN	/home/trinity/src/kern/include/kern/errno.h	90;"	d
ENOTDIR	/home/trinity/src/kern/include/kern/errno.h	61;"	d
ENOTEMPTY	/home/trinity/src/kern/include/kern/errno.h	65;"	d
ENOTSOCK	/home/trinity/src/kern/include/kern/errno.h	87;"	d
ENOTSUP	/home/trinity/src/kern/include/kern/errno.h	108;"	d
ENPROC	/home/trinity/src/kern/include/kern/errno.h	56;"	d
ENXIO	/home/trinity/src/kern/include/kern/errno.h	70;"	d
EPERM	/home/trinity/src/kern/include/kern/errno.h	53;"	d
EPFNOSUPPORT	/home/trinity/src/kern/include/kern/errno.h	92;"	d
EPIPE	/home/trinity/src/kern/include/kern/errno.h	78;"	d
EPROTONOSUPPORT	/home/trinity/src/kern/include/kern/errno.h	94;"	d
EPROTOTYPE	/home/trinity/src/kern/include/kern/errno.h	95;"	d
ERANGE	/home/trinity/src/kern/include/kern/errno.h	85;"	d
EROFS	/home/trinity/src/kern/include/kern/errno.h	79;"	d
ESHUTDOWN	/home/trinity/src/kern/include/kern/errno.h	91;"	d
ESOCKTNOSUPPORT	/home/trinity/src/kern/include/kern/errno.h	93;"	d
ESPIPE	/home/trinity/src/kern/include/kern/errno.h	77;"	d
ESRCH	/home/trinity/src/kern/include/kern/errno.h	59;"	d
ETIMEDOUT	/home/trinity/src/kern/include/kern/errno.h	105;"	d
ET_CORE	/home/trinity/src/kern/include/elf.h	115;"	d
ET_DYN	/home/trinity/src/kern/include/elf.h	114;"	d
ET_EXEC	/home/trinity/src/kern/include/elf.h	113;"	d
ET_NONE	/home/trinity/src/kern/include/elf.h	111;"	d
ET_NUM	/home/trinity/src/kern/include/elf.h	116;"	d
ET_REL	/home/trinity/src/kern/include/elf.h	112;"	d
EV_CURRENT	/home/trinity/src/kern/include/elf.h	100;"	d
EV_NONE	/home/trinity/src/kern/include/elf.h	99;"	d
EXADDR_GENERAL	/home/trinity/src/kern/arch/mips/include/specialreg.h	114;"	d
EXADDR_UTLB	/home/trinity/src/kern/arch/mips/include/specialreg.h	113;"	d
EXDEV	/home/trinity/src/kern/include/kern/errno.h	68;"	d
EX_ADEL	/home/trinity/src/kern/arch/mips/include/trapframe.h	85;"	d
EX_ADES	/home/trinity/src/kern/arch/mips/include/trapframe.h	86;"	d
EX_BP	/home/trinity/src/kern/arch/mips/include/trapframe.h	90;"	d
EX_CPU	/home/trinity/src/kern/arch/mips/include/trapframe.h	92;"	d
EX_DBE	/home/trinity/src/kern/arch/mips/include/trapframe.h	88;"	d
EX_IBE	/home/trinity/src/kern/arch/mips/include/trapframe.h	87;"	d
EX_IRQ	/home/trinity/src/kern/arch/mips/include/trapframe.h	81;"	d
EX_MOD	/home/trinity/src/kern/arch/mips/include/trapframe.h	82;"	d
EX_OVF	/home/trinity/src/kern/arch/mips/include/trapframe.h	93;"	d
EX_RI	/home/trinity/src/kern/arch/mips/include/trapframe.h	91;"	d
EX_SYS	/home/trinity/src/kern/arch/mips/include/trapframe.h	89;"	d
EX_TLBL	/home/trinity/src/kern/arch/mips/include/trapframe.h	83;"	d
EX_TLBS	/home/trinity/src/kern/arch/mips/include/trapframe.h	84;"	d
Elf32_Ehdr	/home/trinity/src/kern/include/elf.h	/^} Elf32_Ehdr;$/;"	t	typeref:struct:__anon1
Elf32_Phdr	/home/trinity/src/kern/include/elf.h	/^} Elf32_Phdr;$/;"	t	typeref:struct:__anon2
Elf_Ehdr	/home/trinity/src/kern/include/elf.h	/^typedef Elf32_Ehdr Elf_Ehdr;$/;"	t
Elf_Phdr	/home/trinity/src/kern/include/elf.h	/^typedef Elf32_Phdr Elf_Phdr;$/;"	t
FAKE_MAGIC	/home/trinity/src/kern/test/threadlisttest.c	52;"	d	file:
FD_CLOEXEC	/home/trinity/src/kern/include/kern/fcntl.h	83;"	d
FEMALE	/home/trinity/src/kern/test/synchprobs.c	72;"	d	file:
FILENAME	/home/trinity/src/kern/test/fstest.c	54;"	d	file:
FSOP_GETROOT	/home/trinity/src/kern/include/fs.h	84;"	d
FSOP_GETVOLNAME	/home/trinity/src/kern/include/fs.h	83;"	d
FSOP_SYNC	/home/trinity/src/kern/include/fs.h	82;"	d
FSOP_UNMOUNT	/home/trinity/src/kern/include/fs.h	85;"	d
F_DUPFD	/home/trinity/src/kern/include/kern/fcntl.h	71;"	d
F_GETFD	/home/trinity/src/kern/include/kern/fcntl.h	72;"	d
F_GETFL	/home/trinity/src/kern/include/kern/fcntl.h	74;"	d
F_GETLK	/home/trinity/src/kern/include/kern/fcntl.h	78;"	d
F_GETOWN	/home/trinity/src/kern/include/kern/fcntl.h	76;"	d
F_RDLCK	/home/trinity/src/kern/include/kern/fcntl.h	86;"	d
F_SETFD	/home/trinity/src/kern/include/kern/fcntl.h	73;"	d
F_SETFL	/home/trinity/src/kern/include/kern/fcntl.h	75;"	d
F_SETLK	/home/trinity/src/kern/include/kern/fcntl.h	79;"	d
F_SETLKW	/home/trinity/src/kern/include/kern/fcntl.h	80;"	d
F_SETOWN	/home/trinity/src/kern/include/kern/fcntl.h	77;"	d
F_UNLCK	/home/trinity/src/kern/include/kern/fcntl.h	88;"	d
F_WRLCK	/home/trinity/src/kern/include/kern/fcntl.h	87;"	d
GET_STATUS	/home/trinity/src/kern/arch/mips/thread/cpu.c	203;"	d	file:
GO_STRAIGHT	/home/trinity/src/kern/test/synchprobs.c	419;"	d	file:
GROUP_VERSION	/home/trinity/src/kern/include/version.h	42;"	d
GUARDS	/home/trinity/src/kern/vm/kmalloc.c	120;"	d	file:
GUARD_FILLBYTE	/home/trinity/src/kern/vm/kmalloc.c	357;"	d	file:
GUARD_HALFWORD	/home/trinity/src/kern/vm/kmalloc.c	359;"	d	file:
GUARD_OVERHEAD	/home/trinity/src/kern/vm/kmalloc.c	362;"	d	file:
GUARD_OVERHEAD	/home/trinity/src/kern/vm/kmalloc.c	442;"	d	file:
GUARD_PTROFFSET	/home/trinity/src/kern/vm/kmalloc.c	365;"	d	file:
GUARD_RETBYTE	/home/trinity/src/kern/vm/kmalloc.c	355;"	d	file:
HANGMAN_ACQUIRE	/home/trinity/src/kern/include/hangman.h	65;"	d
HANGMAN_ACQUIRE	/home/trinity/src/kern/include/hangman.h	79;"	d
HANGMAN_ACTOR	/home/trinity/src/kern/include/cpu.h	/^	HANGMAN_ACTOR(c_hangman);$/;"	p	struct:cpu	access:public	signature:(c_hangman)
HANGMAN_ACTOR	/home/trinity/src/kern/include/hangman.h	56;"	d
HANGMAN_ACTOR	/home/trinity/src/kern/include/hangman.h	70;"	d
HANGMAN_ACTOR	/home/trinity/src/kern/include/thread.h	/^	HANGMAN_ACTOR(t_hangman);	\/* Deadlock detector hook *\/$/;"	p	struct:thread	access:public	signature:(t_hangman)
HANGMAN_ACTORINIT	/home/trinity/src/kern/include/hangman.h	59;"	d
HANGMAN_ACTORINIT	/home/trinity/src/kern/include/hangman.h	73;"	d
HANGMAN_H	/home/trinity/src/kern/include/hangman.h	31;"	d
HANGMAN_LOCKABLE	/home/trinity/src/kern/include/hangman.h	57;"	d
HANGMAN_LOCKABLE	/home/trinity/src/kern/include/hangman.h	71;"	d
HANGMAN_LOCKABLE	/home/trinity/src/kern/include/spinlock.h	/^	HANGMAN_LOCKABLE(splk_hangman);     \/* Deadlock detector hook. *\/$/;"	p	struct:spinlock	access:public	signature:(splk_hangman)
HANGMAN_LOCKABLE	/home/trinity/src/kern/include/synch.h	/^        HANGMAN_LOCKABLE(lk_hangman);   \/* Deadlock detector hook. *\/$/;"	p	struct:lock	access:public	signature:(lk_hangman)
HANGMAN_LOCKABLEINIT	/home/trinity/src/kern/include/hangman.h	60;"	d
HANGMAN_LOCKABLEINIT	/home/trinity/src/kern/include/hangman.h	74;"	d
HANGMAN_LOCKABLE_INITIALIZER	/home/trinity/src/kern/include/hangman.h	62;"	d
HANGMAN_LOCKABLE_INITIALIZER	/home/trinity/src/kern/include/hangman.h	76;"	d
HANGMAN_RELEASE	/home/trinity/src/kern/include/hangman.h	66;"	d
HANGMAN_RELEASE	/home/trinity/src/kern/include/hangman.h	80;"	d
HANGMAN_WAIT	/home/trinity/src/kern/include/hangman.h	64;"	d
HANGMAN_WAIT	/home/trinity/src/kern/include/hangman.h	78;"	d
HIGH_VERSION	/home/trinity/src/kern/dev/lamebus/lnet_att.c	38;"	d	file:
HIGH_VERSION	/home/trinity/src/kern/dev/lamebus/lscreen_att.c	42;"	d	file:
HZ	/home/trinity/src/kern/include/clock.h	46;"	d
INCLUDES	/home/trinity/src/kern/Makefile	/^INCLUDES=\\$/;"	m
INIT_CURCPU	/home/trinity/src/kern/arch/mips/include/current.h	71;"	d
INLINE	/home/trinity/src/kern/include/cdefs.h	129;"	d
INLINE	/home/trinity/src/kern/include/cdefs.h	133;"	d
INLINE	/home/trinity/src/kern/include/cdefs.h	137;"	d
INUSE_WORDS	/home/trinity/src/kern/vm/kmalloc.c	194;"	d	file:
INVALID_OFFSET	/home/trinity/src/kern/vm/kmalloc.c	156;"	d	file:
IOV_MAX	/home/trinity/src/kern/include/limits.h	50;"	d
IPI_OFFLINE	/home/trinity/src/kern/include/cpu.h	166;"	d
IPI_PANIC	/home/trinity/src/kern/include/cpu.h	165;"	d
IPI_TLBSHOOTDOWN	/home/trinity/src/kern/include/cpu.h	168;"	d
IPI_UNIDLE	/home/trinity/src/kern/include/cpu.h	167;"	d
IPL_HIGH	/home/trinity/src/kern/include/spl.h	78;"	d
IPL_NONE	/home/trinity/src/kern/include/spl.h	77;"	d
ITEMSIZE	/home/trinity/src/kern/test/kmalloctest.c	64;"	d	file:
ITERATIONS	/home/trinity/src/kern/test/kmalloctest.c	321;"	d	file:
ITIMER_PROF	/home/trinity/src/kern/include/kern/time.h	61;"	d
ITIMER_REAL	/home/trinity/src/kern/include/kern/time.h	59;"	d
ITIMER_VIRTUAL	/home/trinity/src/kern/include/kern/time.h	60;"	d
KASSERT	/home/trinity/src/kern/include/lib.h	63;"	d
KASSERT	/home/trinity/src/kern/include/lib.h	65;"	d
KDEBUG	/home/trinity/src/kern/compile/DUMBVM/Makefile	/^KDEBUG=-g -Og$/;"	m
KERNEL_PROMPT	/home/trinity/src/kern/include/prompt.h	45;"	d
KM5_ITERATIONS	/home/trinity/src/kern/test/kmalloctest.c	439;"	d	file:
KTOP	/home/trinity/src/kern/compile/DUMBVM/Makefile	/^KTOP=..\/..$/;"	m
LABELS	/home/trinity/src/kern/vm/kmalloc.c	121;"	d	file:
LABEL_OVERHEAD	/home/trinity/src/kern/vm/kmalloc.c	615;"	d	file:
LABEL_OVERHEAD	/home/trinity/src/kern/vm/kmalloc.c	698;"	d	file:
LABEL_PTROFFSET	/home/trinity/src/kern/vm/kmalloc.c	614;"	d	file:
LAMEBUS_IPI_BIT	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	294;"	d	file:
LAMEBUS_IRQ_BIT	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	293;"	d	file:
LARGEST_SUBPAGE_SIZE	/home/trinity/src/kern/vm/kmalloc.c	134;"	d	file:
LBCS161_DISK	/home/trinity/src/kern/dev/lamebus/lamebus.h	49;"	d
LBCS161_EMUFS	/home/trinity/src/kern/dev/lamebus/lamebus.h	53;"	d
LBCS161_MPBUSCTL	/home/trinity/src/kern/dev/lamebus/lamebus.h	56;"	d
LBCS161_NET	/home/trinity/src/kern/dev/lamebus/lamebus.h	52;"	d
LBCS161_RANDOM	/home/trinity/src/kern/dev/lamebus/lamebus.h	55;"	d
LBCS161_SCREEN	/home/trinity/src/kern/dev/lamebus/lamebus.h	51;"	d
LBCS161_SERIAL	/home/trinity/src/kern/dev/lamebus/lamebus.h	50;"	d
LBCS161_TIMER	/home/trinity/src/kern/dev/lamebus/lamebus.h	48;"	d
LBCS161_TRACE	/home/trinity/src/kern/dev/lamebus/lamebus.h	54;"	d
LBCS161_UPBUSCTL	/home/trinity/src/kern/dev/lamebus/lamebus.h	47;"	d
LB_BASEADDR	/home/trinity/src/kern/arch/sys161/include/bus.h	57;"	d
LB_CONFIG_SIZE	/home/trinity/src/kern/dev/lamebus/lamebus.h	65;"	d
LB_CONTROLLER_SLOT	/home/trinity/src/kern/dev/lamebus/lamebus.h	59;"	d
LB_CTLCPU_OFFSET	/home/trinity/src/kern/dev/lamebus/lamebus.h	71;"	d
LB_CTLCPU_SIZE	/home/trinity/src/kern/dev/lamebus/lamebus.h	68;"	d
LB_NSLOTS	/home/trinity/src/kern/dev/lamebus/lamebus.h	62;"	d
LB_SLOT_SIZE	/home/trinity/src/kern/dev/lamebus/lamebus.h	74;"	d
LB_VENDOR_CS161	/home/trinity/src/kern/dev/lamebus/lamebus.h	44;"	d
LHD_BUFFER	/home/trinity/src/kern/dev/lamebus/lhd.c	61;"	d	file:
LHD_IDLE	/home/trinity/src/kern/dev/lamebus/lhd.c	52;"	d	file:
LHD_INVSECT	/home/trinity/src/kern/dev/lamebus/lhd.c	55;"	d	file:
LHD_ISWRITE	/home/trinity/src/kern/dev/lamebus/lhd.c	57;"	d	file:
LHD_MEDIA	/home/trinity/src/kern/dev/lamebus/lhd.c	56;"	d	file:
LHD_OK	/home/trinity/src/kern/dev/lamebus/lhd.c	54;"	d	file:
LHD_REG_NSECT	/home/trinity/src/kern/dev/lamebus/lhd.c	46;"	d	file:
LHD_REG_RPM	/home/trinity/src/kern/dev/lamebus/lhd.c	49;"	d	file:
LHD_REG_SECT	/home/trinity/src/kern/dev/lamebus/lhd.c	48;"	d	file:
LHD_REG_STAT	/home/trinity/src/kern/dev/lamebus/lhd.c	47;"	d	file:
LHD_SECTSIZE	/home/trinity/src/kern/dev/lamebus/lhd.h	38;"	d
LHD_STATEMASK	/home/trinity/src/kern/dev/lamebus/lhd.c	58;"	d	file:
LHD_WORKING	/home/trinity/src/kern/dev/lamebus/lhd.c	53;"	d	file:
LOCK_EX	/home/trinity/src/kern/include/kern/fcntl.h	62;"	d
LOCK_NB	/home/trinity/src/kern/include/kern/fcntl.h	64;"	d
LOCK_SH	/home/trinity/src/kern/include/kern/fcntl.h	61;"	d
LOCK_UN	/home/trinity/src/kern/include/kern/fcntl.h	63;"	d
LOGIN_NAME_MAX	/home/trinity/src/kern/include/limits.h	48;"	d
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/emu_att.c	41;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/lhd_att.c	40;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/lnet_att.c	36;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/lrandom_att.c	37;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/lscreen_att.c	40;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/lser_att.c	37;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/ltimer_att.c	40;"	d	file:
LOW_VERSION	/home/trinity/src/kern/dev/lamebus/ltrace_att.c	37;"	d	file:
LR_RANDMAX	/home/trinity/src/kern/dev/lamebus/lrandom.c	44;"	d	file:
LR_REG_RAND	/home/trinity/src/kern/dev/lamebus/lrandom.c	41;"	d	file:
LSCR_IRQ_ACTIVE	/home/trinity/src/kern/dev/lamebus/lscreen.c	51;"	d	file:
LSCR_IRQ_ENABLE	/home/trinity/src/kern/dev/lamebus/lscreen.c	50;"	d	file:
LSCR_REG_CHAR	/home/trinity/src/kern/dev/lamebus/lscreen.c	46;"	d	file:
LSCR_REG_POSN	/home/trinity/src/kern/dev/lamebus/lscreen.c	44;"	d	file:
LSCR_REG_RIRQ	/home/trinity/src/kern/dev/lamebus/lscreen.c	47;"	d	file:
LSCR_REG_SIZE	/home/trinity/src/kern/dev/lamebus/lscreen.c	45;"	d	file:
LSCR_SCREEN	/home/trinity/src/kern/dev/lamebus/lscreen.c	54;"	d	file:
LSER_IRQ_ACTIVE	/home/trinity/src/kern/dev/lamebus/lser.c	44;"	d	file:
LSER_IRQ_ENABLE	/home/trinity/src/kern/dev/lamebus/lser.c	43;"	d	file:
LSER_IRQ_FORCE	/home/trinity/src/kern/dev/lamebus/lser.c	45;"	d	file:
LSER_REG_CHAR	/home/trinity/src/kern/dev/lamebus/lser.c	38;"	d	file:
LSER_REG_RIRQ	/home/trinity/src/kern/dev/lamebus/lser.c	40;"	d	file:
LSER_REG_WIRQ	/home/trinity/src/kern/dev/lamebus/lser.c	39;"	d	file:
LTRACE_REG_DEBUG	/home/trinity/src/kern/dev/lamebus/ltrace.c	39;"	d	file:
LTRACE_REG_DUMP	/home/trinity/src/kern/dev/lamebus/ltrace.c	40;"	d	file:
LTRACE_REG_PROFCL	/home/trinity/src/kern/dev/lamebus/ltrace.c	43;"	d	file:
LTRACE_REG_PROFEN	/home/trinity/src/kern/dev/lamebus/ltrace.c	42;"	d	file:
LTRACE_REG_STOP	/home/trinity/src/kern/dev/lamebus/ltrace.c	41;"	d	file:
LTRACE_REG_TROFF	/home/trinity/src/kern/dev/lamebus/ltrace.c	38;"	d	file:
LTRACE_REG_TRON	/home/trinity/src/kern/dev/lamebus/ltrace.c	37;"	d	file:
LT_GRANULARITY	/home/trinity/src/kern/dev/lamebus/ltimer.c	50;"	d	file:
LT_REG_COUNT	/home/trinity/src/kern/dev/lamebus/ltimer.c	46;"	d	file:
LT_REG_IRQ	/home/trinity/src/kern/dev/lamebus/ltimer.c	45;"	d	file:
LT_REG_NSEC	/home/trinity/src/kern/dev/lamebus/ltimer.c	43;"	d	file:
LT_REG_ROE	/home/trinity/src/kern/dev/lamebus/ltimer.c	44;"	d	file:
LT_REG_SEC	/home/trinity/src/kern/dev/lamebus/ltimer.c	42;"	d	file:
LT_REG_SPKR	/home/trinity/src/kern/dev/lamebus/ltimer.c	47;"	d	file:
MAKENAME	/home/trinity/src/kern/test/fstest.c	111;"	d	file:
MALE	/home/trinity/src/kern/test/synchprobs.c	71;"	d	file:
MATCHMAKER	/home/trinity/src/kern/test/synchprobs.c	73;"	d	file:
MAXCPUS	/home/trinity/src/kern/arch/sys161/include/maxcpus.h	42;"	d
MAXMENUARGS	/home/trinity/src/kern/main/menu.c	58;"	d	file:
MAX_NAME_LENGTH	/home/trinity/src/kern/include/synch.h	76;"	d
MAX_NAME_LENGTH	/home/trinity/src/kern/include/thread.h	51;"	d
MAX_SPINNERS	/home/trinity/src/kern/test/automationtest.c	44;"	d	file:
MEMBAR_INLINE	/home/trinity/src/kern/include/membar.h	81;"	d
MEMBAR_INLINE	/home/trinity/src/kern/thread/spinlock.c	32;"	d	file:
MIGRATE_HARDCLOCKS	/home/trinity/src/kern/thread/clock.c	54;"	d	file:
MIPS_KSEG0	/home/trinity/src/kern/arch/mips/include/vm.h	52;"	d
MIPS_KSEG1	/home/trinity/src/kern/arch/mips/include/vm.h	53;"	d
MIPS_KSEG2	/home/trinity/src/kern/arch/mips/include/vm.h	54;"	d
MIPS_KUSEG	/home/trinity/src/kern/arch/mips/include/vm.h	51;"	d
MIPS_TIMER_BIT	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	295;"	d	file:
MKPAB	/home/trinity/src/kern/vm/kmalloc.c	160;"	d	file:
NAMESTRING	/home/trinity/src/kern/test/semunit.c	56;"	d	file:
NAME_MAX	/home/trinity/src/kern/include/limits.h	41;"	d
NCARS	/home/trinity/src/kern/test/synchprobs.c	414;"	d	file:
NCHUNKS	/home/trinity/src/kern/test/fstest.c	55;"	d	file:
NCREATE	/home/trinity/src/kern/test/fstest.c	58;"	d	file:
NCVLOOPS	/home/trinity/src/kern/test/synchtest.c	49;"	d	file:
NCVS	/home/trinity/src/kern/test/synchtest.c	586;"	d	file:
NGROUPS_MAX	/home/trinity/src/kern/include/limits.h	47;"	d
NLOCKLOOPS	/home/trinity/src/kern/test/synchtest.c	48;"	d	file:
NLONG	/home/trinity/src/kern/test/fstest.c	57;"	d	file:
NLOOPS	/home/trinity/src/kern/test/synchtest.c	587;"	d	file:
NMATING	/home/trinity/src/kern/test/synchprobs.c	70;"	d	file:
NPAGEREFS_PER_PAGE	/home/trinity/src/kern/vm/kmalloc.c	183;"	d	file:
NSEMLOOPS	/home/trinity/src/kern/test/synchtest.c	47;"	d	file:
NSIZES	/home/trinity/src/kern/vm/kmalloc.c	130;"	d	file:
NTH	/home/trinity/src/kern/test/arraytest.c	37;"	d	file:
NTHREADS	/home/trinity/src/kern/test/fstest.c	56;"	d	file:
NTHREADS	/home/trinity/src/kern/test/kmalloctest.c	65;"	d	file:
NTHREADS	/home/trinity/src/kern/test/synchtest.c	50;"	d	file:
NTHREADS	/home/trinity/src/kern/test/threadtest.c	39;"	d	file:
NTRAPCODES	/home/trinity/src/kern/arch/mips/locore/trap.c	52;"	d	file:
NTRIES	/home/trinity/src/kern/test/kmalloctest.c	63;"	d	file:
NULL	/home/trinity/src/kern/include/types.h	146;"	d
NUMNAMES	/home/trinity/src/kern/test/threadlisttest.c	36;"	d	file:
NUM_KM3_SIZES	/home/trinity/src/kern/test/kmalloctest.c	190;"	d	file:
NUM_KM4_SIZES	/home/trinity/src/kern/test/kmalloctest.c	320;"	d	file:
NUM_PAGEREFPAGES	/home/trinity/src/kern/vm/kmalloc.c	212;"	d	file:
NUM_QUADRANTS	/home/trinity/src/kern/test/synchprobs.c	415;"	d	file:
NUM_TLB	/home/trinity/src/kern/arch/mips/include/tlb.h	102;"	d
NWAITCHANS	/home/trinity/src/kern/test/tt3.c	53;"	d	file:
N_TESTS_1	/home/trinity/src/kern/test/hmacunit.c	78;"	d	file:
OPEN_MAX	/home/trinity/src/kern/include/limits.h	49;"	d
OPT_AUTOMATIONTEST	/home/trinity/src/kern/compile/DUMBVM/opt-automationtest.h	4;"	d
OPT_DUMBVM	/home/trinity/src/kern/compile/DUMBVM/opt-dumbvm.h	4;"	d
OPT_HANGMAN	/home/trinity/src/kern/compile/DUMBVM/opt-hangman.h	4;"	d
OPT_NET	/home/trinity/src/kern/compile/DUMBVM/opt-net.h	4;"	d
OPT_NETFS	/home/trinity/src/kern/compile/DUMBVM/opt-netfs.h	4;"	d
OPT_NOASSERTS	/home/trinity/src/kern/compile/DUMBVM/opt-noasserts.h	4;"	d
OPT_SEMFS	/home/trinity/src/kern/compile/DUMBVM/opt-semfs.h	4;"	d
OPT_SFS	/home/trinity/src/kern/compile/DUMBVM/opt-sfs.h	4;"	d
OPT_SYNCHPROBS	/home/trinity/src/kern/compile/DUMBVM/opt-synchprobs.h	4;"	d
O_ACCMODE	/home/trinity/src/kern/include/kern/fcntl.h	54;"	d
O_APPEND	/home/trinity/src/kern/include/kern/fcntl.h	50;"	d
O_CREAT	/home/trinity/src/kern/include/kern/fcntl.h	47;"	d
O_EXCL	/home/trinity/src/kern/include/kern/fcntl.h	48;"	d
O_NOCTTY	/home/trinity/src/kern/include/kern/fcntl.h	51;"	d
O_RDONLY	/home/trinity/src/kern/include/kern/fcntl.h	43;"	d
O_RDWR	/home/trinity/src/kern/include/kern/fcntl.h	45;"	d
O_TRUNC	/home/trinity/src/kern/include/kern/fcntl.h	49;"	d
O_WRONLY	/home/trinity/src/kern/include/kern/fcntl.h	44;"	d
P	/home/trinity/src/kern/include/synch.h	/^void P(struct semaphore *);$/;"	p	signature:(struct semaphore *)
P	/home/trinity/src/kern/thread/synch.c	/^P(struct semaphore *sem)$/;"	f	signature:(struct semaphore *sem)
PADDR_TO_KVADDR	/home/trinity/src/kern/arch/mips/include/vm.h	68;"	d
PAGE_FRAME	/home/trinity/src/kern/arch/mips/include/vm.h	39;"	d
PAGE_SIZE	/home/trinity/src/kern/arch/mips/include/vm.h	38;"	d
PASSED_CAR	/home/trinity/src/kern/test/synchprobs.c	417;"	d	file:
PATH_MAX	/home/trinity/src/kern/include/limits.h	42;"	d
PF_INET	/home/trinity/src/kern/include/kern/socket.h	56;"	d
PF_INET6	/home/trinity/src/kern/include/kern/socket.h	57;"	d
PF_R	/home/trinity/src/kern/include/elf.h	191;"	d
PF_UNIX	/home/trinity/src/kern/include/kern/socket.h	55;"	d
PF_UNSPEC	/home/trinity/src/kern/include/kern/socket.h	54;"	d
PF_W	/home/trinity/src/kern/include/elf.h	192;"	d
PF_X	/home/trinity/src/kern/include/elf.h	193;"	d
PID_MAX	/home/trinity/src/kern/include/limits.h	45;"	d
PID_MIN	/home/trinity/src/kern/include/limits.h	44;"	d
PIPE_BUF	/home/trinity/src/kern/include/limits.h	46;"	d
PRIO_MAX	/home/trinity/src/kern/include/kern/resource.h	42;"	d
PRIO_MIN	/home/trinity/src/kern/include/kern/resource.h	41;"	d
PRIO_PGRP	/home/trinity/src/kern/include/kern/resource.h	46;"	d
PRIO_PROCESS	/home/trinity/src/kern/include/kern/resource.h	45;"	d
PRIO_USER	/home/trinity/src/kern/include/kern/resource.h	47;"	d
PROBLEMS_MAX_SPINNER	/home/trinity/src/kern/test/synchprobs.c	16;"	d	file:
PROBLEMS_MAX_YIELDER	/home/trinity/src/kern/test/synchprobs.c	15;"	d	file:
PROF_VERSION	/home/trinity/src/kern/dev/lamebus/ltrace_att.c	41;"	d	file:
PROGRESS	/home/trinity/src/kern/test/kmalloctest.c	67;"	d	file:
PR_BLOCKTYPE	/home/trinity/src/kern/vm/kmalloc.c	159;"	d	file:
PR_PAGEADDR	/home/trinity/src/kern/vm/kmalloc.c	158;"	d	file:
PT_DYNAMIC	/home/trinity/src/kern/include/elf.h	182;"	d
PT_INTERP	/home/trinity/src/kern/include/elf.h	183;"	d
PT_LOAD	/home/trinity/src/kern/include/elf.h	181;"	d
PT_MIPS_REGINFO	/home/trinity/src/kern/include/elf.h	188;"	d
PT_NOTE	/home/trinity/src/kern/include/elf.h	184;"	d
PT_NULL	/home/trinity/src/kern/include/elf.h	180;"	d
PT_NUM	/home/trinity/src/kern/include/elf.h	187;"	d
PT_PHDR	/home/trinity/src/kern/include/elf.h	186;"	d
PT_SHLIB	/home/trinity/src/kern/include/elf.h	185;"	d
RANDOM_MAX	/home/trinity/src/kern/include/lib.h	118;"	d
RB_HALT	/home/trinity/src/kern/include/kern/reboot.h	41;"	d
RB_POWEROFF	/home/trinity/src/kern/include/kern/reboot.h	42;"	d
RB_REBOOT	/home/trinity/src/kern/include/kern/reboot.h	40;"	d
REG_HANDLE	/home/trinity/src/kern/dev/lamebus/emu.c	59;"	d	file:
REG_IOLEN	/home/trinity/src/kern/dev/lamebus/emu.c	61;"	d	file:
REG_OFFSET	/home/trinity/src/kern/dev/lamebus/emu.c	60;"	d	file:
REG_OPER	/home/trinity/src/kern/dev/lamebus/emu.c	62;"	d	file:
REG_RESULT	/home/trinity/src/kern/dev/lamebus/emu.c	63;"	d	file:
RLIMIT_CORE	/home/trinity/src/kern/include/kern/resource.h	81;"	d
RLIMIT_CPU	/home/trinity/src/kern/include/kern/resource.h	76;"	d
RLIMIT_DATA	/home/trinity/src/kern/include/kern/resource.h	77;"	d
RLIMIT_FSIZE	/home/trinity/src/kern/include/kern/resource.h	82;"	d
RLIMIT_MEMLOCK	/home/trinity/src/kern/include/kern/resource.h	79;"	d
RLIMIT_NOFILE	/home/trinity/src/kern/include/kern/resource.h	75;"	d
RLIMIT_NPROC	/home/trinity/src/kern/include/kern/resource.h	74;"	d
RLIMIT_RSS	/home/trinity/src/kern/include/kern/resource.h	80;"	d
RLIMIT_STACK	/home/trinity/src/kern/include/kern/resource.h	78;"	d
RLIM_INFINITY	/home/trinity/src/kern/include/kern/resource.h	90;"	d
ROUNDUP	/home/trinity/src/kern/include/lib.h	197;"	d
RUSAGE_CHILDREN	/home/trinity/src/kern/include/kern/resource.h	51;"	d
RUSAGE_SELF	/home/trinity/src/kern/include/kern/resource.h	50;"	d
R_MIPS_16	/home/trinity/src/kern/arch/mips/include/elf.h	43;"	d
R_MIPS_26	/home/trinity/src/kern/arch/mips/include/elf.h	46;"	d
R_MIPS_32	/home/trinity/src/kern/arch/mips/include/elf.h	44;"	d
R_MIPS_CALL16	/home/trinity/src/kern/arch/mips/include/elf.h	53;"	d
R_MIPS_GOT16	/home/trinity/src/kern/arch/mips/include/elf.h	51;"	d
R_MIPS_GPREL16	/home/trinity/src/kern/arch/mips/include/elf.h	49;"	d
R_MIPS_GPREL32	/home/trinity/src/kern/arch/mips/include/elf.h	54;"	d
R_MIPS_HI16	/home/trinity/src/kern/arch/mips/include/elf.h	47;"	d
R_MIPS_LITERAL	/home/trinity/src/kern/arch/mips/include/elf.h	50;"	d
R_MIPS_LO16	/home/trinity/src/kern/arch/mips/include/elf.h	48;"	d
R_MIPS_NONE	/home/trinity/src/kern/arch/mips/include/elf.h	42;"	d
R_MIPS_PC16	/home/trinity/src/kern/arch/mips/include/elf.h	52;"	d
R_MIPS_REL32	/home/trinity/src/kern/arch/mips/include/elf.h	45;"	d
SAME_STACK	/home/trinity/src/kern/include/thread.h	57;"	d
SA_ONSTACK	/home/trinity/src/kern/include/kern/signal.h	95;"	d
SA_RESETHAND	/home/trinity/src/kern/include/kern/signal.h	97;"	d
SA_RESTART	/home/trinity/src/kern/include/kern/signal.h	96;"	d
SCHEDULE_HARDCLOCKS	/home/trinity/src/kern/thread/clock.c	53;"	d	file:
SECRET	/home/trinity/src/kern/include/kern/secret.h	48;"	d
SECRET_TESTING	/home/trinity/src/kern/include/kern/secret.h	47;"	d
SEEK_CUR	/home/trinity/src/kern/include/kern/seek.h	43;"	d
SEEK_END	/home/trinity/src/kern/include/kern/seek.h	44;"	d
SEEK_SET	/home/trinity/src/kern/include/kern/seek.h	42;"	d
SEMFS_H	/home/trinity/src/kern/fs/semfs/semfs.h	31;"	d
SEMFS_INLINE	/home/trinity/src/kern/fs/semfs/semfs.h	38;"	d
SEMFS_INLINE	/home/trinity/src/kern/fs/semfs/semfs_obj.c	34;"	d	file:
SEMFS_ROOTDIR	/home/trinity/src/kern/fs/semfs/semfs.h	45;"	d
SET_STATUS	/home/trinity/src/kern/arch/mips/thread/cpu.c	204;"	d	file:
SFSUIO	/home/trinity/src/kern/fs/sfs/sfsprivate.h	41;"	d
SFS_BITSPERBLOCK	/home/trinity/src/kern/include/kern/sfs.h	54;"	d
SFS_BLOCKSIZE	/home/trinity/src/kern/include/kern/sfs.h	40;"	d
SFS_DBPERIDB	/home/trinity/src/kern/include/kern/sfs.h	46;"	d
SFS_FREEMAPBITS	/home/trinity/src/kern/include/kern/sfs.h	60;"	d
SFS_FREEMAPBLOCKS	/home/trinity/src/kern/include/kern/sfs.h	63;"	d
SFS_FREEMAP_START	/home/trinity/src/kern/include/kern/sfs.h	49;"	d
SFS_FS_FREEMAPBITS	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	50;"	d	file:
SFS_FS_FREEMAPBLOCKS	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	51;"	d	file:
SFS_FS_NBLOCKS	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	49;"	d	file:
SFS_MAGIC	/home/trinity/src/kern/include/kern/sfs.h	39;"	d
SFS_NAMELEN	/home/trinity/src/kern/include/kern/sfs.h	47;"	d
SFS_NDINDIRECT	/home/trinity/src/kern/include/kern/sfs.h	44;"	d
SFS_NDIRECT	/home/trinity/src/kern/include/kern/sfs.h	42;"	d
SFS_NINDIRECT	/home/trinity/src/kern/include/kern/sfs.h	43;"	d
SFS_NOINO	/home/trinity/src/kern/include/kern/sfs.h	50;"	d
SFS_NTINDIRECT	/home/trinity/src/kern/include/kern/sfs.h	45;"	d
SFS_ROOTDIR_INO	/home/trinity/src/kern/include/kern/sfs.h	51;"	d
SFS_ROUNDUP	/home/trinity/src/kern/include/kern/sfs.h	57;"	d
SFS_SUPER_BLOCK	/home/trinity/src/kern/include/kern/sfs.h	48;"	d
SFS_TYPE_DIR	/home/trinity/src/kern/include/kern/sfs.h	68;"	d
SFS_TYPE_FILE	/home/trinity/src/kern/include/kern/sfs.h	67;"	d
SFS_TYPE_INVAL	/home/trinity/src/kern/include/kern/sfs.h	66;"	d
SFS_VOLNAME_SIZE	/home/trinity/src/kern/include/kern/sfs.h	41;"	d
SIGABRT	/home/trinity/src/kern/include/kern/signal.h	61;"	d
SIGALRM	/home/trinity/src/kern/include/kern/signal.h	69;"	d
SIGBUS	/home/trinity/src/kern/include/kern/signal.h	65;"	d
SIGCHLD	/home/trinity/src/kern/include/kern/signal.h	75;"	d
SIGCONT	/home/trinity/src/kern/include/kern/signal.h	74;"	d
SIGEMT	/home/trinity/src/kern/include/kern/signal.h	62;"	d
SIGFPE	/home/trinity/src/kern/include/kern/signal.h	63;"	d
SIGHUP	/home/trinity/src/kern/include/kern/signal.h	56;"	d
SIGILL	/home/trinity/src/kern/include/kern/signal.h	59;"	d
SIGINFO	/home/trinity/src/kern/include/kern/signal.h	84;"	d
SIGINT	/home/trinity/src/kern/include/kern/signal.h	57;"	d
SIGIO	/home/trinity/src/kern/include/kern/signal.h	78;"	d
SIGKILL	/home/trinity/src/kern/include/kern/signal.h	64;"	d
SIGPIPE	/home/trinity/src/kern/include/kern/signal.h	68;"	d
SIGPROF	/home/trinity/src/kern/include/kern/signal.h	82;"	d
SIGPWR	/home/trinity/src/kern/include/kern/signal.h	87;"	d
SIGQUIT	/home/trinity/src/kern/include/kern/signal.h	58;"	d
SIGSEGV	/home/trinity/src/kern/include/kern/signal.h	66;"	d
SIGSTOP	/home/trinity/src/kern/include/kern/signal.h	72;"	d
SIGSYS	/home/trinity/src/kern/include/kern/signal.h	67;"	d
SIGTERM	/home/trinity/src/kern/include/kern/signal.h	70;"	d
SIGTRAP	/home/trinity/src/kern/include/kern/signal.h	60;"	d
SIGTSTP	/home/trinity/src/kern/include/kern/signal.h	73;"	d
SIGTTIN	/home/trinity/src/kern/include/kern/signal.h	76;"	d
SIGTTOU	/home/trinity/src/kern/include/kern/signal.h	77;"	d
SIGURG	/home/trinity/src/kern/include/kern/signal.h	71;"	d
SIGUSR1	/home/trinity/src/kern/include/kern/signal.h	85;"	d
SIGUSR2	/home/trinity/src/kern/include/kern/signal.h	86;"	d
SIGVTALRM	/home/trinity/src/kern/include/kern/signal.h	81;"	d
SIGWINCH	/home/trinity/src/kern/include/kern/signal.h	83;"	d
SIGXCPU	/home/trinity/src/kern/include/kern/signal.h	79;"	d
SIGXFSZ	/home/trinity/src/kern/include/kern/signal.h	80;"	d
SIG_BLOCK	/home/trinity/src/kern/include/kern/signal.h	100;"	d
SIG_DFL	/home/trinity/src/kern/include/kern/signal.h	108;"	d
SIG_IGN	/home/trinity/src/kern/include/kern/signal.h	109;"	d
SIG_SETMASK	/home/trinity/src/kern/include/kern/signal.h	102;"	d
SIG_UNBLOCK	/home/trinity/src/kern/include/kern/signal.h	101;"	d
SLEEPALOT_ITERS	/home/trinity/src/kern/test/tt3.c	46;"	d	file:
SLEEPALOT_PRINTS	/home/trinity/src/kern/test/tt3.c	45;"	d	file:
SLOGAN	/home/trinity/src/kern/test/fstest.c	53;"	d	file:
SLOW	/home/trinity/src/kern/vm/kmalloc.c	118;"	d	file:
SLOW	/home/trinity/src/kern/vm/kmalloc.c	451;"	d	file:
SLOWER	/home/trinity/src/kern/vm/kmalloc.c	119;"	d	file:
SMALLEST_SUBPAGE_SIZE	/home/trinity/src/kern/vm/kmalloc.c	133;"	d	file:
SOCK_DGRAM	/home/trinity/src/kern/include/kern/socket.h	44;"	d
SOCK_RAW	/home/trinity/src/kern/include/kern/socket.h	45;"	d
SOCK_STREAM	/home/trinity/src/kern/include/kern/socket.h	43;"	d
SPINLOCK_DATA_INITIALIZER	/home/trinity/src/kern/arch/mips/include/spinlock.h	40;"	d
SPINLOCK_INITIALIZER	/home/trinity/src/kern/include/spinlock.h	68;"	d
SPINLOCK_INITIALIZER	/home/trinity/src/kern/include/spinlock.h	71;"	d
SPINLOCK_INLINE	/home/trinity/src/kern/include/spinlock.h	43;"	d
SPINLOCK_INLINE	/home/trinity/src/kern/thread/spinlock.c	31;"	d	file:
SPL_INLINE	/home/trinity/src/kern/include/spl.h	37;"	d
SPL_INLINE	/home/trinity/src/kern/thread/spl.c	31;"	d	file:
STACK_MASK	/home/trinity/src/kern/include/thread.h	54;"	d
STACK_SIZE	/home/trinity/src/kern/include/thread.h	50;"	d
STDERR_FILENO	/home/trinity/src/kern/include/kern/unistd.h	36;"	d
STDIN_FILENO	/home/trinity/src/kern/include/kern/unistd.h	34;"	d
STDOUT_FILENO	/home/trinity/src/kern/include/kern/unistd.h	35;"	d
STOP_VERSION	/home/trinity/src/kern/dev/lamebus/ltrace_att.c	39;"	d	file:
SWAP_FS	/home/trinity/src/kern/vfs/vfslist.c	86;"	d	file:
SYNCHTEST_YIELDER_MAX	/home/trinity/src/kern/test/synchtest.c	51;"	d	file:
SYS161_PRID_2X	/home/trinity/src/kern/arch/mips/thread/cpu.c	111;"	d	file:
SYS161_PRID_ORIG	/home/trinity/src/kern/arch/mips/thread/cpu.c	110;"	d	file:
SYS___getcwd	/home/trinity/src/kern/include/kern/syscall.h	139;"	d
SYS___getlogin	/home/trinity/src/kern/include/kern/syscall.h	77;"	d
SYS___setlogin	/home/trinity/src/kern/include/kern/syscall.h	78;"	d
SYS___settime	/home/trinity/src/kern/include/kern/syscall.h	190;"	d
SYS___time	/home/trinity/src/kern/include/kern/syscall.h	189;"	d
SYS__exit	/home/trinity/src/kern/include/kern/syscall.h	53;"	d
SYS_accept	/home/trinity/src/kern/include/kern/syscall.h	176;"	d
SYS_access	/home/trinity/src/kern/include/kern/syscall.h	135;"	d
SYS_bind	/home/trinity/src/kern/include/kern/syscall.h	173;"	d
SYS_chdir	/home/trinity/src/kern/include/kern/syscall.h	137;"	d
SYS_chmod	/home/trinity/src/kern/include/kern/syscall.h	157;"	d
SYS_chown	/home/trinity/src/kern/include/kern/syscall.h	158;"	d
SYS_close	/home/trinity/src/kern/include/kern/syscall.h	109;"	d
SYS_connect	/home/trinity/src/kern/include/kern/syscall.h	174;"	d
SYS_dup	/home/trinity/src/kern/include/kern/syscall.h	107;"	d
SYS_dup2	/home/trinity/src/kern/include/kern/syscall.h	108;"	d
SYS_execv	/home/trinity/src/kern/include/kern/syscall.h	52;"	d
SYS_fchdir	/home/trinity/src/kern/include/kern/syscall.h	138;"	d
SYS_fchmod	/home/trinity/src/kern/include/kern/syscall.h	159;"	d
SYS_fchown	/home/trinity/src/kern/include/kern/syscall.h	160;"	d
SYS_fcntl	/home/trinity/src/kern/include/kern/syscall.h	123;"	d
SYS_flock	/home/trinity/src/kern/include/kern/syscall.h	120;"	d
SYS_fork	/home/trinity/src/kern/include/kern/syscall.h	50;"	d
SYS_fstat	/home/trinity/src/kern/include/kern/syscall.h	150;"	d
SYS_fsync	/home/trinity/src/kern/include/kern/syscall.h	122;"	d
SYS_ftruncate	/home/trinity/src/kern/include/kern/syscall.h	121;"	d
SYS_futimes	/home/trinity/src/kern/include/kern/syscall.h	154;"	d
SYS_getdirentry	/home/trinity/src/kern/include/kern/syscall.h	114;"	d
SYS_getgroups	/home/trinity/src/kern/include/kern/syscall.h	75;"	d
SYS_getpeername	/home/trinity/src/kern/include/kern/syscall.h	180;"	d
SYS_getpid	/home/trinity/src/kern/include/kern/syscall.h	55;"	d
SYS_getppid	/home/trinity/src/kern/include/kern/syscall.h	56;"	d
SYS_getresgid	/home/trinity/src/kern/include/kern/syscall.h	73;"	d
SYS_getresuid	/home/trinity/src/kern/include/kern/syscall.h	71;"	d
SYS_getsockname	/home/trinity/src/kern/include/kern/syscall.h	179;"	d
SYS_getsockopt	/home/trinity/src/kern/include/kern/syscall.h	181;"	d
SYS_ioctl	/home/trinity/src/kern/include/kern/syscall.h	124;"	d
SYS_issetugid	/home/trinity/src/kern/include/kern/syscall.h	70;"	d
SYS_kill	/home/trinity/src/kern/include/kern/syscall.h	80;"	d
SYS_lchmod	/home/trinity/src/kern/include/kern/syscall.h	161;"	d
SYS_lchown	/home/trinity/src/kern/include/kern/syscall.h	162;"	d
SYS_link	/home/trinity/src/kern/include/kern/syscall.h	129;"	d
SYS_listen	/home/trinity/src/kern/include/kern/syscall.h	175;"	d
SYS_lseek	/home/trinity/src/kern/include/kern/syscall.h	119;"	d
SYS_lstat	/home/trinity/src/kern/include/kern/syscall.h	151;"	d
SYS_lutimes	/home/trinity/src/kern/include/kern/syscall.h	155;"	d
SYS_mkdir	/home/trinity/src/kern/include/kern/syscall.h	131;"	d
SYS_mkfifo	/home/trinity/src/kern/include/kern/syscall.h	133;"	d
SYS_mmap	/home/trinity/src/kern/include/kern/syscall.h	59;"	d
SYS_mount	/home/trinity/src/kern/include/kern/syscall.h	144;"	d
SYS_mprotect	/home/trinity/src/kern/include/kern/syscall.h	61;"	d
SYS_munmap	/home/trinity/src/kern/include/kern/syscall.h	60;"	d
SYS_nanosleep	/home/trinity/src/kern/include/kern/syscall.h	191;"	d
SYS_open	/home/trinity/src/kern/include/kern/syscall.h	105;"	d
SYS_pipe	/home/trinity/src/kern/include/kern/syscall.h	106;"	d
SYS_poll	/home/trinity/src/kern/include/kern/syscall.h	126;"	d
SYS_pread	/home/trinity/src/kern/include/kern/syscall.h	111;"	d
SYS_pwrite	/home/trinity/src/kern/include/kern/syscall.h	116;"	d
SYS_read	/home/trinity/src/kern/include/kern/syscall.h	110;"	d
SYS_readlink	/home/trinity/src/kern/include/kern/syscall.h	142;"	d
SYS_reboot	/home/trinity/src/kern/include/kern/syscall.h	197;"	d
SYS_remove	/home/trinity/src/kern/include/kern/syscall.h	130;"	d
SYS_rename	/home/trinity/src/kern/include/kern/syscall.h	134;"	d
SYS_rmdir	/home/trinity/src/kern/include/kern/syscall.h	132;"	d
SYS_sbrk	/home/trinity/src/kern/include/kern/syscall.h	58;"	d
SYS_select	/home/trinity/src/kern/include/kern/syscall.h	125;"	d
SYS_setgroups	/home/trinity/src/kern/include/kern/syscall.h	76;"	d
SYS_setresgid	/home/trinity/src/kern/include/kern/syscall.h	74;"	d
SYS_setresuid	/home/trinity/src/kern/include/kern/syscall.h	72;"	d
SYS_setsockopt	/home/trinity/src/kern/include/kern/syscall.h	182;"	d
SYS_shutdown	/home/trinity/src/kern/include/kern/syscall.h	178;"	d
SYS_sigaction	/home/trinity/src/kern/include/kern/syscall.h	81;"	d
SYS_sigpending	/home/trinity/src/kern/include/kern/syscall.h	82;"	d
SYS_sigprocmask	/home/trinity/src/kern/include/kern/syscall.h	83;"	d
SYS_sigreturn	/home/trinity/src/kern/include/kern/syscall.h	85;"	d
SYS_sigsuspend	/home/trinity/src/kern/include/kern/syscall.h	84;"	d
SYS_socket	/home/trinity/src/kern/include/kern/syscall.h	172;"	d
SYS_stat	/home/trinity/src/kern/include/kern/syscall.h	149;"	d
SYS_symlink	/home/trinity/src/kern/include/kern/syscall.h	141;"	d
SYS_sync	/home/trinity/src/kern/include/kern/syscall.h	196;"	d
SYS_umask	/home/trinity/src/kern/include/kern/syscall.h	69;"	d
SYS_unmount	/home/trinity/src/kern/include/kern/syscall.h	145;"	d
SYS_utimes	/home/trinity/src/kern/include/kern/syscall.h	153;"	d
SYS_vfork	/home/trinity/src/kern/include/kern/syscall.h	51;"	d
SYS_waitpid	/home/trinity/src/kern/include/kern/syscall.h	54;"	d
SYS_write	/home/trinity/src/kern/include/kern/syscall.h	115;"	d
S_IFBLK	/home/trinity/src/kern/include/stat.h	47;"	d
S_IFCHR	/home/trinity/src/kern/include/stat.h	46;"	d
S_IFDIR	/home/trinity/src/kern/include/stat.h	42;"	d
S_IFIFO	/home/trinity/src/kern/include/stat.h	44;"	d
S_IFLNK	/home/trinity/src/kern/include/stat.h	43;"	d
S_IFMT	/home/trinity/src/kern/include/stat.h	40;"	d
S_IFREG	/home/trinity/src/kern/include/stat.h	41;"	d
S_IFSOCK	/home/trinity/src/kern/include/stat.h	45;"	d
S_READY	/home/trinity/src/kern/include/thread.h	/^	S_READY,	\/* ready to run *\/$/;"	e	enum:__anon4
S_RUN	/home/trinity/src/kern/include/thread.h	/^	S_RUN,		\/* running *\/$/;"	e	enum:__anon4
S_SLEEP	/home/trinity/src/kern/include/thread.h	/^	S_SLEEP,	\/* sleeping *\/$/;"	e	enum:__anon4
S_ZOMBIE	/home/trinity/src/kern/include/thread.h	/^	S_ZOMBIE,	\/* zombie; exited but not yet deleted *\/$/;"	e	enum:__anon4
TEST161_FAIL	/home/trinity/src/kern/include/kern/test161.h	34;"	d
TEST161_FAIL	/home/trinity/src/kern/test/synchprobs.c	19;"	d	file:
TEST161_LPROGRESS	/home/trinity/src/kern/include/kern/test161.h	55;"	d
TEST161_LPROGRESS_N	/home/trinity/src/kern/include/kern/test161.h	54;"	d
TEST161_SUCCESS	/home/trinity/src/kern/include/kern/test161.h	33;"	d
TEST161_SUCCESS	/home/trinity/src/kern/test/synchprobs.c	18;"	d	file:
TEST161_TPROGRESS	/home/trinity/src/kern/include/kern/test161.h	61;"	d
TEST161_TPROGRESS	/home/trinity/src/kern/include/kern/test161.h	64;"	d
TEST161_TPROGRESS_N	/home/trinity/src/kern/include/kern/test161.h	60;"	d
TEST161_TPROGRESS_N	/home/trinity/src/kern/include/kern/test161.h	63;"	d
TESTSIZE	/home/trinity/src/kern/test/arraytest.c	35;"	d	file:
TESTSIZE	/home/trinity/src/kern/test/bitmaptest.c	35;"	d	file:
THREADINLINE	/home/trinity/src/kern/include/thread.h	126;"	d
THREADINLINE	/home/trinity/src/kern/thread/thread.c	34;"	d	file:
THREADLIST_FORALL	/home/trinity/src/kern/include/threadlist.h	94;"	d
THREADLIST_FORALL_REV	/home/trinity/src/kern/include/threadlist.h	99;"	d
THREAD_STACK_MAGIC	/home/trinity/src/kern/thread/thread.c	56;"	d	file:
TLBHI_INVALID	/home/trinity/src/kern/arch/mips/include/tlb.h	95;"	d
TLBHI_VPAGE	/home/trinity/src/kern/arch/mips/include/tlb.h	80;"	d
TLBLO_DIRTY	/home/trinity/src/kern/arch/mips/include/tlb.h	86;"	d
TLBLO_INVALID	/home/trinity/src/kern/arch/mips/include/tlb.h	96;"	d
TLBLO_NOCACHE	/home/trinity/src/kern/arch/mips/include/tlb.h	85;"	d
TLBLO_PPAGE	/home/trinity/src/kern/arch/mips/include/tlb.h	84;"	d
TLBLO_VALID	/home/trinity/src/kern/arch/mips/include/tlb.h	87;"	d
TLBSHOOTDOWN_MAX	/home/trinity/src/kern/arch/mips/include/vm.h	126;"	d
TO	/home/trinity/src/kern/lib/bswap.c	106;"	d	file:
TO	/home/trinity/src/kern/lib/bswap.c	95;"	d	file:
TOP	/home/trinity/src/kern/Makefile	/^TOP=..$/;"	m
TOP	/home/trinity/src/kern/compile/DUMBVM/Makefile	/^TOP=$(KTOP)\/..$/;"	m
TOTAL_PAGEREFS	/home/trinity/src/kern/vm/kmalloc.c	213;"	d	file:
TURN_LEFT	/home/trinity/src/kern/test/synchprobs.c	420;"	d	file:
TURN_RIGHT	/home/trinity/src/kern/test/synchprobs.c	421;"	d	file:
UIO_READ	/home/trinity/src/kern/include/uio.h	/^        UIO_READ,			\/* From kernel to uio_seg *\/$/;"	e	enum:uio_rw
UIO_SYSSPACE	/home/trinity/src/kern/include/uio.h	/^        UIO_SYSSPACE,			\/* Kernel. *\/$/;"	e	enum:uio_seg
UIO_USERISPACE	/home/trinity/src/kern/include/uio.h	/^        UIO_USERISPACE,			\/* User process code. *\/$/;"	e	enum:uio_seg
UIO_USERSPACE	/home/trinity/src/kern/include/uio.h	/^        UIO_USERSPACE,			\/* User process data. *\/$/;"	e	enum:uio_seg
UIO_WRITE	/home/trinity/src/kern/include/uio.h	/^        UIO_WRITE,			\/* From uio_seg to kernel *\/$/;"	e	enum:uio_rw
UNKNOWN_CAR	/home/trinity/src/kern/test/synchprobs.c	416;"	d	file:
USERSPACETOP	/home/trinity/src/kern/arch/mips/include/vm.h	74;"	d
USERSTACK	/home/trinity/src/kern/arch/mips/include/vm.h	84;"	d
V	/home/trinity/src/kern/include/synch.h	/^void V(struct semaphore *);$/;"	p	signature:(struct semaphore *)
V	/home/trinity/src/kern/thread/synch.c	/^V(struct semaphore *sem)$/;"	f	signature:(struct semaphore *sem)
VFSINLINE	/home/trinity/src/kern/include/vfs.h	190;"	d
VFSINLINE	/home/trinity/src/kern/vfs/vfslist.c	35;"	d	file:
VM_FAULT_READ	/home/trinity/src/kern/include/vm.h	43;"	d
VM_FAULT_READONLY	/home/trinity/src/kern/include/vm.h	45;"	d
VM_FAULT_WRITE	/home/trinity/src/kern/include/vm.h	44;"	d
VOP_CREAT	/home/trinity/src/kern/include/vnode.h	244;"	d
VOP_DECREF	/home/trinity/src/kern/include/vnode.h	267;"	d
VOP_EACHOPEN	/home/trinity/src/kern/include/vnode.h	228;"	d
VOP_FSYNC	/home/trinity/src/kern/include/vnode.h	239;"	d
VOP_GETDIRENTRY	/home/trinity/src/kern/include/vnode.h	233;"	d
VOP_GETTYPE	/home/trinity/src/kern/include/vnode.h	237;"	d
VOP_INCREF	/home/trinity/src/kern/include/vnode.h	266;"	d
VOP_IOCTL	/home/trinity/src/kern/include/vnode.h	235;"	d
VOP_ISSEEKABLE	/home/trinity/src/kern/include/vnode.h	238;"	d
VOP_LINK	/home/trinity/src/kern/include/vnode.h	247;"	d
VOP_LOOKPARENT	/home/trinity/src/kern/include/vnode.h	253;"	d
VOP_LOOKUP	/home/trinity/src/kern/include/vnode.h	252;"	d
VOP_MAGIC	/home/trinity/src/kern/include/vnode.h	178;"	d
VOP_MKDIR	/home/trinity/src/kern/include/vnode.h	246;"	d
VOP_MMAP	/home/trinity/src/kern/include/vnode.h	240;"	d
VOP_NAMEFILE	/home/trinity/src/kern/include/vnode.h	242;"	d
VOP_READ	/home/trinity/src/kern/include/vnode.h	231;"	d
VOP_READLINK	/home/trinity/src/kern/include/vnode.h	232;"	d
VOP_RECLAIM	/home/trinity/src/kern/include/vnode.h	229;"	d
VOP_REMOVE	/home/trinity/src/kern/include/vnode.h	248;"	d
VOP_RENAME	/home/trinity/src/kern/include/vnode.h	250;"	d
VOP_RMDIR	/home/trinity/src/kern/include/vnode.h	249;"	d
VOP_STAT	/home/trinity/src/kern/include/vnode.h	236;"	d
VOP_SYMLINK	/home/trinity/src/kern/include/vnode.h	245;"	d
VOP_TRUNCATE	/home/trinity/src/kern/include/vnode.h	241;"	d
VOP_WRITE	/home/trinity/src/kern/include/vnode.h	234;"	d
WAIT_ANY	/home/trinity/src/kern/include/kern/wait.h	43;"	d
WAIT_MYPGRP	/home/trinity/src/kern/include/kern/wait.h	44;"	d
WAKER_WAKES	/home/trinity/src/kern/test/tt3.c	48;"	d	file:
WCOREDUMP	/home/trinity/src/kern/include/kern/wait.h	71;"	d
WEXITSTATUS	/home/trinity/src/kern/include/kern/wait.h	68;"	d
WIFEXITED	/home/trinity/src/kern/include/kern/wait.h	65;"	d
WIFSIGNALED	/home/trinity/src/kern/include/kern/wait.h	66;"	d
WIFSTOPPED	/home/trinity/src/kern/include/kern/wait.h	67;"	d
WNOHANG	/home/trinity/src/kern/include/kern/wait.h	39;"	d
WORD_ALLBITS	/home/trinity/src/kern/lib/bitmap.c	48;"	d	file:
WORD_TYPE	/home/trinity/src/kern/lib/bitmap.c	47;"	d	file:
WSTOPSIG	/home/trinity/src/kern/include/kern/wait.h	70;"	d
WTERMSIG	/home/trinity/src/kern/include/kern/wait.h	69;"	d
WUNTRACED	/home/trinity/src/kern/include/kern/wait.h	40;"	d
_ADDRSPACE_H_	/home/trinity/src/kern/include/addrspace.h	31;"	d
_ARRAY_H_	/home/trinity/src/kern/include/array.h	31;"	d
_AUTOCONF_H_	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	3;"	d
_BIG_ENDIAN	/home/trinity/src/kern/include/kern/endian.h	43;"	d
_BITMAP_H_	/home/trinity/src/kern/include/bitmap.h	31;"	d
_BYTE_ORDER	/home/trinity/src/kern/arch/mips/include/kern/endian.h	42;"	d
_CDEFS_H_	/home/trinity/src/kern/include/cdefs.h	31;"	d
_CLOCK_H_	/home/trinity/src/kern/include/clock.h	31;"	d
_COPYINOUT_H_	/home/trinity/src/kern/include/copyinout.h	31;"	d
_CPU_H_	/home/trinity/src/kern/include/cpu.h	31;"	d
_CURRENT_H_	/home/trinity/src/kern/include/current.h	31;"	d
_DEVICE_H_	/home/trinity/src/kern/include/device.h	31;"	d
_ELF_H_	/home/trinity/src/kern/include/elf.h	31;"	d
_EMUFS_H_	/home/trinity/src/kern/include/emufs.h	31;"	d
_ENDIAN_H_	/home/trinity/src/kern/include/endian.h	31;"	d
_FS_H_	/home/trinity/src/kern/include/fs.h	31;"	d
_GENERIC_BEEP_H_	/home/trinity/src/kern/dev/generic/beep.h	31;"	d
_GENERIC_CONSOLE_H_	/home/trinity/src/kern/dev/generic/console.h	31;"	d
_GENERIC_RANDOM_H_	/home/trinity/src/kern/dev/generic/random.h	31;"	d
_GENERIC_RTCLOCK_H_	/home/trinity/src/kern/dev/generic/rtclock.h	31;"	d
_KERN_ENDIAN_H_	/home/trinity/src/kern/include/kern/endian.h	31;"	d
_KERN_ERRMSG_H_	/home/trinity/src/kern/include/kern/errmsg.h	31;"	d
_KERN_ERRNO_H_	/home/trinity/src/kern/include/kern/errno.h	31;"	d
_KERN_FCNTL_H_	/home/trinity/src/kern/include/kern/fcntl.h	31;"	d
_KERN_IOCTL_H_	/home/trinity/src/kern/include/kern/ioctl.h	31;"	d
_KERN_IOVEC_H_	/home/trinity/src/kern/include/kern/iovec.h	31;"	d
_KERN_LIMITS_H_	/home/trinity/src/kern/include/kern/limits.h	31;"	d
_KERN_MIPS_ENDIAN_H_	/home/trinity/src/kern/arch/mips/include/kern/endian.h	31;"	d
_KERN_MIPS_REGDEFS_H_	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	37;"	d
_KERN_MIPS_SIGNAL_H_	/home/trinity/src/kern/arch/mips/include/kern/signal.h	32;"	d
_KERN_MIPS_TYPES_H_	/home/trinity/src/kern/arch/mips/include/kern/types.h	31;"	d
_KERN_REBOOT_H_	/home/trinity/src/kern/include/kern/reboot.h	31;"	d
_KERN_RESOURCE_H_	/home/trinity/src/kern/include/kern/resource.h	31;"	d
_KERN_SECURE_H_	/home/trinity/src/kern/include/kern/secure.h	2;"	d
_KERN_SEEK_H_	/home/trinity/src/kern/include/kern/seek.h	31;"	d
_KERN_SFS_H_	/home/trinity/src/kern/include/kern/sfs.h	31;"	d
_KERN_SIGNAL_H_	/home/trinity/src/kern/include/kern/signal.h	38;"	d
_KERN_SOCKET_H_	/home/trinity/src/kern/include/kern/socket.h	31;"	d
_KERN_STATTYPES_H_	/home/trinity/src/kern/include/kern/stattypes.h	31;"	d
_KERN_STAT_H_	/home/trinity/src/kern/include/kern/stat.h	31;"	d
_KERN_SYSCALL_H_	/home/trinity/src/kern/include/kern/syscall.h	31;"	d
_KERN_TEST161_H_	/home/trinity/src/kern/include/kern/test161.h	31;"	d
_KERN_TIME_H_	/home/trinity/src/kern/include/kern/time.h	31;"	d
_KERN_TYPES_H_	/home/trinity/src/kern/include/kern/types.h	31;"	d
_KERN_UNISTD_H_	/home/trinity/src/kern/include/kern/unistd.h	31;"	d
_KERN_WAIT_H_	/home/trinity/src/kern/include/kern/wait.h	31;"	d
_LAMEBUS_EMU_H_	/home/trinity/src/kern/dev/lamebus/emu.h	31;"	d
_LAMEBUS_H_	/home/trinity/src/kern/dev/lamebus/lamebus.h	31;"	d
_LAMEBUS_LHD_H_	/home/trinity/src/kern/dev/lamebus/lhd.h	31;"	d
_LAMEBUS_LRANDOM_H_	/home/trinity/src/kern/dev/lamebus/lrandom.h	31;"	d
_LAMEBUS_LSCREEN_H_	/home/trinity/src/kern/dev/lamebus/lscreen.h	31;"	d
_LAMEBUS_LSER_H_	/home/trinity/src/kern/dev/lamebus/lser.h	31;"	d
_LAMEBUS_LTIMER_H_	/home/trinity/src/kern/dev/lamebus/ltimer.h	31;"	d
_LAMEBUS_LTRACE_H_	/home/trinity/src/kern/dev/lamebus/ltrace.h	31;"	d
_LIB_H_	/home/trinity/src/kern/include/lib.h	31;"	d
_LIMITS_H_	/home/trinity/src/kern/include/limits.h	31;"	d
_LITTLE_ENDIAN	/home/trinity/src/kern/include/kern/endian.h	42;"	d
_MAINBUS_H_	/home/trinity/src/kern/include/mainbus.h	31;"	d
_MEMBAR_H_	/home/trinity/src/kern/include/membar.h	31;"	d
_MIPS_CURRENT_H_	/home/trinity/src/kern/arch/mips/include/current.h	31;"	d
_MIPS_ELF_H_	/home/trinity/src/kern/arch/mips/include/elf.h	31;"	d
_MIPS_MEMBAR_H_	/home/trinity/src/kern/arch/mips/include/membar.h	31;"	d
_MIPS_SETJMP_H_	/home/trinity/src/kern/arch/mips/include/kern/setjmp.h	31;"	d
_MIPS_SPECIALREG_H_	/home/trinity/src/kern/arch/mips/include/specialreg.h	31;"	d
_MIPS_SPINLOCK_H_	/home/trinity/src/kern/arch/mips/include/spinlock.h	31;"	d
_MIPS_SWITCHFRAME_H_	/home/trinity/src/kern/arch/mips/thread/switchframe.h	31;"	d
_MIPS_THREAD_H_	/home/trinity/src/kern/arch/mips/include/thread.h	31;"	d
_MIPS_TLB_H_	/home/trinity/src/kern/arch/mips/include/tlb.h	31;"	d
_MIPS_TRAPFRAME_H_	/home/trinity/src/kern/arch/mips/include/trapframe.h	31;"	d
_MIPS_TYPES_H_	/home/trinity/src/kern/arch/mips/include/types.h	31;"	d
_MIPS_VM_H_	/home/trinity/src/kern/arch/mips/include/vm.h	31;"	d
_MKWAIT_CORE	/home/trinity/src/kern/include/kern/wait.h	76;"	d
_MKWAIT_EXIT	/home/trinity/src/kern/include/kern/wait.h	74;"	d
_MKWAIT_SIG	/home/trinity/src/kern/include/kern/wait.h	75;"	d
_MKWAIT_STOP	/home/trinity/src/kern/include/kern/wait.h	77;"	d
_MKWVAL	/home/trinity/src/kern/include/kern/wait.h	56;"	d
_NSIG	/home/trinity/src/kern/include/kern/signal.h	88;"	d
_OPT_AUTOMATIONTEST_H_	/home/trinity/src/kern/compile/DUMBVM/opt-automationtest.h	3;"	d
_OPT_DUMBVM_H_	/home/trinity/src/kern/compile/DUMBVM/opt-dumbvm.h	3;"	d
_OPT_HANGMAN_H_	/home/trinity/src/kern/compile/DUMBVM/opt-hangman.h	3;"	d
_OPT_NETFS_H_	/home/trinity/src/kern/compile/DUMBVM/opt-netfs.h	3;"	d
_OPT_NET_H_	/home/trinity/src/kern/compile/DUMBVM/opt-net.h	3;"	d
_OPT_NOASSERTS_H_	/home/trinity/src/kern/compile/DUMBVM/opt-noasserts.h	3;"	d
_OPT_SEMFS_H_	/home/trinity/src/kern/compile/DUMBVM/opt-semfs.h	3;"	d
_OPT_SFS_H_	/home/trinity/src/kern/compile/DUMBVM/opt-sfs.h	3;"	d
_OPT_SYNCHPROBS_H_	/home/trinity/src/kern/compile/DUMBVM/opt-synchprobs.h	3;"	d
_PATH_SHELL	/home/trinity/src/kern/main/menu.c	56;"	d	file:
_PDP_ENDIAN	/home/trinity/src/kern/include/kern/endian.h	44;"	d
_PROC_H_	/home/trinity/src/kern/include/proc.h	31;"	d
_PROMPT_H_	/home/trinity/src/kern/include/prompt.h	38;"	d
_SECRET_H_	/home/trinity/src/kern/include/kern/secret.h	38;"	d
_SETJMP_H_	/home/trinity/src/kern/include/setjmp.h	31;"	d
_SFSPRIVATE_H_	/home/trinity/src/kern/fs/sfs/sfsprivate.h	31;"	d
_SFS_H_	/home/trinity/src/kern/include/sfs.h	31;"	d
_SIGNAL_H_	/home/trinity/src/kern/include/signal.h	31;"	d
_SPINLOCK_H_	/home/trinity/src/kern/include/spinlock.h	31;"	d
_SPL_H_	/home/trinity/src/kern/include/spl.h	31;"	d
_SS_SIZE	/home/trinity/src/kern/include/kern/socket.h	78;"	d
_STAT_H_	/home/trinity/src/kern/include/stat.h	31;"	d
_STDARG_H_	/home/trinity/src/kern/include/stdarg.h	31;"	d
_SYNCH_H_	/home/trinity/src/kern/include/synch.h	31;"	d
_SYS161_BUS_H_	/home/trinity/src/kern/arch/sys161/include/bus.h	31;"	d
_SYS161_MAXCPUS_H_	/home/trinity/src/kern/arch/sys161/include/maxcpus.h	31;"	d
_SYSCALL_H_	/home/trinity/src/kern/include/syscall.h	31;"	d
_S_IFBLK	/home/trinity/src/kern/include/kern/stattypes.h	52;"	d
_S_IFCHR	/home/trinity/src/kern/include/kern/stattypes.h	51;"	d
_S_IFDIR	/home/trinity/src/kern/include/kern/stattypes.h	47;"	d
_S_IFIFO	/home/trinity/src/kern/include/kern/stattypes.h	49;"	d
_S_IFLNK	/home/trinity/src/kern/include/kern/stattypes.h	48;"	d
_S_IFMT	/home/trinity/src/kern/include/kern/stattypes.h	45;"	d
_S_IFREG	/home/trinity/src/kern/include/kern/stattypes.h	46;"	d
_S_IFSOCK	/home/trinity/src/kern/include/kern/stattypes.h	50;"	d
_TEST_H_	/home/trinity/src/kern/include/test.h	31;"	d
_THREADLIST_H_	/home/trinity/src/kern/include/threadlist.h	31;"	d
_THREADPRIVATE_H_	/home/trinity/src/kern/include/threadprivate.h	31;"	d
_THREAD_H_	/home/trinity/src/kern/include/thread.h	31;"	d
_TYPES_H_	/home/trinity/src/kern/include/types.h	31;"	d
_UIO_H_	/home/trinity/src/kern/include/uio.h	31;"	d
_VERSION_H_	/home/trinity/src/kern/include/version.h	31;"	d
_VFS_H_	/home/trinity/src/kern/include/vfs.h	31;"	d
_VM_H_	/home/trinity/src/kern/include/vm.h	31;"	d
_VNODE_H_	/home/trinity/src/kern/include/vnode.h	31;"	d
_WCHAN_H_	/home/trinity/src/kern/include/wchan.h	31;"	d
_WVAL	/home/trinity/src/kern/include/kern/wait.h	55;"	d
_WWHAT	/home/trinity/src/kern/include/kern/wait.h	54;"	d
__ARG_MAX	/home/trinity/src/kern/include/kern/limits.h	66;"	d
__CHAR_BIT	/home/trinity/src/kern/arch/mips/include/kern/types.h	75;"	d
__DEAD	/home/trinity/src/kern/include/cdefs.h	58;"	d
__DEAD	/home/trinity/src/kern/include/cdefs.h	62;"	d
__IOV_MAX	/home/trinity/src/kern/include/kern/limits.h	106;"	d
__JB_REGS	/home/trinity/src/kern/arch/mips/include/kern/setjmp.h	41;"	d
__LOGIN_NAME_MAX	/home/trinity/src/kern/include/kern/limits.h	98;"	d
__NAME_MAX	/home/trinity/src/kern/include/kern/limits.h	60;"	d
__NEED_CURCPU	/home/trinity/src/kern/arch/mips/include/current.h	68;"	d
__NEED_CURTHREAD	/home/trinity/src/kern/arch/mips/include/current.h	67;"	d
__NGROUPS_MAX	/home/trinity/src/kern/include/kern/limits.h	95;"	d
__OPEN_MAX	/home/trinity/src/kern/include/kern/limits.h	83;"	d
__PATH_MAX	/home/trinity/src/kern/include/kern/limits.h	63;"	d
__PF	/home/trinity/src/kern/include/cdefs.h	57;"	d
__PF	/home/trinity/src/kern/include/cdefs.h	61;"	d
__PID_MAX	/home/trinity/src/kern/include/kern/limits.h	80;"	d
__PID_MIN	/home/trinity/src/kern/include/kern/limits.h	77;"	d
__PIPE_BUF	/home/trinity/src/kern/include/kern/limits.h	86;"	d
__RLIMIT_NUM	/home/trinity/src/kern/include/kern/resource.h	83;"	d
__TEST161_PROGRESS_N	/home/trinity/src/kern/include/kern/test161.h	39;"	d
__TEST161_PROGRESS_N	/home/trinity/src/kern/include/kern/test161.h	46;"	d
__UNUSED	/home/trinity/src/kern/include/cdefs.h	59;"	d
__UNUSED	/home/trinity/src/kern/include/cdefs.h	63;"	d
__VOP	/home/trinity/src/kern/include/vnode.h	226;"	d
__WCORED	/home/trinity/src/kern/include/kern/wait.h	61;"	d
__WEXITED	/home/trinity/src/kern/include/kern/wait.h	59;"	d
__WSIGNALED	/home/trinity/src/kern/include/kern/wait.h	60;"	d
__WSTOPPED	/home/trinity/src/kern/include/kern/wait.h	62;"	d
__anon1::e_ehsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_ehsize;          \/* actual size of file header *\/$/;"	m	struct:__anon1	access:public
__anon1::e_entry	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_entry;           \/* address of program entry point *\/$/;"	m	struct:__anon1	access:public
__anon1::e_flags	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_flags;	   \/* ignore *\/$/;"	m	struct:__anon1	access:public
__anon1::e_ident	/home/trinity/src/kern/include/elf.h	/^	unsigned char	e_ident[ELF_NIDENT];   \/* magic number et al. *\/$/;"	m	struct:__anon1	access:public
__anon1::e_machine	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_machine;             \/* processor type file is for *\/$/;"	m	struct:__anon1	access:public
__anon1::e_phentsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_phentsize;       \/* actual size of phdr *\/$/;"	m	struct:__anon1	access:public
__anon1::e_phnum	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_phnum;           \/* number of phdrs *\/$/;"	m	struct:__anon1	access:public
__anon1::e_phoff	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_phoff;           \/* location in file of phdrs *\/$/;"	m	struct:__anon1	access:public
__anon1::e_shentsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shentsize;       \/* ignore *\/$/;"	m	struct:__anon1	access:public
__anon1::e_shnum	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shnum;           \/* ignore *\/$/;"	m	struct:__anon1	access:public
__anon1::e_shoff	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_shoff;           \/* ignore *\/$/;"	m	struct:__anon1	access:public
__anon1::e_shstrndx	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shstrndx;        \/* ignore *\/$/;"	m	struct:__anon1	access:public
__anon1::e_type	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_type;                \/* type of file this is *\/$/;"	m	struct:__anon1	access:public
__anon1::e_version	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_version;             \/* ELF version *\/$/;"	m	struct:__anon1	access:public
__anon2::p_align	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_align;     \/* Required alignment - can ignore *\/$/;"	m	struct:__anon2	access:public
__anon2::p_filesz	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_filesz;    \/* Size of data within file *\/$/;"	m	struct:__anon2	access:public
__anon2::p_flags	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_flags;     \/* Flags *\/$/;"	m	struct:__anon2	access:public
__anon2::p_memsz	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_memsz;     \/* Size of data to be loaded into memory*\/$/;"	m	struct:__anon2	access:public
__anon2::p_offset	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_offset;    \/* Location of data within file *\/$/;"	m	struct:__anon2	access:public
__anon2::p_paddr	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_paddr;     \/* Ignore *\/$/;"	m	struct:__anon2	access:public
__anon2::p_type	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_type;      \/* Type of segment *\/$/;"	m	struct:__anon2	access:public
__anon2::p_vaddr	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_vaddr;     \/* Virtual address *\/$/;"	m	struct:__anon2	access:public
__anon5::func	/home/trinity/src/kern/main/menu.c	/^	int (*func)(const char *device);$/;"	m	struct:__anon5	file:	access:public
__anon5::name	/home/trinity/src/kern/main/menu.c	/^	const char *name;$/;"	m	struct:__anon5	file:	access:public
__anon6::func	/home/trinity/src/kern/main/menu.c	/^	int (*func)(int nargs, char **args);$/;"	m	struct:__anon6	file:	access:public
__anon6::name	/home/trinity/src/kern/main/menu.c	/^	const char *name;$/;"	m	struct:__anon6	file:	access:public
__blkcnt_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __blkcnt_t;  \/* Count of blocks *\/$/;"	t
__blksize_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __blksize_t; \/* Size of an I\/O block *\/$/;"	t
__counter_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u64 __counter_t; \/* Event counter *\/$/;"	t
__daddr_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __daddr_t;   \/* Disk block number *\/$/;"	t
__dev_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __dev_t;     \/* Hardware device ID *\/$/;"	t
__fsid_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __fsid_t;    \/* Filesystem ID *\/$/;"	t
__gid_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __i32 __gid_t;     \/* Group ID *\/$/;"	t
__i16	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef short     __i16;                \/* 16-bit signed integer *\/$/;"	t
__i32	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef int       __i32;                \/* 32-bit signed integer *\/$/;"	t
__i64	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef long long __i64;                \/* 64-bit signed integer *\/$/;"	t
__i8	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef char      __i8;                 \/* 8-bit signed integer *\/$/;"	t
__in_addr_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __in_addr_t; \/* Internet address *\/$/;"	t
__in_port_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __in_port_t; \/* Internet port number *\/$/;"	t
__ino_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __ino_t;     \/* Inode number *\/$/;"	t
__intptr_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef long __intptr_t;                \/* Signed pointer-sized integer *\/$/;"	t
__kprintf	/home/trinity/src/kern/lib/kprintf.c	/^__kprintf(const char *fmt, va_list ap)$/;"	f	file:	signature:(const char *fmt, va_list ap)
__mode_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u32 __mode_t;    \/* File access mode *\/$/;"	t
__nfds_t	/home/trinity/src/kern/include/kern/types.h	/^typedef int __nfds_t;    \/* Number of file handles *\/$/;"	t
__nlink_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u16 __nlink_t;   \/* Number of links (intentionally only 16 bits) *\/$/;"	t
__off_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __i64 __off_t;     \/* Offset within file *\/$/;"	t
__pid_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __i32 __pid_t;     \/* Process ID *\/$/;"	t
__ptrdiff_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef int __ptrdiff_t;                \/* Difference of two pointers *\/$/;"	t
__ptrdiff_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef long __ptrdiff_t;               \/* Difference of two pointers *\/$/;"	t
__rlim_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u64 __rlim_t;    \/* Resource limit quantity *\/$/;"	t
__sa_family_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __u8 __sa_family_t;\/* Socket address family *\/$/;"	t
__sigfunc	/home/trinity/src/kern/include/kern/signal.h	/^typedef void (*__sigfunc)(int);$/;"	t
__size_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned __size_t;              \/* Size of a memory region *\/$/;"	t
__size_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned long __size_t;         \/* Size of a memory region *\/$/;"	t
__socklen_t	/home/trinity/src/kern/include/kern/types.h	/^typedef int __socklen_t;   \/* Socket-related length *\/$/;"	t
__ss_pad1	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 __ss_pad1;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad2	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 __ss_pad2;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad3	/home/trinity/src/kern/include/kern/socket.h	/^   __u32 __ss_pad3;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad4	/home/trinity/src/kern/include/kern/socket.h	/^   __u64 __ss_pad4;$/;"	m	struct:sockaddr_storage	access:public
__ss_pad5	/home/trinity/src/kern/include/kern/socket.h	/^   char __ss_pad5[_SS_SIZE - sizeof(__u64) - sizeof(__u32) - 4*sizeof(__u8)];$/;"	m	struct:sockaddr_storage	access:public
__ssize_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef int __ssize_t;                  \/* Signed type of same size *\/$/;"	t
__ssize_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef long __ssize_t;                 \/* Signed type of same size *\/$/;"	t
__start	/home/trinity/src/kern/arch/sys161/main/start.S	/^__start:$/;"	l
__time_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __i64 __time_t;    \/* Time in seconds *\/$/;"	t
__u16	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned short     __u16;       \/* 16-bit unsigned integer *\/$/;"	t
__u32	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned int       __u32;       \/* 32-bit unsigned integer *\/$/;"	t
__u64	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned long long __u64;       \/* 64-bit unsigned integer *\/$/;"	t
__u8	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned char      __u8;        \/* 8-bit unsigned integer *\/$/;"	t
__uid_t	/home/trinity/src/kern/include/kern/types.h	/^typedef __i32 __uid_t;     \/* User ID *\/$/;"	t
__uintptr_t	/home/trinity/src/kern/arch/mips/include/kern/types.h	/^typedef unsigned long __uintptr_t;      \/* Unsigned pointer-sized integer *\/$/;"	t
__userptr	/home/trinity/src/kern/include/types.h	/^struct __userptr { char _dummy; };$/;"	s
__userptr::_dummy	/home/trinity/src/kern/include/types.h	/^struct __userptr { char _dummy; };$/;"	m	struct:__userptr	access:public
__va_list	/home/trinity/src/kern/include/kern/types.h	/^typedef __builtin_va_list __va_list;$/;"	t
_dummy	/home/trinity/src/kern/include/types.h	/^struct __userptr { char _dummy; };$/;"	m	struct:__userptr	access:public
a0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	44;"	d
a1	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	45;"	d
a2	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	46;"	d
a3	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	47;"	d
a_name	/home/trinity/src/kern/include/hangman.h	/^	const char *a_name;$/;"	m	struct:hangman_actor	access:public
a_waiting	/home/trinity/src/kern/include/hangman.h	/^	const struct hangman_lockable *a_waiting;$/;"	m	struct:hangman_actor	typeref:struct:hangman_actor::hangman_lockable	access:public
addrspace	/home/trinity/src/kern/include/addrspace.h	/^struct addrspace {$/;"	s
addrspace::as_npages1	/home/trinity/src/kern/include/addrspace.h	/^        size_t as_npages1;$/;"	m	struct:addrspace	access:public
addrspace::as_npages2	/home/trinity/src/kern/include/addrspace.h	/^        size_t as_npages2;$/;"	m	struct:addrspace	access:public
addrspace::as_pbase1	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_pbase1;$/;"	m	struct:addrspace	access:public
addrspace::as_pbase2	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_pbase2;$/;"	m	struct:addrspace	access:public
addrspace::as_stackpbase	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_stackpbase;$/;"	m	struct:addrspace	access:public
addrspace::as_vbase1	/home/trinity/src/kern/include/addrspace.h	/^        vaddr_t as_vbase1;$/;"	m	struct:addrspace	access:public
addrspace::as_vbase2	/home/trinity/src/kern/include/addrspace.h	/^        vaddr_t as_vbase2;$/;"	m	struct:addrspace	access:public
all_quadrant	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int all_quadrant;$/;"	v	file:
allbase	/home/trinity/src/kern/vm/kmalloc.c	/^static struct pageref *allbase;$/;"	v	typeref:struct:pageref	file:
allcpus	/home/trinity/src/kern/thread/thread.c	/^static struct cpuarray allcpus;$/;"	v	typeref:struct:cpuarray	file:
alloc_kpages	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^alloc_kpages(unsigned npages)$/;"	f	signature:(unsigned npages)
alloc_kpages	/home/trinity/src/kern/include/vm.h	/^vaddr_t alloc_kpages(unsigned npages);$/;"	p	signature:(unsigned npages)
allocpageref	/home/trinity/src/kern/vm/kmalloc.c	/^allocpageref(void)$/;"	f	file:	signature:(void)
allocpagerefpage	/home/trinity/src/kern/vm/kmalloc.c	/^allocpagerefpage(struct kheap_root *root)$/;"	f	file:	signature:(struct kheap_root *root)
array	/home/trinity/src/kern/include/array.h	/^struct array {$/;"	s
array::max	/home/trinity/src/kern/include/array.h	/^	unsigned num, max;$/;"	m	struct:array	access:public
array::num	/home/trinity/src/kern/include/array.h	/^	unsigned num, max;$/;"	m	struct:array	access:public
array::v	/home/trinity/src/kern/include/array.h	/^	void **v;$/;"	m	struct:array	access:public
array_add	/home/trinity/src/kern/include/array.h	/^ARRAYINLINE int array_add(struct array *, void *val, unsigned *index_ret);$/;"	p	signature:(struct array *, void *val, unsigned *index_ret)
array_add	/home/trinity/src/kern/include/array.h	/^array_add(struct array *a, void *val, unsigned *index_ret)$/;"	f	signature:(struct array *a, void *val, unsigned *index_ret)
array_cleanup	/home/trinity/src/kern/include/array.h	/^void array_cleanup(struct array *);$/;"	p	signature:(struct array *)
array_cleanup	/home/trinity/src/kern/lib/array.c	/^array_cleanup(struct array *a)$/;"	f	signature:(struct array *a)
array_create	/home/trinity/src/kern/include/array.h	/^struct array *array_create(void);$/;"	p	signature:(void)
array_create	/home/trinity/src/kern/lib/array.c	/^array_create(void)$/;"	f	signature:(void)
array_destroy	/home/trinity/src/kern/include/array.h	/^void array_destroy(struct array *);$/;"	p	signature:(struct array *)
array_destroy	/home/trinity/src/kern/lib/array.c	/^array_destroy(struct array *a)$/;"	f	signature:(struct array *a)
array_get	/home/trinity/src/kern/include/array.h	/^ARRAYINLINE void *array_get(const struct array *, unsigned index);$/;"	p	signature:(const struct array *, unsigned index)
array_get	/home/trinity/src/kern/include/array.h	/^array_get(const struct array *a, unsigned index)$/;"	f	signature:(const struct array *a, unsigned index)
array_init	/home/trinity/src/kern/include/array.h	/^void array_init(struct array *);$/;"	p	signature:(struct array *)
array_init	/home/trinity/src/kern/lib/array.c	/^array_init(struct array *a)$/;"	f	signature:(struct array *a)
array_num	/home/trinity/src/kern/include/array.h	/^ARRAYINLINE unsigned array_num(const struct array *);$/;"	p	signature:(const struct array *)
array_num	/home/trinity/src/kern/include/array.h	/^array_num(const struct array *a)$/;"	f	signature:(const struct array *a)
array_preallocate	/home/trinity/src/kern/include/array.h	/^int array_preallocate(struct array *, unsigned num);$/;"	p	signature:(struct array *, unsigned num)
array_preallocate	/home/trinity/src/kern/lib/array.c	/^array_preallocate(struct array *a, unsigned num)$/;"	f	signature:(struct array *a, unsigned num)
array_remove	/home/trinity/src/kern/include/array.h	/^void array_remove(struct array *, unsigned index);$/;"	p	signature:(struct array *, unsigned index)
array_remove	/home/trinity/src/kern/lib/array.c	/^array_remove(struct array *a, unsigned index)$/;"	f	signature:(struct array *a, unsigned index)
array_set	/home/trinity/src/kern/include/array.h	/^ARRAYINLINE void array_set(const struct array *, unsigned index, void *val);$/;"	p	signature:(const struct array *, unsigned index, void *val)
array_set	/home/trinity/src/kern/include/array.h	/^array_set(const struct array *a, unsigned index, void *val)$/;"	f	signature:(const struct array *a, unsigned index, void *val)
array_setsize	/home/trinity/src/kern/include/array.h	/^int array_setsize(struct array *, unsigned num);$/;"	p	signature:(struct array *, unsigned num)
array_setsize	/home/trinity/src/kern/lib/array.c	/^array_setsize(struct array *a, unsigned num)$/;"	f	signature:(struct array *a, unsigned num)
arraytest	/home/trinity/src/kern/include/test.h	/^int arraytest(int, char **);$/;"	p	signature:(int, char **)
arraytest	/home/trinity/src/kern/test/arraytest.c	/^arraytest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
arraytest2	/home/trinity/src/kern/include/test.h	/^int arraytest2(int, char **);$/;"	p	signature:(int, char **)
arraytest2	/home/trinity/src/kern/test/arraytest.c	/^arraytest2(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
as_activate	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_activate(void)$/;"	f	signature:(void)
as_activate	/home/trinity/src/kern/include/addrspace.h	/^void              as_activate(void);$/;"	p	signature:(void)
as_activate	/home/trinity/src/kern/vm/addrspace.c	/^as_activate(void)$/;"	f	signature:(void)
as_complete_load	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_complete_load(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_complete_load	/home/trinity/src/kern/include/addrspace.h	/^int               as_complete_load(struct addrspace *as);$/;"	p	signature:(struct addrspace *as)
as_complete_load	/home/trinity/src/kern/vm/addrspace.c	/^as_complete_load(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_copy	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_copy(struct addrspace *old, struct addrspace **ret)$/;"	f	signature:(struct addrspace *old, struct addrspace **ret)
as_copy	/home/trinity/src/kern/include/addrspace.h	/^int               as_copy(struct addrspace *src, struct addrspace **ret);$/;"	p	signature:(struct addrspace *src, struct addrspace **ret)
as_copy	/home/trinity/src/kern/vm/addrspace.c	/^as_copy(struct addrspace *old, struct addrspace **ret)$/;"	f	signature:(struct addrspace *old, struct addrspace **ret)
as_create	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_create(void)$/;"	f	signature:(void)
as_create	/home/trinity/src/kern/include/addrspace.h	/^struct addrspace *as_create(void);$/;"	p	signature:(void)
as_create	/home/trinity/src/kern/vm/addrspace.c	/^as_create(void)$/;"	f	signature:(void)
as_deactivate	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_deactivate(void)$/;"	f	signature:(void)
as_deactivate	/home/trinity/src/kern/include/addrspace.h	/^void              as_deactivate(void);$/;"	p	signature:(void)
as_deactivate	/home/trinity/src/kern/vm/addrspace.c	/^as_deactivate(void)$/;"	f	signature:(void)
as_define_region	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_define_region(struct addrspace *as, vaddr_t vaddr, size_t sz,$/;"	f	signature:(struct addrspace *as, vaddr_t vaddr, size_t sz, int readable, int writeable, int executable)
as_define_region	/home/trinity/src/kern/include/addrspace.h	/^int               as_define_region(struct addrspace *as,$/;"	p	signature:(struct addrspace *as, vaddr_t vaddr, size_t sz, int readable, int writeable, int executable)
as_define_region	/home/trinity/src/kern/vm/addrspace.c	/^as_define_region(struct addrspace *as, vaddr_t vaddr, size_t memsize,$/;"	f	signature:(struct addrspace *as, vaddr_t vaddr, size_t memsize, int readable, int writeable, int executable)
as_define_stack	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_define_stack(struct addrspace *as, vaddr_t *stackptr)$/;"	f	signature:(struct addrspace *as, vaddr_t *stackptr)
as_define_stack	/home/trinity/src/kern/include/addrspace.h	/^int               as_define_stack(struct addrspace *as, vaddr_t *initstackptr);$/;"	p	signature:(struct addrspace *as, vaddr_t *initstackptr)
as_define_stack	/home/trinity/src/kern/vm/addrspace.c	/^as_define_stack(struct addrspace *as, vaddr_t *stackptr)$/;"	f	signature:(struct addrspace *as, vaddr_t *stackptr)
as_destroy	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_destroy(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_destroy	/home/trinity/src/kern/include/addrspace.h	/^void              as_destroy(struct addrspace *);$/;"	p	signature:(struct addrspace *)
as_destroy	/home/trinity/src/kern/vm/addrspace.c	/^as_destroy(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_npages1	/home/trinity/src/kern/include/addrspace.h	/^        size_t as_npages1;$/;"	m	struct:addrspace	access:public
as_npages2	/home/trinity/src/kern/include/addrspace.h	/^        size_t as_npages2;$/;"	m	struct:addrspace	access:public
as_pbase1	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_pbase1;$/;"	m	struct:addrspace	access:public
as_pbase2	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_pbase2;$/;"	m	struct:addrspace	access:public
as_prepare_load	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_prepare_load(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_prepare_load	/home/trinity/src/kern/include/addrspace.h	/^int               as_prepare_load(struct addrspace *as);$/;"	p	signature:(struct addrspace *as)
as_prepare_load	/home/trinity/src/kern/vm/addrspace.c	/^as_prepare_load(struct addrspace *as)$/;"	f	signature:(struct addrspace *as)
as_stackpbase	/home/trinity/src/kern/include/addrspace.h	/^        paddr_t as_stackpbase;$/;"	m	struct:addrspace	access:public
as_vbase1	/home/trinity/src/kern/include/addrspace.h	/^        vaddr_t as_vbase1;$/;"	m	struct:addrspace	access:public
as_vbase2	/home/trinity/src/kern/include/addrspace.h	/^        vaddr_t as_vbase2;$/;"	m	struct:addrspace	access:public
as_zero_region	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^as_zero_region(paddr_t paddr, unsigned npages)$/;"	f	file:	signature:(paddr_t paddr, unsigned npages)
asm_usermode	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^asm_usermode:$/;"	l
asm_usermode	/home/trinity/src/kern/arch/mips/locore/trap.c	/^extern __DEAD void asm_usermode(struct trapframe *tf);$/;"	p	file:	signature:(struct trapframe *tf)
atoi	/home/trinity/src/kern/include/lib.h	/^int atoi(const char *str);$/;"	p	signature:(const char *str)
attach_beep_to_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct beep_softc *attach_beep_to_ltimer(int devunit, struct ltimer_softc *bus);$/;"	p	signature:(int devunit, struct ltimer_softc *bus)
attach_beep_to_ltimer	/home/trinity/src/kern/dev/lamebus/beep_ltimer.c	/^attach_beep_to_ltimer(int beepno, struct ltimer_softc *ls)$/;"	f	signature:(int beepno, struct ltimer_softc *ls)
attach_con_to_lscreen	/home/trinity/src/kern/dev/lamebus/con_lscreen.c	/^attach_con_to_lscreen(int consno, struct lscreen_softc *ls)$/;"	f	signature:(int consno, struct lscreen_softc *ls)
attach_con_to_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct con_softc *attach_con_to_lser(int devunit, struct lser_softc *bus);$/;"	p	signature:(int devunit, struct lser_softc *bus)
attach_con_to_lser	/home/trinity/src/kern/dev/lamebus/con_lser.c	/^attach_con_to_lser(int consno, struct lser_softc *ls)$/;"	f	signature:(int consno, struct lser_softc *ls)
attach_console_to_vfs	/home/trinity/src/kern/dev/generic/console.c	/^attach_console_to_vfs(struct con_softc *cs)$/;"	f	file:	signature:(struct con_softc *cs)
attach_emu_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct emu_softc *attach_emu_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_emu_to_lamebus	/home/trinity/src/kern/dev/lamebus/emu_att.c	/^attach_emu_to_lamebus(int emuno, struct lamebus_softc *sc)$/;"	f	signature:(int emuno, struct lamebus_softc *sc)
attach_lhd_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct lhd_softc *attach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_lhd_to_lamebus	/home/trinity/src/kern/dev/lamebus/lhd_att.c	/^attach_lhd_to_lamebus(int lhdno, struct lamebus_softc *sc)$/;"	f	signature:(int lhdno, struct lamebus_softc *sc)
attach_lnet_to_lamebus	/home/trinity/src/kern/dev/lamebus/lnet_att.c	/^attach_lnet_to_lamebus(int lnetno, struct lamebus_softc *sc)$/;"	f	signature:(int lnetno, struct lamebus_softc *sc)
attach_lrandom_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct lrandom_softc *attach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_lrandom_to_lamebus	/home/trinity/src/kern/dev/lamebus/lrandom_att.c	/^attach_lrandom_to_lamebus(int lrandomno, struct lamebus_softc *sc)$/;"	f	signature:(int lrandomno, struct lamebus_softc *sc)
attach_lscreen_to_lamebus	/home/trinity/src/kern/dev/lamebus/lscreen_att.c	/^attach_lscreen_to_lamebus(int lscreenno, struct lamebus_softc *sc)$/;"	f	signature:(int lscreenno, struct lamebus_softc *sc)
attach_lser_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct lser_softc *attach_lser_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_lser_to_lamebus	/home/trinity/src/kern/dev/lamebus/lser_att.c	/^attach_lser_to_lamebus(int lserno, struct lamebus_softc *sc)$/;"	f	signature:(int lserno, struct lamebus_softc *sc)
attach_ltimer_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct ltimer_softc *attach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_ltimer_to_lamebus	/home/trinity/src/kern/dev/lamebus/ltimer_att.c	/^attach_ltimer_to_lamebus(int ltimerno, struct lamebus_softc *sc)$/;"	f	signature:(int ltimerno, struct lamebus_softc *sc)
attach_ltrace_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct ltrace_softc *attach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus);$/;"	p	signature:(int devunit, struct lamebus_softc *bus)
attach_ltrace_to_lamebus	/home/trinity/src/kern/dev/lamebus/ltrace_att.c	/^attach_ltrace_to_lamebus(int ltraceno, struct lamebus_softc *sc)$/;"	f	signature:(int ltraceno, struct lamebus_softc *sc)
attach_random_to_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct random_softc *attach_random_to_lrandom(int devunit, struct lrandom_softc *bus);$/;"	p	signature:(int devunit, struct lrandom_softc *bus)
attach_random_to_lrandom	/home/trinity/src/kern/dev/lamebus/random_lrandom.c	/^attach_random_to_lrandom(int randomno, struct lrandom_softc *ls)$/;"	f	signature:(int randomno, struct lrandom_softc *ls)
attach_rtclock_to_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^struct rtclock_softc *attach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus);$/;"	p	signature:(int devunit, struct ltimer_softc *bus)
attach_rtclock_to_ltimer	/home/trinity/src/kern/dev/lamebus/rtclock_ltimer.c	/^attach_rtclock_to_ltimer(int rtclockno, struct ltimer_softc *ls)$/;"	f	signature:(int rtclockno, struct ltimer_softc *ls)
autoconf_beep	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_beep(struct beep_softc *bus, int busunit)$/;"	f	file:	signature:(struct beep_softc *bus, int busunit)
autoconf_beep	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_beep(struct beep_softc *, int);$/;"	p	file:	signature:(struct beep_softc *, int)
autoconf_con	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_con(struct con_softc *bus, int busunit)$/;"	f	file:	signature:(struct con_softc *bus, int busunit)
autoconf_con	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_con(struct con_softc *, int);$/;"	p	file:	signature:(struct con_softc *, int)
autoconf_emu	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_emu(struct emu_softc *bus, int busunit)$/;"	f	file:	signature:(struct emu_softc *bus, int busunit)
autoconf_emu	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_emu(struct emu_softc *, int);$/;"	p	file:	signature:(struct emu_softc *, int)
autoconf_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_lamebus(struct lamebus_softc *bus, int busunit)$/;"	f	signature:(struct lamebus_softc *bus, int busunit)
autoconf_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^void autoconf_lamebus(struct lamebus_softc *dev, int unit);$/;"	p	signature:(struct lamebus_softc *dev, int unit)
autoconf_lhd	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_lhd(struct lhd_softc *bus, int busunit)$/;"	f	file:	signature:(struct lhd_softc *bus, int busunit)
autoconf_lhd	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_lhd(struct lhd_softc *, int);$/;"	p	file:	signature:(struct lhd_softc *, int)
autoconf_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_lrandom(struct lrandom_softc *bus, int busunit)$/;"	f	file:	signature:(struct lrandom_softc *bus, int busunit)
autoconf_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_lrandom(struct lrandom_softc *, int);$/;"	p	file:	signature:(struct lrandom_softc *, int)
autoconf_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_lser(struct lser_softc *bus, int busunit)$/;"	f	file:	signature:(struct lser_softc *bus, int busunit)
autoconf_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_lser(struct lser_softc *, int);$/;"	p	file:	signature:(struct lser_softc *, int)
autoconf_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_ltimer(struct ltimer_softc *bus, int busunit)$/;"	f	file:	signature:(struct ltimer_softc *bus, int busunit)
autoconf_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_ltimer(struct ltimer_softc *, int);$/;"	p	file:	signature:(struct ltimer_softc *, int)
autoconf_ltrace	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_ltrace(struct ltrace_softc *bus, int busunit)$/;"	f	file:	signature:(struct ltrace_softc *bus, int busunit)
autoconf_ltrace	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_ltrace(struct ltrace_softc *, int);$/;"	p	file:	signature:(struct ltrace_softc *, int)
autoconf_random	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_random(struct random_softc *bus, int busunit)$/;"	f	file:	signature:(struct random_softc *bus, int busunit)
autoconf_random	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_random(struct random_softc *, int);$/;"	p	file:	signature:(struct random_softc *, int)
autoconf_rtclock	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^autoconf_rtclock(struct rtclock_softc *bus, int busunit)$/;"	f	file:	signature:(struct rtclock_softc *bus, int busunit)
autoconf_rtclock	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static void autoconf_rtclock(struct rtclock_softc *, int);$/;"	p	file:	signature:(struct rtclock_softc *, int)
automationmenu	/home/trinity/src/kern/main/menu.c	/^static const char *automationmenu[] = {$/;"	v	file:
backsp	/home/trinity/src/kern/lib/kgets.c	/^backsp(void)$/;"	f	file:	signature:(void)
badassert	/home/trinity/src/kern/include/lib.h	/^__DEAD void badassert(const char *expr, const char *file,$/;"	p	signature:(const char *expr, const char *file, int line, const char *func)
badassert	/home/trinity/src/kern/lib/kprintf.c	/^badassert(const char *expr, const char *file, int line, const char *func)$/;"	f	signature:(const char *expr, const char *file, int line, const char *func)
badfaultfunc_t	/home/trinity/src/kern/arch/mips/include/thread.h	/^typedef void (*badfaultfunc_t)(void);$/;"	t
badnames	/home/trinity/src/kern/vfs/vfslist.c	/^badnames(const char *n1, const char *n2, const char *n3)$/;"	f	file:	signature:(const char *n1, const char *n2, const char *n3)
beep	/home/trinity/src/kern/dev/generic/beep.c	/^beep(void)$/;"	f	signature:(void)
beep	/home/trinity/src/kern/include/lib.h	/^void beep(void);$/;"	p	signature:(void)
beep_softc	/home/trinity/src/kern/dev/generic/beep.h	/^struct beep_softc {$/;"	s
beep_softc::bs_beep	/home/trinity/src/kern/dev/generic/beep.h	/^	void (*bs_beep)(void *devdata);$/;"	m	struct:beep_softc	access:public
beep_softc::bs_devdata	/home/trinity/src/kern/dev/generic/beep.h	/^	void *bs_devdata;$/;"	m	struct:beep_softc	access:public
bitmap	/home/trinity/src/kern/lib/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap::nbits	/home/trinity/src/kern/lib/bitmap.c	/^        unsigned nbits;$/;"	m	struct:bitmap	file:	access:public
bitmap::v	/home/trinity/src/kern/lib/bitmap.c	/^        WORD_TYPE *v;$/;"	m	struct:bitmap	file:	access:public
bitmap_alloc	/home/trinity/src/kern/include/bitmap.h	/^int            bitmap_alloc(struct bitmap *, unsigned *index);$/;"	p	signature:(struct bitmap *, unsigned *index)
bitmap_alloc	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_alloc(struct bitmap *b, unsigned *index)$/;"	f	signature:(struct bitmap *b, unsigned *index)
bitmap_create	/home/trinity/src/kern/include/bitmap.h	/^struct bitmap *bitmap_create(unsigned nbits);$/;"	p	signature:(unsigned nbits)
bitmap_create	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_create(unsigned nbits)$/;"	f	signature:(unsigned nbits)
bitmap_destroy	/home/trinity/src/kern/include/bitmap.h	/^void           bitmap_destroy(struct bitmap *);$/;"	p	signature:(struct bitmap *)
bitmap_destroy	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_destroy(struct bitmap *b)$/;"	f	signature:(struct bitmap *b)
bitmap_getdata	/home/trinity/src/kern/include/bitmap.h	/^void          *bitmap_getdata(struct bitmap *);$/;"	p	signature:(struct bitmap *)
bitmap_getdata	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_getdata(struct bitmap *b)$/;"	f	signature:(struct bitmap *b)
bitmap_isset	/home/trinity/src/kern/include/bitmap.h	/^int            bitmap_isset(struct bitmap *, unsigned index);$/;"	p	signature:(struct bitmap *, unsigned index)
bitmap_isset	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_isset(struct bitmap *b, unsigned index)$/;"	f	signature:(struct bitmap *b, unsigned index)
bitmap_mark	/home/trinity/src/kern/include/bitmap.h	/^void           bitmap_mark(struct bitmap *, unsigned index);$/;"	p	signature:(struct bitmap *, unsigned index)
bitmap_mark	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_mark(struct bitmap *b, unsigned index)$/;"	f	signature:(struct bitmap *b, unsigned index)
bitmap_translate	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_translate(unsigned bitno, unsigned *ix, WORD_TYPE *mask)$/;"	f	file:	signature:(unsigned bitno, unsigned *ix, WORD_TYPE *mask)
bitmap_unmark	/home/trinity/src/kern/include/bitmap.h	/^void           bitmap_unmark(struct bitmap *, unsigned index);$/;"	p	signature:(struct bitmap *, unsigned index)
bitmap_unmark	/home/trinity/src/kern/lib/bitmap.c	/^bitmap_unmark(struct bitmap *b, unsigned index)$/;"	f	signature:(struct bitmap *b, unsigned index)
bitmaptest	/home/trinity/src/kern/include/test.h	/^int bitmaptest(int, char **);$/;"	p	signature:(int, char **)
bitmaptest	/home/trinity/src/kern/test/bitmaptest.c	/^bitmaptest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
blkcnt_t	/home/trinity/src/kern/include/types.h	/^typedef __blkcnt_t blkcnt_t;$/;"	t
blksize_t	/home/trinity/src/kern/include/types.h	/^typedef __blksize_t blksize_t;$/;"	t
blocktype	/home/trinity/src/kern/vm/kmalloc.c	/^int blocktype(size_t clientsz)$/;"	f	file:	signature:(size_t clientsz)
bool	/home/trinity/src/kern/include/types.h	/^typedef _Bool bool;$/;"	t
boot	/home/trinity/src/kern/main/main.c	/^boot(void)$/;"	f	file:	signature:(void)
bootfs_vnode	/home/trinity/src/kern/vfs/vfslookup.c	/^static struct vnode *bootfs_vnode = NULL;$/;"	v	typeref:struct:vnode	file:
bs_beep	/home/trinity/src/kern/dev/generic/beep.h	/^	void (*bs_beep)(void *devdata);$/;"	m	struct:beep_softc	access:public
bs_devdata	/home/trinity/src/kern/dev/generic/beep.h	/^	void *bs_devdata;$/;"	m	struct:beep_softc	access:public
bswap16	/home/trinity/src/kern/include/endian.h	/^uint16_t bswap16(uint16_t);$/;"	p	signature:(uint16_t)
bswap16	/home/trinity/src/kern/lib/bswap.c	/^bswap16(uint16_t val)$/;"	f	signature:(uint16_t val)
bswap32	/home/trinity/src/kern/include/endian.h	/^uint32_t bswap32(uint32_t);$/;"	p	signature:(uint32_t)
bswap32	/home/trinity/src/kern/lib/bswap.c	/^bswap32(uint32_t val)$/;"	f	signature:(uint32_t val)
bswap64	/home/trinity/src/kern/include/endian.h	/^uint64_t bswap64(uint64_t);$/;"	p	signature:(uint64_t)
bswap64	/home/trinity/src/kern/lib/bswap.c	/^bswap64(uint64_t val)$/;"	f	signature:(uint64_t val)
buildconfig	/home/trinity/src/kern/compile/DUMBVM/vers.c	/^const char buildconfig[] = "DUMBVM";$/;"	v
buildversion	/home/trinity/src/kern/compile/DUMBVM/vers.c	/^const int buildversion = 15;$/;"	v
bus_map_area	/home/trinity/src/kern/arch/sys161/include/bus.h	49;"	d
bus_read_register	/home/trinity/src/kern/arch/sys161/include/bus.h	46;"	d
bus_write_register	/home/trinity/src/kern/arch/sys161/include/bus.h	43;"	d
bzero	/home/trinity/src/kern/include/lib.h	/^void bzero(void *ptr, size_t len);$/;"	p	signature:(void *ptr, size_t len)
c0_cause	/home/trinity/src/kern/arch/mips/include/specialreg.h	50;"	d
c0_compare	/home/trinity/src/kern/arch/mips/include/specialreg.h	48;"	d
c0_context	/home/trinity/src/kern/arch/mips/include/specialreg.h	42;"	d
c0_count	/home/trinity/src/kern/arch/mips/include/specialreg.h	46;"	d
c0_entryhi	/home/trinity/src/kern/arch/mips/include/specialreg.h	47;"	d
c0_entrylo	/home/trinity/src/kern/arch/mips/include/specialreg.h	39;"	d
c0_epc	/home/trinity/src/kern/arch/mips/include/specialreg.h	51;"	d
c0_index	/home/trinity/src/kern/arch/mips/include/specialreg.h	37;"	d
c0_prid	/home/trinity/src/kern/arch/mips/include/specialreg.h	52;"	d
c0_random	/home/trinity/src/kern/arch/mips/include/specialreg.h	38;"	d
c0_status	/home/trinity/src/kern/arch/mips/include/specialreg.h	49;"	d
c0_vaddr	/home/trinity/src/kern/arch/mips/include/specialreg.h	45;"	d
c_curthread	/home/trinity/src/kern/include/cpu.h	/^	struct thread *c_curthread;	\/* Current thread on cpu *\/$/;"	m	struct:cpu	typeref:struct:cpu::thread	access:public
c_hardclocks	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_hardclocks;		\/* Counter of hardclock() calls *\/$/;"	m	struct:cpu	access:public
c_hardware_number	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_hardware_number;	\/* Hardware-defined cpu number *\/$/;"	m	struct:cpu	access:public
c_ipi_lock	/home/trinity/src/kern/include/cpu.h	/^	struct spinlock c_ipi_lock;$/;"	m	struct:cpu	typeref:struct:cpu::spinlock	access:public
c_ipi_pending	/home/trinity/src/kern/include/cpu.h	/^	uint32_t c_ipi_pending;		\/* One bit for each IPI number *\/$/;"	m	struct:cpu	access:public
c_isidle	/home/trinity/src/kern/include/cpu.h	/^	bool c_isidle;			\/* True if this cpu is idle *\/$/;"	m	struct:cpu	access:public
c_number	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_number;		\/* This cpu's cpu number *\/$/;"	m	struct:cpu	access:public
c_numshootdown	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_numshootdown;$/;"	m	struct:cpu	access:public
c_runqueue	/home/trinity/src/kern/include/cpu.h	/^	struct threadlist c_runqueue;	\/* Run queue for this cpu *\/$/;"	m	struct:cpu	typeref:struct:cpu::threadlist	access:public
c_runqueue_lock	/home/trinity/src/kern/include/cpu.h	/^	struct spinlock c_runqueue_lock;$/;"	m	struct:cpu	typeref:struct:cpu::spinlock	access:public
c_self	/home/trinity/src/kern/include/cpu.h	/^	struct cpu *c_self;		\/* Canonical address of this struct *\/$/;"	m	struct:cpu	typeref:struct:cpu::cpu	access:public
c_shootdown	/home/trinity/src/kern/include/cpu.h	/^	struct tlbshootdown c_shootdown[TLBSHOOTDOWN_MAX];$/;"	m	struct:cpu	typeref:struct:cpu::tlbshootdown	access:public
c_spinlocks	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_spinlocks;		\/* Counter of spinlocks held *\/$/;"	m	struct:cpu	access:public
c_zombies	/home/trinity/src/kern/include/cpu.h	/^	struct threadlist c_zombies;	\/* List of exited threads *\/$/;"	m	struct:cpu	typeref:struct:cpu::threadlist	access:public
car_directions	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int car_directions[NCARS];$/;"	v	file:
car_locations	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int car_locations[NCARS];$/;"	v	file:
car_threads	/home/trinity/src/kern/test/synchprobs.c	/^static volatile void* car_threads[NCARS];$/;"	v	file:
car_turn_times	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int car_turn_times[NCARS];$/;"	v	file:
car_turns	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int car_turns[NCARS];$/;"	v	file:
change_bootfs	/home/trinity/src/kern/vfs/vfslookup.c	/^change_bootfs(struct vnode *newvn)$/;"	f	file:	signature:(struct vnode *newvn)
check_intersection	/home/trinity/src/kern/test/synchprobs.c	/^check_intersection() {$/;"	f	file:
check_order	/home/trinity/src/kern/test/threadlisttest.c	/^check_order(struct threadlist *tl, bool rev)$/;"	f	file:	signature:(struct threadlist *tl, bool rev)
check_role	/home/trinity/src/kern/test/synchprobs.c	/^check_role(uint32_t index, int role) {$/;"	f	file:	signature:(uint32_t index, int role)
check_thread	/home/trinity/src/kern/test/synchprobs.c	/^check_thread(volatile void* threads[], uint32_t index) {$/;"	f	file:	signature:(volatile void* threads[], uint32_t index)
checkdeadbeef	/home/trinity/src/kern/vm/kmalloc.c	/^checkdeadbeef(void *block, size_t blocksize)$/;"	f	file:	signature:(void *block, size_t blocksize)
checkfilesystem	/home/trinity/src/kern/test/fstest.c	/^checkfilesystem(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
checkguardband	/home/trinity/src/kern/vm/kmalloc.c	/^checkguardband(vaddr_t blockaddr, size_t smallerblocksize, size_t blocksize)$/;"	f	file:	signature:(vaddr_t blockaddr, size_t smallerblocksize, size_t blocksize)
checksubpage	/home/trinity/src/kern/vm/kmalloc.c	/^checksubpage(struct pageref *pr)$/;"	f	file:	signature:(struct pageref *pr)
checksubpage	/home/trinity/src/kern/vm/kmalloc.c	572;"	d	file:
checksubpages	/home/trinity/src/kern/vm/kmalloc.c	/^checksubpages(void)$/;"	f	file:	signature:(void)
checksubpages	/home/trinity/src/kern/vm/kmalloc.c	607;"	d	file:
clocksleep	/home/trinity/src/kern/include/clock.h	/^void clocksleep(int seconds);$/;"	p	signature:(int seconds)
clocksleep	/home/trinity/src/kern/thread/clock.c	/^clocksleep(int num_secs)$/;"	f	signature:(int num_secs)
cmd_automationmenu	/home/trinity/src/kern/main/menu.c	/^cmd_automationmenu(int n, char **a)$/;"	f	file:	signature:(int n, char **a)
cmd_bootfs	/home/trinity/src/kern/main/menu.c	/^cmd_bootfs(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_chdir	/home/trinity/src/kern/main/menu.c	/^cmd_chdir(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_deadlock	/home/trinity/src/kern/main/menu.c	/^cmd_deadlock(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_deadlockthread	/home/trinity/src/kern/main/menu.c	/^cmd_deadlockthread(void *ptr, unsigned long num)$/;"	f	file:	signature:(void *ptr, unsigned long num)
cmd_debug	/home/trinity/src/kern/main/menu.c	/^cmd_debug(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_dispatch	/home/trinity/src/kern/main/menu.c	/^cmd_dispatch(char *cmd)$/;"	f	file:	signature:(char *cmd)
cmd_kheapdump	/home/trinity/src/kern/main/menu.c	/^cmd_kheapdump(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_kheapgeneration	/home/trinity/src/kern/main/menu.c	/^cmd_kheapgeneration(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_kheapstats	/home/trinity/src/kern/main/menu.c	/^cmd_kheapstats(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_kheapused	/home/trinity/src/kern/main/menu.c	/^cmd_kheapused(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_mainmenu	/home/trinity/src/kern/main/menu.c	/^cmd_mainmenu(int n, char **a)$/;"	f	file:	signature:(int n, char **a)
cmd_mount	/home/trinity/src/kern/main/menu.c	/^cmd_mount(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_opsmenu	/home/trinity/src/kern/main/menu.c	/^cmd_opsmenu(int n, char **a)$/;"	f	file:	signature:(int n, char **a)
cmd_panic	/home/trinity/src/kern/main/menu.c	/^cmd_panic(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_prog	/home/trinity/src/kern/main/menu.c	/^cmd_prog(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_progthread	/home/trinity/src/kern/main/menu.c	/^cmd_progthread(void *ptr, unsigned long nargs)$/;"	f	file:	signature:(void *ptr, unsigned long nargs)
cmd_pwd	/home/trinity/src/kern/main/menu.c	/^cmd_pwd(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_quit	/home/trinity/src/kern/main/menu.c	/^cmd_quit(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_shell	/home/trinity/src/kern/main/menu.c	/^cmd_shell(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_sync	/home/trinity/src/kern/main/menu.c	/^cmd_sync(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmd_testmenu	/home/trinity/src/kern/main/menu.c	/^cmd_testmenu(int n, char **a)$/;"	f	file:	signature:(int n, char **a)
cmd_unmount	/home/trinity/src/kern/main/menu.c	/^cmd_unmount(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
cmdtable	/home/trinity/src/kern/main/menu.c	/^} cmdtable[] = {$/;"	v	typeref:struct:__anon6	file:
cmsg_len	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t cmsg_len;	\/* length of control data, including header *\/$/;"	m	struct:cmsghdr	access:public
cmsg_level	/home/trinity/src/kern/include/kern/socket.h	/^	int cmsg_level;		\/* protocol layer item originates from *\/$/;"	m	struct:cmsghdr	access:public
cmsg_type	/home/trinity/src/kern/include/kern/socket.h	/^	int cmsg_type;		\/* protocol-specific message type *\/$/;"	m	struct:cmsghdr	access:public
cmsghdr	/home/trinity/src/kern/include/kern/socket.h	/^struct cmsghdr {$/;"	s
cmsghdr::cmsg_len	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t cmsg_len;	\/* length of control data, including header *\/$/;"	m	struct:cmsghdr	access:public
cmsghdr::cmsg_level	/home/trinity/src/kern/include/kern/socket.h	/^	int cmsg_level;		\/* protocol layer item originates from *\/$/;"	m	struct:cmsghdr	access:public
cmsghdr::cmsg_type	/home/trinity/src/kern/include/kern/socket.h	/^	int cmsg_type;		\/* protocol-specific message type *\/$/;"	m	struct:cmsghdr	access:public
common_exception	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^common_exception:$/;"	l
common_prog	/home/trinity/src/kern/main/menu.c	/^common_prog(int nargs, char **args)$/;"	f	file:	signature:(int nargs, char **args)
compute_thread	/home/trinity/src/kern/test/tt3.c	/^compute_thread(void *junk1, unsigned long num)$/;"	f	file:	signature:(void *junk1, unsigned long num)
con_eachopen	/home/trinity/src/kern/dev/generic/console.c	/^con_eachopen(struct device *dev, int openflags)$/;"	f	file:	signature:(struct device *dev, int openflags)
con_input	/home/trinity/src/kern/dev/generic/console.c	/^con_input(void *vcs, int ch)$/;"	f	signature:(void *vcs, int ch)
con_input	/home/trinity/src/kern/dev/generic/console.h	/^void con_input(\/*struct con_softc*\/ void *cs, int ch);$/;"	p	signature:( void *cs, int ch)
con_io	/home/trinity/src/kern/dev/generic/console.c	/^con_io(struct device *dev, struct uio *uio)$/;"	f	file:	signature:(struct device *dev, struct uio *uio)
con_ioctl	/home/trinity/src/kern/dev/generic/console.c	/^con_ioctl(struct device *dev, int op, userptr_t data)$/;"	f	file:	signature:(struct device *dev, int op, userptr_t data)
con_softc	/home/trinity/src/kern/dev/generic/console.h	/^struct con_softc {$/;"	s
con_softc::cs_devdata	/home/trinity/src/kern/dev/generic/console.h	/^	void *cs_devdata;$/;"	m	struct:con_softc	access:public
con_softc::cs_gotchars	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned char cs_gotchars[CONSOLE_INPUT_BUFFER_SIZE];$/;"	m	struct:con_softc	access:public
con_softc::cs_gotchars_head	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned cs_gotchars_head;	\/* next slot to put a char in *\/$/;"	m	struct:con_softc	access:public
con_softc::cs_gotchars_tail	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned cs_gotchars_tail;	\/* next slot to take a char out *\/$/;"	m	struct:con_softc	access:public
con_softc::cs_rsem	/home/trinity/src/kern/dev/generic/console.h	/^	struct semaphore *cs_rsem;$/;"	m	struct:con_softc	typeref:struct:con_softc::semaphore	access:public
con_softc::cs_send	/home/trinity/src/kern/dev/generic/console.h	/^	void (*cs_send)(void *devdata, int ch);$/;"	m	struct:con_softc	access:public
con_softc::cs_sendpolled	/home/trinity/src/kern/dev/generic/console.h	/^	void (*cs_sendpolled)(void *devdata, int ch);$/;"	m	struct:con_softc	access:public
con_softc::cs_wsem	/home/trinity/src/kern/dev/generic/console.h	/^	struct semaphore *cs_wsem;$/;"	m	struct:con_softc	typeref:struct:con_softc::semaphore	access:public
con_start	/home/trinity/src/kern/dev/generic/console.c	/^con_start(void *vcs)$/;"	f	signature:(void *vcs)
con_start	/home/trinity/src/kern/dev/generic/console.h	/^void con_start(\/*struct con_softc*\/ void *cs);$/;"	p	signature:( void *cs)
con_userlock_read	/home/trinity/src/kern/dev/generic/console.c	/^static struct lock *con_userlock_read = NULL;$/;"	v	typeref:struct:lock	file:
con_userlock_write	/home/trinity/src/kern/dev/generic/console.c	/^static struct lock *con_userlock_write = NULL;$/;"	v	typeref:struct:lock	file:
concurrent_matchmakers	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int concurrent_matchmakers;$/;"	v	file:
config_beep	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_beep(struct beep_softc *dev, int unit);$/;"	p	signature:(struct beep_softc *dev, int unit)
config_beep	/home/trinity/src/kern/dev/generic/beep.c	/^config_beep(struct beep_softc *bs, int unit)$/;"	f	signature:(struct beep_softc *bs, int unit)
config_con	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_con(struct con_softc *dev, int unit);$/;"	p	signature:(struct con_softc *dev, int unit)
config_con	/home/trinity/src/kern/dev/generic/console.c	/^config_con(struct con_softc *cs, int unit)$/;"	f	signature:(struct con_softc *cs, int unit)
config_emu	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_emu(struct emu_softc *dev, int unit);$/;"	p	signature:(struct emu_softc *dev, int unit)
config_emu	/home/trinity/src/kern/dev/lamebus/emu.c	/^config_emu(struct emu_softc *sc, int emuno)$/;"	f	signature:(struct emu_softc *sc, int emuno)
config_lhd	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_lhd(struct lhd_softc *dev, int unit);$/;"	p	signature:(struct lhd_softc *dev, int unit)
config_lhd	/home/trinity/src/kern/dev/lamebus/lhd.c	/^config_lhd(struct lhd_softc *lh, int lhdno)$/;"	f	signature:(struct lhd_softc *lh, int lhdno)
config_lnet	/home/trinity/src/kern/dev/lamebus/lnet.c	/^config_lnet(struct lnet_softc *sc, int lnetno)$/;"	f	signature:(struct lnet_softc *sc, int lnetno)
config_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_lrandom(struct lrandom_softc *dev, int unit);$/;"	p	signature:(struct lrandom_softc *dev, int unit)
config_lrandom	/home/trinity/src/kern/dev/lamebus/lrandom.c	/^config_lrandom(struct lrandom_softc *lr, int lrandomno)$/;"	f	signature:(struct lrandom_softc *lr, int lrandomno)
config_lscreen	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^config_lscreen(struct lscreen_softc *sc, int lscreenno)$/;"	f	signature:(struct lscreen_softc *sc, int lscreenno)
config_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_lser(struct lser_softc *dev, int unit);$/;"	p	signature:(struct lser_softc *dev, int unit)
config_lser	/home/trinity/src/kern/dev/lamebus/lser.c	/^config_lser(struct lser_softc *sc, int lserno)$/;"	f	signature:(struct lser_softc *sc, int lserno)
config_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_ltimer(struct ltimer_softc *dev, int unit);$/;"	p	signature:(struct ltimer_softc *dev, int unit)
config_ltimer	/home/trinity/src/kern/dev/lamebus/ltimer.c	/^config_ltimer(struct ltimer_softc *lt, int ltimerno)$/;"	f	signature:(struct ltimer_softc *lt, int ltimerno)
config_ltrace	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_ltrace(struct ltrace_softc *dev, int unit);$/;"	p	signature:(struct ltrace_softc *dev, int unit)
config_ltrace	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^config_ltrace(struct ltrace_softc *sc, int ltraceno)$/;"	f	signature:(struct ltrace_softc *sc, int ltraceno)
config_random	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_random(struct random_softc *dev, int unit);$/;"	p	signature:(struct random_softc *dev, int unit)
config_random	/home/trinity/src/kern/dev/generic/random.c	/^config_random(struct random_softc *rs, int unit)$/;"	f	signature:(struct random_softc *rs, int unit)
config_rtclock	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^int config_rtclock(struct rtclock_softc *dev, int unit);$/;"	p	signature:(struct rtclock_softc *dev, int unit)
config_rtclock	/home/trinity/src/kern/dev/generic/rtclock.c	/^config_rtclock(struct rtclock_softc *rtc, int unit)$/;"	f	signature:(struct rtclock_softc *rtc, int unit)
console_devops	/home/trinity/src/kern/dev/generic/console.c	/^static const struct device_ops console_devops = {$/;"	v	typeref:struct:device_ops	file:
console_send	/home/trinity/src/kern/lib/kprintf.c	/^console_send(void *junk, const char *data, size_t len)$/;"	f	file:	signature:(void *junk, const char *data, size_t len)
const_userptr_t	/home/trinity/src/kern/include/types.h	/^typedef const struct __userptr *const_userptr_t;$/;"	t	typeref:struct:__userptr
copycheck	/home/trinity/src/kern/vm/copyinout.c	/^copycheck(const_userptr_t userptr, size_t len, size_t *stoplen)$/;"	f	file:	signature:(const_userptr_t userptr, size_t len, size_t *stoplen)
copyfail	/home/trinity/src/kern/vm/copyinout.c	/^copyfail(void)$/;"	f	file:	signature:(void)
copyin	/home/trinity/src/kern/include/copyinout.h	/^int copyin(const_userptr_t usersrc, void *dest, size_t len);$/;"	p	signature:(const_userptr_t usersrc, void *dest, size_t len)
copyin	/home/trinity/src/kern/vm/copyinout.c	/^copyin(const_userptr_t usersrc, void *dest, size_t len)$/;"	f	signature:(const_userptr_t usersrc, void *dest, size_t len)
copyinstr	/home/trinity/src/kern/include/copyinout.h	/^int copyinstr(const_userptr_t usersrc, char *dest, size_t len, size_t *got);$/;"	p	signature:(const_userptr_t usersrc, char *dest, size_t len, size_t *got)
copyinstr	/home/trinity/src/kern/vm/copyinout.c	/^copyinstr(const_userptr_t usersrc, char *dest, size_t len, size_t *actual)$/;"	f	signature:(const_userptr_t usersrc, char *dest, size_t len, size_t *actual)
copyout	/home/trinity/src/kern/include/copyinout.h	/^int copyout(const void *src, userptr_t userdest, size_t len);$/;"	p	signature:(const void *src, userptr_t userdest, size_t len)
copyout	/home/trinity/src/kern/vm/copyinout.c	/^copyout(const void *src, userptr_t userdest, size_t len)$/;"	f	signature:(const void *src, userptr_t userdest, size_t len)
copyoutstr	/home/trinity/src/kern/include/copyinout.h	/^int copyoutstr(const char *src, userptr_t userdest, size_t len, size_t *got);$/;"	p	signature:(const char *src, userptr_t userdest, size_t len, size_t *got)
copyoutstr	/home/trinity/src/kern/vm/copyinout.c	/^copyoutstr(const char *src, userptr_t userdest, size_t len, size_t *actual)$/;"	f	signature:(const char *src, userptr_t userdest, size_t len, size_t *actual)
copystr	/home/trinity/src/kern/vm/copyinout.c	/^copystr(char *dest, const char *src, size_t maxlen, size_t stoplen,$/;"	f	file:	signature:(char *dest, const char *src, size_t maxlen, size_t stoplen, size_t *gotlen)
coremap_used_bytes	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^coremap_used_bytes() {$/;"	f
coremap_used_bytes	/home/trinity/src/kern/include/vm.h	/^unsigned int coremap_used_bytes(void);$/;"	p	signature:(void)
cpu	/home/trinity/src/kern/include/cpu.h	/^struct cpu {$/;"	s
cpu::HANGMAN_ACTOR	/home/trinity/src/kern/include/cpu.h	/^	HANGMAN_ACTOR(c_hangman);$/;"	p	struct:cpu	access:public	signature:(c_hangman)
cpu::c_curthread	/home/trinity/src/kern/include/cpu.h	/^	struct thread *c_curthread;	\/* Current thread on cpu *\/$/;"	m	struct:cpu	typeref:struct:cpu::thread	access:public
cpu::c_hardclocks	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_hardclocks;		\/* Counter of hardclock() calls *\/$/;"	m	struct:cpu	access:public
cpu::c_hardware_number	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_hardware_number;	\/* Hardware-defined cpu number *\/$/;"	m	struct:cpu	access:public
cpu::c_ipi_lock	/home/trinity/src/kern/include/cpu.h	/^	struct spinlock c_ipi_lock;$/;"	m	struct:cpu	typeref:struct:cpu::spinlock	access:public
cpu::c_ipi_pending	/home/trinity/src/kern/include/cpu.h	/^	uint32_t c_ipi_pending;		\/* One bit for each IPI number *\/$/;"	m	struct:cpu	access:public
cpu::c_isidle	/home/trinity/src/kern/include/cpu.h	/^	bool c_isidle;			\/* True if this cpu is idle *\/$/;"	m	struct:cpu	access:public
cpu::c_number	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_number;		\/* This cpu's cpu number *\/$/;"	m	struct:cpu	access:public
cpu::c_numshootdown	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_numshootdown;$/;"	m	struct:cpu	access:public
cpu::c_runqueue	/home/trinity/src/kern/include/cpu.h	/^	struct threadlist c_runqueue;	\/* Run queue for this cpu *\/$/;"	m	struct:cpu	typeref:struct:cpu::threadlist	access:public
cpu::c_runqueue_lock	/home/trinity/src/kern/include/cpu.h	/^	struct spinlock c_runqueue_lock;$/;"	m	struct:cpu	typeref:struct:cpu::spinlock	access:public
cpu::c_self	/home/trinity/src/kern/include/cpu.h	/^	struct cpu *c_self;		\/* Canonical address of this struct *\/$/;"	m	struct:cpu	typeref:struct:cpu::cpu	access:public
cpu::c_shootdown	/home/trinity/src/kern/include/cpu.h	/^	struct tlbshootdown c_shootdown[TLBSHOOTDOWN_MAX];$/;"	m	struct:cpu	typeref:struct:cpu::tlbshootdown	access:public
cpu::c_spinlocks	/home/trinity/src/kern/include/cpu.h	/^	unsigned c_spinlocks;		\/* Counter of spinlocks held *\/$/;"	m	struct:cpu	access:public
cpu::c_zombies	/home/trinity/src/kern/include/cpu.h	/^	struct threadlist c_zombies;	\/* List of exited threads *\/$/;"	m	struct:cpu	typeref:struct:cpu::threadlist	access:public
cpu_create	/home/trinity/src/kern/include/cpu.h	/^struct cpu *cpu_create(unsigned hardware_number);$/;"	p	signature:(unsigned hardware_number)
cpu_create	/home/trinity/src/kern/thread/thread.c	/^cpu_create(unsigned hardware_number)$/;"	f	signature:(unsigned hardware_number)
cpu_getfeatures	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_getfeatures(void)$/;"	f	file:	signature:(void)
cpu_getifeatures	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_getifeatures(void)$/;"	f	file:	signature:(void)
cpu_getprid	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_getprid(void)$/;"	f	file:	signature:(void)
cpu_halt	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_halt(void)$/;"	f	signature:(void)
cpu_halt	/home/trinity/src/kern/include/cpu.h	/^void cpu_halt(void);$/;"	p	signature:(void)
cpu_hatch	/home/trinity/src/kern/include/cpu.h	/^void cpu_hatch(unsigned software_number);$/;"	p	signature:(unsigned software_number)
cpu_hatch	/home/trinity/src/kern/thread/thread.c	/^cpu_hatch(unsigned software_number)$/;"	f	signature:(unsigned software_number)
cpu_identify	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_identify(char *buf, size_t max)$/;"	f	signature:(char *buf, size_t max)
cpu_identify	/home/trinity/src/kern/include/cpu.h	/^void cpu_identify(char *buf, size_t max);$/;"	p	signature:(char *buf, size_t max)
cpu_idle	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_idle(void)$/;"	f	signature:(void)
cpu_idle	/home/trinity/src/kern/include/cpu.h	/^void cpu_idle(void);$/;"	p	signature:(void)
cpu_irqoff	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_irqoff(void)$/;"	f	signature:(void)
cpu_irqoff	/home/trinity/src/kern/include/cpu.h	/^void cpu_irqoff(void);$/;"	p	signature:(void)
cpu_irqon	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_irqon(void)$/;"	f	signature:(void)
cpu_irqon	/home/trinity/src/kern/include/cpu.h	/^void cpu_irqon(void);$/;"	p	signature:(void)
cpu_irqonoff	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_irqonoff(void)$/;"	f	file:	signature:(void)
cpu_machdep_init	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^cpu_machdep_init(struct cpu *c)$/;"	f	signature:(struct cpu *c)
cpu_machdep_init	/home/trinity/src/kern/include/cpu.h	/^void cpu_machdep_init(struct cpu *);$/;"	p	signature:(struct cpu *)
cpu_start_secondary	/home/trinity/src/kern/arch/sys161/main/start.S	/^cpu_start_secondary:$/;"	l
cpu_start_secondary	/home/trinity/src/kern/include/cpu.h	/^\/*ASMLINKAGE*\/ void cpu_start_secondary(void);$/;"	p	signature:(void)
cpu_startup_sem	/home/trinity/src/kern/thread/thread.c	/^static struct semaphore *cpu_startup_sem;$/;"	v	typeref:struct:semaphore	file:
cpustacks	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^vaddr_t cpustacks[MAXCPUS];$/;"	v
cputhreads	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^vaddr_t cputhreads[MAXCPUS];$/;"	v
createstress	/home/trinity/src/kern/include/test.h	/^int createstress(int, char **);$/;"	p	signature:(int, char **)
createstress	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(createstress);$/;"	v
createstress_thread	/home/trinity/src/kern/test/fstest.c	/^createstress_thread(void *fs, unsigned long num)$/;"	f	file:	signature:(void *fs, unsigned long num)
cs_devdata	/home/trinity/src/kern/dev/generic/console.h	/^	void *cs_devdata;$/;"	m	struct:con_softc	access:public
cs_gotchars	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned char cs_gotchars[CONSOLE_INPUT_BUFFER_SIZE];$/;"	m	struct:con_softc	access:public
cs_gotchars_head	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned cs_gotchars_head;	\/* next slot to put a char in *\/$/;"	m	struct:con_softc	access:public
cs_gotchars_tail	/home/trinity/src/kern/dev/generic/console.h	/^	unsigned cs_gotchars_tail;	\/* next slot to take a char out *\/$/;"	m	struct:con_softc	access:public
cs_rsem	/home/trinity/src/kern/dev/generic/console.h	/^	struct semaphore *cs_rsem;$/;"	m	struct:con_softc	typeref:struct:con_softc::semaphore	access:public
cs_send	/home/trinity/src/kern/dev/generic/console.h	/^	void (*cs_send)(void *devdata, int ch);$/;"	m	struct:con_softc	access:public
cs_sendpolled	/home/trinity/src/kern/dev/generic/console.h	/^	void (*cs_sendpolled)(void *devdata, int ch);$/;"	m	struct:con_softc	access:public
cs_wsem	/home/trinity/src/kern/dev/generic/console.h	/^	struct semaphore *cs_wsem;$/;"	m	struct:con_softc	typeref:struct:con_softc::semaphore	access:public
curcpu	/home/trinity/src/kern/include/current.h	79;"	d
curproc	/home/trinity/src/kern/include/current.h	90;"	d
curthread	/home/trinity/src/kern/include/current.h	71;"	d
cv	/home/trinity/src/kern/include/synch.h	/^struct cv {$/;"	s
cv::cv_name	/home/trinity/src/kern/include/synch.h	/^        char *cv_name;$/;"	m	struct:cv	access:public
cv_broadcast	/home/trinity/src/kern/include/synch.h	/^void cv_broadcast(struct cv *cv, struct lock *lock);$/;"	p	signature:(struct cv *cv, struct lock *lock)
cv_broadcast	/home/trinity/src/kern/thread/synch.c	/^cv_broadcast(struct cv *cv, struct lock *lock)$/;"	f	signature:(struct cv *cv, struct lock *lock)
cv_create	/home/trinity/src/kern/include/synch.h	/^struct cv *cv_create(const char *name);$/;"	p	signature:(const char *name)
cv_create	/home/trinity/src/kern/thread/synch.c	/^cv_create(const char *name)$/;"	f	signature:(const char *name)
cv_destroy	/home/trinity/src/kern/include/synch.h	/^void cv_destroy(struct cv *);$/;"	p	signature:(struct cv *)
cv_destroy	/home/trinity/src/kern/thread/synch.c	/^cv_destroy(struct cv *cv)$/;"	f	signature:(struct cv *cv)
cv_name	/home/trinity/src/kern/include/synch.h	/^        char *cv_name;$/;"	m	struct:cv	access:public
cv_signal	/home/trinity/src/kern/include/synch.h	/^void cv_signal(struct cv *cv, struct lock *lock);$/;"	p	signature:(struct cv *cv, struct lock *lock)
cv_signal	/home/trinity/src/kern/thread/synch.c	/^cv_signal(struct cv *cv, struct lock *lock)$/;"	f	signature:(struct cv *cv, struct lock *lock)
cv_wait	/home/trinity/src/kern/include/synch.h	/^void cv_wait(struct cv *cv, struct lock *lock);$/;"	p	signature:(struct cv *cv, struct lock *lock)
cv_wait	/home/trinity/src/kern/thread/synch.c	/^cv_wait(struct cv *cv, struct lock *lock)$/;"	f	signature:(struct cv *cv, struct lock *lock)
cvtest	/home/trinity/src/kern/include/test.h	/^int cvtest(int, char **);$/;"	p	signature:(int, char **)
cvtest	/home/trinity/src/kern/test/synchtest.c	/^cvtest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
cvtest2	/home/trinity/src/kern/include/test.h	/^int cvtest2(int, char **);$/;"	p	signature:(int, char **)
cvtest2	/home/trinity/src/kern/test/synchtest.c	/^cvtest2(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
cvtest3	/home/trinity/src/kern/include/test.h	/^int cvtest3(int, char **);$/;"	p	signature:(int, char **)
cvtest3	/home/trinity/src/kern/test/synchtest.c	/^cvtest3(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
cvtest4	/home/trinity/src/kern/include/test.h	/^int cvtest4(int, char **);$/;"	p	signature:(int, char **)
cvtest4	/home/trinity/src/kern/test/synchtest.c	/^cvtest4(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
cvtest5	/home/trinity/src/kern/include/test.h	/^int cvtest5(int, char **);$/;"	p	signature:(int, char **)
cvtest5	/home/trinity/src/kern/test/synchtest.c	/^cvtest5(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
cvtestthread	/home/trinity/src/kern/test/synchtest.c	/^cvtestthread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
d_blocks	/home/trinity/src/kern/include/device.h	/^	blkcnt_t d_blocks;$/;"	m	struct:device	access:public
d_blocksize	/home/trinity/src/kern/include/device.h	/^	blksize_t d_blocksize;$/;"	m	struct:device	access:public
d_data	/home/trinity/src/kern/include/device.h	/^	void *d_data;		\/* device-specific data *\/$/;"	m	struct:device	access:public
d_devnumber	/home/trinity/src/kern/include/device.h	/^	dev_t d_devnumber;	\/* serial number for this device *\/$/;"	m	struct:device	access:public
d_ops	/home/trinity/src/kern/include/device.h	/^	const struct device_ops *d_ops;$/;"	m	struct:device	typeref:struct:device::device_ops	access:public
daddr_t	/home/trinity/src/kern/include/types.h	/^typedef __daddr_t daddr_t;$/;"	t
dbflags	/home/trinity/src/kern/lib/kprintf.c	/^uint32_t dbflags = 0;$/;"	v
deadlock	/home/trinity/src/kern/main/menu.c	/^struct deadlock {$/;"	s	file:
deadlock::lock1	/home/trinity/src/kern/main/menu.c	/^	struct lock *lock1;$/;"	m	struct:deadlock	typeref:struct:deadlock::lock	file:	access:public
deadlock::lock2	/home/trinity/src/kern/main/menu.c	/^	struct lock *lock2;$/;"	m	struct:deadlock	typeref:struct:deadlock::lock	file:	access:public
deadlock_locks	/home/trinity/src/kern/test/automationtest.c	/^static struct lock *deadlock_locks[2];$/;"	v	typeref:struct:lock	file:
deadlock_sem	/home/trinity/src/kern/test/automationtest.c	/^static struct semaphore *deadlock_sem;$/;"	v	typeref:struct:semaphore	file:
delayed_outbuf	/home/trinity/src/kern/dev/generic/console.c	/^static char delayed_outbuf[DELAYBUFSIZE];$/;"	v	file:
delayed_outbuf_pos	/home/trinity/src/kern/dev/generic/console.c	/^static size_t delayed_outbuf_pos=0;$/;"	v	file:
dev_bootstrap	/home/trinity/src/kern/include/device.h	/^void dev_bootstrap(void);$/;"	p	signature:(void)
dev_create_vnode	/home/trinity/src/kern/include/device.h	/^struct vnode *dev_create_vnode(struct device *dev);$/;"	p	signature:(struct device *dev)
dev_create_vnode	/home/trinity/src/kern/vfs/device.c	/^dev_create_vnode(struct device *dev)$/;"	f	signature:(struct device *dev)
dev_eachopen	/home/trinity/src/kern/vfs/device.c	/^dev_eachopen(struct vnode *v, int flags)$/;"	f	file:	signature:(struct vnode *v, int flags)
dev_gettype	/home/trinity/src/kern/vfs/device.c	/^dev_gettype(struct vnode *v, mode_t *ret)$/;"	f	file:	signature:(struct vnode *v, mode_t *ret)
dev_ioctl	/home/trinity/src/kern/vfs/device.c	/^dev_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	file:	signature:(struct vnode *v, int op, userptr_t data)
dev_isseekable	/home/trinity/src/kern/vfs/device.c	/^dev_isseekable(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
dev_lookup	/home/trinity/src/kern/vfs/device.c	/^dev_lookup(struct vnode *dir,$/;"	f	file:	signature:(struct vnode *dir, char *pathname, struct vnode **result)
dev_mmap	/home/trinity/src/kern/vfs/device.c	/^dev_mmap(struct vnode *v  \/* add stuff as needed *\/)$/;"	f	file:	signature:(struct vnode *v )
dev_namefile	/home/trinity/src/kern/vfs/device.c	/^dev_namefile(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
dev_read	/home/trinity/src/kern/vfs/device.c	/^dev_read(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
dev_reclaim	/home/trinity/src/kern/vfs/device.c	/^dev_reclaim(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
dev_stat	/home/trinity/src/kern/vfs/device.c	/^dev_stat(struct vnode *v, struct stat *statbuf)$/;"	f	file:	signature:(struct vnode *v, struct stat *statbuf)
dev_t	/home/trinity/src/kern/include/types.h	/^typedef __dev_t dev_t;$/;"	t
dev_truncate	/home/trinity/src/kern/vfs/device.c	/^dev_truncate(struct vnode *v, off_t len)$/;"	f	file:	signature:(struct vnode *v, off_t len)
dev_tryseek	/home/trinity/src/kern/vfs/device.c	/^dev_tryseek(struct device *d, off_t pos)$/;"	f	file:	signature:(struct device *d, off_t pos)
dev_uncreate_vnode	/home/trinity/src/kern/include/device.h	/^void dev_uncreate_vnode(struct vnode *vn);$/;"	p	signature:(struct vnode *vn)
dev_uncreate_vnode	/home/trinity/src/kern/vfs/device.c	/^dev_uncreate_vnode(struct vnode *vn)$/;"	f	signature:(struct vnode *vn)
dev_vnode_ops	/home/trinity/src/kern/vfs/device.c	/^static const struct vnode_ops dev_vnode_ops = {$/;"	v	typeref:struct:vnode_ops	file:
dev_write	/home/trinity/src/kern/vfs/device.c	/^dev_write(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
device	/home/trinity/src/kern/include/device.h	/^struct device {$/;"	s
device::d_blocks	/home/trinity/src/kern/include/device.h	/^	blkcnt_t d_blocks;$/;"	m	struct:device	access:public
device::d_blocksize	/home/trinity/src/kern/include/device.h	/^	blksize_t d_blocksize;$/;"	m	struct:device	access:public
device::d_data	/home/trinity/src/kern/include/device.h	/^	void *d_data;		\/* device-specific data *\/$/;"	m	struct:device	access:public
device::d_devnumber	/home/trinity/src/kern/include/device.h	/^	dev_t d_devnumber;	\/* serial number for this device *\/$/;"	m	struct:device	access:public
device::d_ops	/home/trinity/src/kern/include/device.h	/^	const struct device_ops *d_ops;$/;"	m	struct:device	typeref:struct:device::device_ops	access:public
device_ops	/home/trinity/src/kern/include/device.h	/^struct device_ops {$/;"	s
device_ops::devop_eachopen	/home/trinity/src/kern/include/device.h	/^	int (*devop_eachopen)(struct device *, int flags_from_open);$/;"	m	struct:device_ops	access:public
device_ops::devop_io	/home/trinity/src/kern/include/device.h	/^	int (*devop_io)(struct device *, struct uio *);$/;"	m	struct:device_ops	access:public
device_ops::devop_ioctl	/home/trinity/src/kern/include/device.h	/^	int (*devop_ioctl)(struct device *, int op, userptr_t data);$/;"	m	struct:device_ops	access:public
devnull_create	/home/trinity/src/kern/include/device.h	/^void devnull_create(void);$/;"	p	signature:(void)
devnull_create	/home/trinity/src/kern/vfs/devnull.c	/^devnull_create(void)$/;"	f	signature:(void)
devop_eachopen	/home/trinity/src/kern/include/device.h	/^	int (*devop_eachopen)(struct device *, int flags_from_open);$/;"	m	struct:device_ops	access:public
devop_io	/home/trinity/src/kern/include/device.h	/^	int (*devop_io)(struct device *, struct uio *);$/;"	m	struct:device_ops	access:public
devop_ioctl	/home/trinity/src/kern/include/device.h	/^	int (*devop_ioctl)(struct device *, int op, userptr_t data);$/;"	m	struct:device_ops	access:public
dltest	/home/trinity/src/kern/include/test.h	/^int dltest(int, char **);$/;"	p	signature:(int, char **)
dltest	/home/trinity/src/kern/test/automationtest.c	/^dltest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
dltestthread	/home/trinity/src/kern/test/automationtest.c	/^dltestthread(void *junk1, unsigned long junk2)$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
do_semu1011	/home/trinity/src/kern/test/semunit.c	/^do_semu1011(bool interrupthandler)$/;"	f	file:	signature:(bool interrupthandler)
do_semu89	/home/trinity/src/kern/test/semunit.c	/^do_semu89(bool interrupthandler)$/;"	f	file:	signature:(bool interrupthandler)
docreatestress	/home/trinity/src/kern/test/fstest.c	/^docreatestress(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
dofstest	/home/trinity/src/kern/test/fstest.c	/^dofstest(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
dolongstress	/home/trinity/src/kern/test/fstest.c	/^dolongstress(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
donesem	/home/trinity/src/kern/test/synchtest.c	/^static struct semaphore *donesem = NULL;$/;"	v	typeref:struct:semaphore	file:
donesem	/home/trinity/src/kern/test/tt3.c	/^static struct semaphore *donesem;$/;"	v	typeref:struct:semaphore	file:
doreadstress	/home/trinity/src/kern/test/fstest.c	/^doreadstress(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
dowritestress	/home/trinity/src/kern/test/fstest.c	/^dowritestress(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
dowritestress2	/home/trinity/src/kern/test/fstest.c	/^dowritestress2(const char *filesys)$/;"	f	file:	signature:(const char *filesys)
dumbvm_can_sleep	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^dumbvm_can_sleep(void)$/;"	f	file:	signature:(void)
dump_subpage	/home/trinity/src/kern/vm/kmalloc.c	/^dump_subpage(struct pageref *pr, unsigned generation)$/;"	f	file:	signature:(struct pageref *pr, unsigned generation)
dump_subpages	/home/trinity/src/kern/vm/kmalloc.c	/^dump_subpages(unsigned generation)$/;"	f	file:	signature:(unsigned generation)
e_busdata	/home/trinity/src/kern/dev/lamebus/emu.h	/^	void *e_busdata;$/;"	m	struct:emu_softc	access:public
e_buspos	/home/trinity/src/kern/dev/lamebus/emu.h	/^	uint32_t e_buspos;$/;"	m	struct:emu_softc	access:public
e_ehsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_ehsize;          \/* actual size of file header *\/$/;"	m	struct:__anon1	access:public
e_entry	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_entry;           \/* address of program entry point *\/$/;"	m	struct:__anon1	access:public
e_flags	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_flags;	   \/* ignore *\/$/;"	m	struct:__anon1	access:public
e_ident	/home/trinity/src/kern/include/elf.h	/^	unsigned char	e_ident[ELF_NIDENT];   \/* magic number et al. *\/$/;"	m	struct:__anon1	access:public
e_iobuf	/home/trinity/src/kern/dev/lamebus/emu.h	/^	void *e_iobuf;$/;"	m	struct:emu_softc	access:public
e_lock	/home/trinity/src/kern/dev/lamebus/emu.h	/^	struct lock *e_lock;$/;"	m	struct:emu_softc	typeref:struct:emu_softc::lock	access:public
e_machine	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_machine;             \/* processor type file is for *\/$/;"	m	struct:__anon1	access:public
e_phentsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_phentsize;       \/* actual size of phdr *\/$/;"	m	struct:__anon1	access:public
e_phnum	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_phnum;           \/* number of phdrs *\/$/;"	m	struct:__anon1	access:public
e_phoff	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_phoff;           \/* location in file of phdrs *\/$/;"	m	struct:__anon1	access:public
e_result	/home/trinity/src/kern/dev/lamebus/emu.h	/^	uint32_t e_result;$/;"	m	struct:emu_softc	access:public
e_sem	/home/trinity/src/kern/dev/lamebus/emu.h	/^	struct semaphore *e_sem;$/;"	m	struct:emu_softc	typeref:struct:emu_softc::semaphore	access:public
e_shentsize	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shentsize;       \/* ignore *\/$/;"	m	struct:__anon1	access:public
e_shnum	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shnum;           \/* ignore *\/$/;"	m	struct:__anon1	access:public
e_shoff	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_shoff;           \/* ignore *\/$/;"	m	struct:__anon1	access:public
e_shstrndx	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_shstrndx;        \/* ignore *\/$/;"	m	struct:__anon1	access:public
e_type	/home/trinity/src/kern/include/elf.h	/^	uint16_t	e_type;                \/* type of file this is *\/$/;"	m	struct:__anon1	access:public
e_unit	/home/trinity/src/kern/dev/lamebus/emu.h	/^	int e_unit;$/;"	m	struct:emu_softc	access:public
e_version	/home/trinity/src/kern/include/elf.h	/^	uint32_t	e_version;             \/* ELF version *\/$/;"	m	struct:__anon1	access:public
ef_emu	/home/trinity/src/kern/include/emufs.h	/^	struct emu_softc *ef_emu;	\/* device *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::emu_softc	access:public
ef_fs	/home/trinity/src/kern/include/emufs.h	/^	struct fs ef_fs;		\/* abstract filesystem structure *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::fs	access:public
ef_root	/home/trinity/src/kern/include/emufs.h	/^	struct emufs_vnode *ef_root;	\/* root vnode *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::emufs_vnode	access:public
ef_vnodes	/home/trinity/src/kern/include/emufs.h	/^	struct vnodearray *ef_vnodes;	\/* table of loaded vnodes *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::vnodearray	access:public
emu_close	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_close(struct emu_softc *sc, uint32_t handle)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle)
emu_doread	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_doread(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, uint32_t len, uint32_t op, struct uio *uio)
emu_getsize	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_getsize(struct emu_softc *sc, uint32_t handle, off_t *retval)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, off_t *retval)
emu_irq	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_irq(void *dev)$/;"	f	signature:(void *dev)
emu_irq	/home/trinity/src/kern/dev/lamebus/emu.h	/^void emu_irq(\/*struct emu_softc*\/ void *);$/;"	p	signature:( void *)
emu_open	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_open(struct emu_softc *sc, uint32_t handle, const char *name,$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, const char *name, bool create, bool excl, mode_t mode, uint32_t *newhandle, int *newisdir)
emu_read	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_read(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, uint32_t len, struct uio *uio)
emu_readdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_readdir(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, uint32_t len, struct uio *uio)
emu_rreg	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_rreg(struct emu_softc *sc, uint32_t reg)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t reg)
emu_softc	/home/trinity/src/kern/dev/lamebus/emu.h	/^struct emu_softc {$/;"	s
emu_softc::e_busdata	/home/trinity/src/kern/dev/lamebus/emu.h	/^	void *e_busdata;$/;"	m	struct:emu_softc	access:public
emu_softc::e_buspos	/home/trinity/src/kern/dev/lamebus/emu.h	/^	uint32_t e_buspos;$/;"	m	struct:emu_softc	access:public
emu_softc::e_iobuf	/home/trinity/src/kern/dev/lamebus/emu.h	/^	void *e_iobuf;$/;"	m	struct:emu_softc	access:public
emu_softc::e_lock	/home/trinity/src/kern/dev/lamebus/emu.h	/^	struct lock *e_lock;$/;"	m	struct:emu_softc	typeref:struct:emu_softc::lock	access:public
emu_softc::e_result	/home/trinity/src/kern/dev/lamebus/emu.h	/^	uint32_t e_result;$/;"	m	struct:emu_softc	access:public
emu_softc::e_sem	/home/trinity/src/kern/dev/lamebus/emu.h	/^	struct semaphore *e_sem;$/;"	m	struct:emu_softc	typeref:struct:emu_softc::semaphore	access:public
emu_softc::e_unit	/home/trinity/src/kern/dev/lamebus/emu.h	/^	int e_unit;$/;"	m	struct:emu_softc	access:public
emu_trunc	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_trunc(struct emu_softc *sc, uint32_t handle, off_t len)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, off_t len)
emu_waitdone	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_waitdone(struct emu_softc *sc)$/;"	f	file:	signature:(struct emu_softc *sc)
emu_wreg	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_wreg(struct emu_softc *sc, uint32_t reg, uint32_t val)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t reg, uint32_t val)
emu_write	/home/trinity/src/kern/dev/lamebus/emu.c	/^emu_write(struct emu_softc *sc, uint32_t handle, uint32_t len,$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t handle, uint32_t len, struct uio *uio)
emufs_addtovfs	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_addtovfs(struct emu_softc *sc, const char *devname)$/;"	f	file:	signature:(struct emu_softc *sc, const char *devname)
emufs_creat	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_creat(struct vnode *dir, const char *name, bool excl, mode_t mode,$/;"	f	file:	signature:(struct vnode *dir, const char *name, bool excl, mode_t mode, struct vnode **ret)
emufs_creat_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_creat_notdir(struct vnode *v, const char *name, bool excl, mode_t mode,$/;"	f	file:	signature:(struct vnode *v, const char *name, bool excl, mode_t mode, struct vnode **retval)
emufs_dir_gettype	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_dir_gettype(struct vnode *v, uint32_t *result)$/;"	f	file:	signature:(struct vnode *v, uint32_t *result)
emufs_dirops	/home/trinity/src/kern/dev/lamebus/emu.c	/^static const struct vnode_ops emufs_dirops = {$/;"	v	typeref:struct:vnode_ops	file:
emufs_eachopen	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_eachopen(struct vnode *v, int openflags)$/;"	f	file:	signature:(struct vnode *v, int openflags)
emufs_eachopendir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_eachopendir(struct vnode *v, int openflags)$/;"	f	file:	signature:(struct vnode *v, int openflags)
emufs_file_gettype	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_file_gettype(struct vnode *v, uint32_t *result)$/;"	f	file:	signature:(struct vnode *v, uint32_t *result)
emufs_fileops	/home/trinity/src/kern/dev/lamebus/emu.c	/^static const struct vnode_ops emufs_fileops = {$/;"	v	typeref:struct:vnode_ops	file:
emufs_fs	/home/trinity/src/kern/include/emufs.h	/^struct emufs_fs {$/;"	s
emufs_fs::ef_emu	/home/trinity/src/kern/include/emufs.h	/^	struct emu_softc *ef_emu;	\/* device *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::emu_softc	access:public
emufs_fs::ef_fs	/home/trinity/src/kern/include/emufs.h	/^	struct fs ef_fs;		\/* abstract filesystem structure *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::fs	access:public
emufs_fs::ef_root	/home/trinity/src/kern/include/emufs.h	/^	struct emufs_vnode *ef_root;	\/* root vnode *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::emufs_vnode	access:public
emufs_fs::ef_vnodes	/home/trinity/src/kern/include/emufs.h	/^	struct vnodearray *ef_vnodes;	\/* table of loaded vnodes *\/$/;"	m	struct:emufs_fs	typeref:struct:emufs_fs::vnodearray	access:public
emufs_fsops	/home/trinity/src/kern/dev/lamebus/emu.c	/^static const struct fs_ops emufs_fsops = {$/;"	v	typeref:struct:fs_ops	file:
emufs_fsync	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_fsync(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
emufs_getdirentry	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_getdirentry(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_getroot	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_getroot(struct fs *fs, struct vnode **ret)$/;"	f	file:	signature:(struct fs *fs, struct vnode **ret)
emufs_getvolname	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_getvolname(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
emufs_ioctl	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	file:	signature:(struct vnode *v, int op, userptr_t data)
emufs_isseekable	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_isseekable(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
emufs_link	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_link(struct vnode *v, const char *name, struct vnode *target)$/;"	f	file:	signature:(struct vnode *v, const char *name, struct vnode *target)
emufs_link_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_link_notdir(struct vnode *v, const char *name, struct vnode *target)$/;"	f	file:	signature:(struct vnode *v, const char *name, struct vnode *target)
emufs_loadvnode	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_loadvnode(struct emufs_fs *ef, uint32_t handle, int isdir,$/;"	f	file:	signature:(struct emufs_fs *ef, uint32_t handle, int isdir, struct emufs_vnode **ret)
emufs_loadvnode	/home/trinity/src/kern/dev/lamebus/emu.c	/^static int emufs_loadvnode(struct emufs_fs *ef, uint32_t handle, int isdir,$/;"	p	file:	signature:(struct emufs_fs *ef, uint32_t handle, int isdir, struct emufs_vnode **ret)
emufs_lookparent	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_lookparent(struct vnode *dir, char *pathname, struct vnode **ret,$/;"	f	file:	signature:(struct vnode *dir, char *pathname, struct vnode **ret, char *buf, size_t len)
emufs_lookparent_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_lookparent_notdir(struct vnode *v, char *pathname, struct vnode **result,$/;"	f	file:	signature:(struct vnode *v, char *pathname, struct vnode **result, char *buf, size_t len)
emufs_lookup	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_lookup(struct vnode *dir, char *pathname, struct vnode **ret)$/;"	f	file:	signature:(struct vnode *dir, char *pathname, struct vnode **ret)
emufs_lookup_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_lookup_notdir(struct vnode *v, char *pathname, struct vnode **result)$/;"	f	file:	signature:(struct vnode *v, char *pathname, struct vnode **result)
emufs_mkdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_mkdir(struct vnode *v, const char *name, mode_t mode)$/;"	f	file:	signature:(struct vnode *v, const char *name, mode_t mode)
emufs_mkdir_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_mkdir_notdir(struct vnode *v, const char *name, mode_t mode)$/;"	f	file:	signature:(struct vnode *v, const char *name, mode_t mode)
emufs_mmap	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_mmap(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
emufs_name_op_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_name_op_notdir(struct vnode *v, const char *name)$/;"	f	file:	signature:(struct vnode *v, const char *name)
emufs_namefile	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_namefile(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_read	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_read(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_readlink_notlink	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_readlink_notlink(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_reclaim	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_reclaim(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
emufs_remove	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_remove(struct vnode *v, const char *name)$/;"	f	file:	signature:(struct vnode *v, const char *name)
emufs_rename	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_rename(struct vnode *v1, const char *n1,$/;"	f	file:	signature:(struct vnode *v1, const char *n1, struct vnode *v2, const char *n2)
emufs_rename_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_rename_notdir(struct vnode *v1, const char *n1,$/;"	f	file:	signature:(struct vnode *v1, const char *n1, struct vnode *v2, const char *n2)
emufs_rmdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_rmdir(struct vnode *v, const char *name)$/;"	f	file:	signature:(struct vnode *v, const char *name)
emufs_stat	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_stat(struct vnode *v, struct stat *statbuf)$/;"	f	file:	signature:(struct vnode *v, struct stat *statbuf)
emufs_symlink	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_symlink(struct vnode *v, const char *contents, const char *name)$/;"	f	file:	signature:(struct vnode *v, const char *contents, const char *name)
emufs_symlink_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_symlink_notdir(struct vnode *v, const char *contents, const char *name)$/;"	f	file:	signature:(struct vnode *v, const char *contents, const char *name)
emufs_sync	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_sync(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
emufs_truncate	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_truncate(struct vnode *v, off_t len)$/;"	f	file:	signature:(struct vnode *v, off_t len)
emufs_truncate_isdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_truncate_isdir(struct vnode *v, off_t len)$/;"	f	file:	signature:(struct vnode *v, off_t len)
emufs_uio_op_isdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_uio_op_isdir(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_uio_op_notdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_uio_op_notdir(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
emufs_unmount	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_unmount(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
emufs_vnode	/home/trinity/src/kern/include/emufs.h	/^struct emufs_vnode {$/;"	s
emufs_vnode::ev_emu	/home/trinity/src/kern/include/emufs.h	/^	struct emu_softc *ev_emu;	\/* device *\/$/;"	m	struct:emufs_vnode	typeref:struct:emufs_vnode::emu_softc	access:public
emufs_vnode::ev_handle	/home/trinity/src/kern/include/emufs.h	/^	uint32_t ev_handle;		\/* file handle *\/$/;"	m	struct:emufs_vnode	access:public
emufs_vnode::ev_v	/home/trinity/src/kern/include/emufs.h	/^	struct vnode ev_v;		\/* abstract vnode structure *\/$/;"	m	struct:emufs_vnode	typeref:struct:emufs_vnode::vnode	access:public
emufs_void_op_isdir	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_void_op_isdir(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
emufs_write	/home/trinity/src/kern/dev/lamebus/emu.c	/^emufs_write(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
endsem	/home/trinity/src/kern/test/synchprobs.c	/^static struct semaphore *endsem;$/;"	v	typeref:struct:semaphore	file:
enter_forked_process	/home/trinity/src/kern/arch/mips/syscall/syscall.c	/^enter_forked_process(struct trapframe *tf)$/;"	f	signature:(struct trapframe *tf)
enter_forked_process	/home/trinity/src/kern/include/syscall.h	/^void enter_forked_process(struct trapframe *tf);$/;"	p	signature:(struct trapframe *tf)
enter_new_process	/home/trinity/src/kern/arch/mips/locore/trap.c	/^enter_new_process(int argc, userptr_t argv, userptr_t env,$/;"	f	signature:(int argc, userptr_t argv, userptr_t env, vaddr_t stack, vaddr_t entry)
enter_new_process	/home/trinity/src/kern/include/syscall.h	/^__DEAD void enter_new_process(int argc, userptr_t argv, userptr_t env,$/;"	p	signature:(int argc, userptr_t argv, userptr_t env, vaddr_t stackptr, vaddr_t entrypoint)
establishguardband	/home/trinity/src/kern/vm/kmalloc.c	/^establishguardband(void *block, size_t clientsize, size_t blocksize)$/;"	f	file:	signature:(void *block, size_t clientsize, size_t blocksize)
establishlabel	/home/trinity/src/kern/vm/kmalloc.c	/^establishlabel(void *block, vaddr_t label)$/;"	f	file:	signature:(void *block, vaddr_t label)
ev_emu	/home/trinity/src/kern/include/emufs.h	/^	struct emu_softc *ev_emu;	\/* device *\/$/;"	m	struct:emufs_vnode	typeref:struct:emufs_vnode::emu_softc	access:public
ev_handle	/home/trinity/src/kern/include/emufs.h	/^	uint32_t ev_handle;		\/* file handle *\/$/;"	m	struct:emufs_vnode	access:public
ev_v	/home/trinity/src/kern/include/emufs.h	/^	struct vnode ev_v;		\/* abstract vnode structure *\/$/;"	m	struct:emufs_vnode	typeref:struct:emufs_vnode::vnode	access:public
exception_return	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^exception_return:$/;"	l
exitsem	/home/trinity/src/kern/test/synchtest.c	/^static struct semaphore *exitsem;$/;"	v	typeref:struct:semaphore	file:
exorcise	/home/trinity/src/kern/thread/thread.c	/^exorcise(void)$/;"	f	file:	signature:(void)
failif	/home/trinity/src/kern/test/synchprobs.c	/^failif(bool condition, const char *message) {$/;"	f	file:	signature:(bool condition, const char *message)
failif	/home/trinity/src/kern/test/synchtest.c	/^failif(bool condition) {$/;"	f	file:	signature:(bool condition)
fakethread_create	/home/trinity/src/kern/test/threadlisttest.c	/^fakethread_create(const char *name)$/;"	f	file:	signature:(const char *name)
fakethread_destroy	/home/trinity/src/kern/test/threadlisttest.c	/^fakethread_destroy(struct thread *t)$/;"	f	file:	signature:(struct thread *t)
fakethreads	/home/trinity/src/kern/test/threadlisttest.c	/^static struct thread *fakethreads[NUMNAMES];$/;"	v	typeref:struct:thread	file:
false	/home/trinity/src/kern/include/types.h	153;"	d
female	/home/trinity/src/kern/include/test.h	/^void female(uint32_t);$/;"	p	signature:(uint32_t)
female	/home/trinity/src/kern/synchprobs/whalemating.c	/^female(uint32_t index)$/;"	f	signature:(uint32_t index)
female_end	/home/trinity/src/kern/include/test.h	/^void female_end(uint32_t);$/;"	p	signature:(uint32_t)
female_end	/home/trinity/src/kern/test/synchprobs.c	/^female_end(uint32_t index) {$/;"	f	signature:(uint32_t index)
female_end_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int female_end_count;$/;"	v	file:
female_start	/home/trinity/src/kern/include/test.h	/^void female_start(uint32_t);$/;"	p	signature:(uint32_t)
female_start	/home/trinity/src/kern/test/synchprobs.c	/^female_start(uint32_t index) {$/;"	f	signature:(uint32_t index)
female_start_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int female_start_count;$/;"	v	file:
female_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^female_wrapper(void * unused1, unsigned long index) {$/;"	f	file:	signature:(void * unused1, unsigned long index)
fill_deadbeef	/home/trinity/src/kern/vm/kmalloc.c	/^fill_deadbeef(void *vptr, size_t len)$/;"	f	file:	signature:(void *vptr, size_t len)
findmount	/home/trinity/src/kern/vfs/vfslist.c	/^findmount(const char *devname, struct knowndev **result)$/;"	f	file:	signature:(const char *devname, struct knowndev **result)
finish	/home/trinity/src/kern/test/tt3.c	/^finish(int howmanytotal)$/;"	f	file:	signature:(int howmanytotal)
firstfree	/home/trinity/src/kern/arch/mips/vm/ram.c	/^vaddr_t firstfree;   \/* first free virtual address; set by start.S *\/$/;"	v
firstpaddr	/home/trinity/src/kern/arch/mips/vm/ram.c	/^static paddr_t firstpaddr;  \/* address of first free physical page *\/$/;"	v	file:
flock	/home/trinity/src/kern/include/kern/fcntl.h	/^struct flock {$/;"	s
flock::l_len	/home/trinity/src/kern/include/kern/fcntl.h	/^	off_t l_len;            \/* length of locked region *\/$/;"	m	struct:flock	access:public
flock::l_pid	/home/trinity/src/kern/include/kern/fcntl.h	/^	pid_t l_pid;            \/* process that holds the lock *\/$/;"	m	struct:flock	access:public
flock::l_start	/home/trinity/src/kern/include/kern/fcntl.h	/^	off_t l_start;          \/* place in file *\/$/;"	m	struct:flock	access:public
flock::l_type	/home/trinity/src/kern/include/kern/fcntl.h	/^	int l_type;             \/* F_RDLCK or F_WRLCK *\/$/;"	m	struct:flock	access:public
flock::l_whence	/home/trinity/src/kern/include/kern/fcntl.h	/^	int l_whence;           \/* SEEK_SET, SEEK_CUR, or SEEK_END *\/$/;"	m	struct:flock	access:public
flush_delay_buf	/home/trinity/src/kern/dev/generic/console.c	/^flush_delay_buf(void)$/;"	f	file:	signature:(void)
free_kpages	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^free_kpages(vaddr_t addr)$/;"	f	signature:(vaddr_t addr)
free_kpages	/home/trinity/src/kern/include/vm.h	/^void free_kpages(vaddr_t addr);$/;"	p	signature:(vaddr_t addr)
freelist	/home/trinity/src/kern/vm/kmalloc.c	/^struct freelist {$/;"	s	file:
freelist::next	/home/trinity/src/kern/vm/kmalloc.c	/^	struct freelist *next;$/;"	m	struct:freelist	typeref:struct:freelist::freelist	file:	access:public
freelist_offset	/home/trinity/src/kern/vm/kmalloc.c	/^	uint16_t freelist_offset;$/;"	m	struct:pageref	file:	access:public
freepageref	/home/trinity/src/kern/vm/kmalloc.c	/^freepageref(struct pageref *p)$/;"	f	file:	signature:(struct pageref *p)
fs	/home/trinity/src/kern/include/fs.h	/^struct fs {$/;"	s
fs::fs_data	/home/trinity/src/kern/include/fs.h	/^	void *fs_data;$/;"	m	struct:fs	access:public
fs::fs_ops	/home/trinity/src/kern/include/fs.h	/^	const struct fs_ops *fs_ops;$/;"	m	struct:fs	typeref:struct:fs::fs_ops	access:public
fs_data	/home/trinity/src/kern/include/fs.h	/^	void *fs_data;$/;"	m	struct:fs	access:public
fs_ops	/home/trinity/src/kern/include/fs.h	/^	const struct fs_ops *fs_ops;$/;"	m	struct:fs	typeref:struct:fs::fs_ops	access:public
fs_ops	/home/trinity/src/kern/include/fs.h	/^struct fs_ops {$/;"	s
fs_ops::fsop_getroot	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_getroot)(struct fs *, struct vnode **);$/;"	m	struct:fs_ops	access:public
fs_ops::fsop_getvolname	/home/trinity/src/kern/include/fs.h	/^	const char   *(*fsop_getvolname)(struct fs *);$/;"	m	struct:fs_ops	access:public
fs_ops::fsop_sync	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_sync)(struct fs *);$/;"	m	struct:fs_ops	access:public
fs_ops::fsop_unmount	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_unmount)(struct fs *);$/;"	m	struct:fs_ops	access:public
fsid_t	/home/trinity/src/kern/include/types.h	/^typedef __fsid_t fsid_t;$/;"	t
fsop_getroot	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_getroot)(struct fs *, struct vnode **);$/;"	m	struct:fs_ops	access:public
fsop_getvolname	/home/trinity/src/kern/include/fs.h	/^	const char   *(*fsop_getvolname)(struct fs *);$/;"	m	struct:fs_ops	access:public
fsop_sync	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_sync)(struct fs *);$/;"	m	struct:fs_ops	access:public
fsop_unmount	/home/trinity/src/kern/include/fs.h	/^	int           (*fsop_unmount)(struct fs *);$/;"	m	struct:fs_ops	access:public
fstest	/home/trinity/src/kern/include/test.h	/^int fstest(int, char **);$/;"	p	signature:(int, char **)
fstest	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(fstest);$/;"	v
fstest_makename	/home/trinity/src/kern/test/fstest.c	/^fstest_makename(char *buf, size_t buflen,$/;"	f	file:	signature:(char *buf, size_t buflen, const char *fs, const char *namesuffix)
fstest_read	/home/trinity/src/kern/test/fstest.c	/^fstest_read(const char *fs, const char *namesuffix)$/;"	f	file:	signature:(const char *fs, const char *namesuffix)
fstest_remove	/home/trinity/src/kern/test/fstest.c	/^fstest_remove(const char *fs, const char *namesuffix)$/;"	f	file:	signature:(const char *fs, const char *namesuffix)
fstest_write	/home/trinity/src/kern/test/fstest.c	/^fstest_write(const char *fs, const char *namesuffix,$/;"	f	file:	signature:(const char *fs, const char *namesuffix, int stridesize, int stridepos)
func	/home/trinity/src/kern/main/menu.c	/^	int (*func)(const char *device);$/;"	m	struct:__anon5	file:	access:public
func	/home/trinity/src/kern/main/menu.c	/^	int (*func)(int nargs, char **args);$/;"	m	struct:__anon6	file:	access:public
gatesem	/home/trinity/src/kern/test/synchtest.c	/^static struct semaphore *gatesem;$/;"	v	typeref:struct:semaphore	file:
generation	/home/trinity/src/kern/vm/kmalloc.c	/^	unsigned generation;$/;"	m	struct:malloclabel	file:	access:public
getch	/home/trinity/src/kern/dev/generic/console.c	/^getch(void)$/;"	f	signature:(void)
getch	/home/trinity/src/kern/include/lib.h	/^int getch(void);$/;"	p	signature:(void)
getch_intr	/home/trinity/src/kern/dev/generic/console.c	/^getch_intr(struct con_softc *cs)$/;"	f	file:	signature:(struct con_softc *cs)
getdevice	/home/trinity/src/kern/vfs/vfslookup.c	/^getdevice(char *path, char **subpath, struct vnode **startvn)$/;"	f	file:	signature:(char *path, char **subpath, struct vnode **startvn)
getppages	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^getppages(unsigned long npages)$/;"	f	file:	signature:(unsigned long npages)
gettime	/home/trinity/src/kern/dev/generic/rtclock.c	/^gettime(struct timespec *ts)$/;"	f	signature:(struct timespec *ts)
gettime	/home/trinity/src/kern/include/clock.h	/^void gettime(struct timespec *ret);$/;"	p	signature:(struct timespec *ret)
gid_t	/home/trinity/src/kern/include/types.h	/^typedef __gid_t gid_t;$/;"	t
gostraight	/home/trinity/src/kern/include/test.h	/^void gostraight(uint32_t, uint32_t);$/;"	p	signature:(uint32_t, uint32_t)
gostraight	/home/trinity/src/kern/synchprobs/stoplight.c	/^gostraight(uint32_t direction, uint32_t index)$/;"	f	signature:(uint32_t direction, uint32_t index)
gostraight_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^gostraight_wrapper(void *index, unsigned long direction)$/;"	f	file:	signature:(void *index, unsigned long direction)
gp	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	68;"	d
hangman_acquire	/home/trinity/src/kern/include/hangman.h	/^void hangman_acquire(struct hangman_actor *a, struct hangman_lockable *l);$/;"	p	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hangman_acquire	/home/trinity/src/kern/thread/hangman.c	/^hangman_acquire(struct hangman_actor *a,$/;"	f	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hangman_actor	/home/trinity/src/kern/include/hangman.h	/^struct hangman_actor {$/;"	s
hangman_actor::a_name	/home/trinity/src/kern/include/hangman.h	/^	const char *a_name;$/;"	m	struct:hangman_actor	access:public
hangman_actor::a_waiting	/home/trinity/src/kern/include/hangman.h	/^	const struct hangman_lockable *a_waiting;$/;"	m	struct:hangman_actor	typeref:struct:hangman_actor::hangman_lockable	access:public
hangman_check	/home/trinity/src/kern/thread/hangman.c	/^hangman_check(const struct hangman_lockable *start,$/;"	f	file:	signature:(const struct hangman_lockable *start, const struct hangman_actor *target)
hangman_lock	/home/trinity/src/kern/thread/hangman.c	/^static struct spinlock hangman_lock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
hangman_lockable	/home/trinity/src/kern/include/hangman.h	/^struct hangman_lockable {$/;"	s
hangman_lockable::l_holding	/home/trinity/src/kern/include/hangman.h	/^	const struct hangman_actor *l_holding;$/;"	m	struct:hangman_lockable	typeref:struct:hangman_lockable::hangman_actor	access:public
hangman_lockable::l_name	/home/trinity/src/kern/include/hangman.h	/^	const char *l_name;$/;"	m	struct:hangman_lockable	access:public
hangman_release	/home/trinity/src/kern/include/hangman.h	/^void hangman_release(struct hangman_actor *a, struct hangman_lockable *l);$/;"	p	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hangman_release	/home/trinity/src/kern/thread/hangman.c	/^hangman_release(struct hangman_actor *a,$/;"	f	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hangman_wait	/home/trinity/src/kern/include/hangman.h	/^void hangman_wait(struct hangman_actor *a, struct hangman_lockable *l);$/;"	p	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hangman_wait	/home/trinity/src/kern/thread/hangman.c	/^hangman_wait(struct hangman_actor *a,$/;"	f	signature:(struct hangman_actor *a, struct hangman_lockable *l)
hardclock	/home/trinity/src/kern/include/clock.h	/^void hardclock(void);$/;"	p	signature:(void)
hardclock	/home/trinity/src/kern/thread/clock.c	/^hardclock(void)$/;"	f	signature:(void)
hardclock_bootstrap	/home/trinity/src/kern/include/clock.h	/^void hardclock_bootstrap(void);$/;"	p	signature:(void)
hardclock_bootstrap	/home/trinity/src/kern/thread/clock.c	/^hardclock_bootstrap(void)$/;"	f	signature:(void)
harvard_copyright	/home/trinity/src/kern/main/main.c	/^static const char harvard_copyright[] =$/;"	v	file:
hashes1	/home/trinity/src/kern/test/hmacunit.c	/^static const char *hashes1[] = {$/;"	v	file:
havetimerclock	/home/trinity/src/kern/dev/lamebus/ltimer.c	/^static bool havetimerclock;$/;"	v	file:
hmac	/home/trinity/src/kern/include/kern/secure.h	/^int hmac(const char *msg, size_t msg_len, const char *key, size_t key_len, $/;"	p	signature:(const char *msg, size_t msg_len, const char *key, size_t key_len, char **hash_str)
hmac_salted	/home/trinity/src/kern/include/kern/secure.h	/^int hmac_salted(const char *msg, size_t msg_len, const char *key, size_t key_len, $/;"	p	signature:(const char *msg, size_t msg_len, const char *key, size_t key_len, char **hash_str, char **salt_str)
hmacu1	/home/trinity/src/kern/include/test.h	/^int hmacu1(int, char**);$/;"	p	signature:(int, char**)
hmacu1	/home/trinity/src/kern/test/hmacunit.c	/^hmacu1(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
htonl	/home/trinity/src/kern/include/endian.h	/^uint32_t htonl(uint32_t);$/;"	p	signature:(uint32_t)
htonll	/home/trinity/src/kern/include/endian.h	/^uint64_t htonll(uint64_t);$/;"	p	signature:(uint64_t)
htons	/home/trinity/src/kern/include/endian.h	/^uint16_t htons(uint16_t);$/;"	p	signature:(uint16_t)
inQuadrant	/home/trinity/src/kern/include/test.h	/^void inQuadrant(int, uint32_t);$/;"	p	signature:(int, uint32_t)
inQuadrant	/home/trinity/src/kern/test/synchprobs.c	/^inQuadrant(int quadrant, uint32_t index) {$/;"	f	signature:(int quadrant, uint32_t index)
in_addr_t	/home/trinity/src/kern/include/types.h	/^typedef __in_addr_t in_addr_t;$/;"	t
in_port_t	/home/trinity/src/kern/include/types.h	/^typedef __in_port_t in_port_t;$/;"	t
infinite_spinner	/home/trinity/src/kern/test/automationtest.c	/^infinite_spinner(unsigned long i)$/;"	f	file:	signature:(unsigned long i)
init_sem	/home/trinity/src/kern/test/threadtest.c	/^init_sem(void)$/;"	f	file:	signature:(void)
init_threadsem	/home/trinity/src/kern/test/fstest.c	/^init_threadsem(void)$/;"	f	file:	signature:(void)
initialize_car_thread	/home/trinity/src/kern/test/synchprobs.c	/^initialize_car_thread(uint32_t index, uint32_t direction, uint32_t turn) {$/;"	f	file:	signature:(uint32_t index, uint32_t direction, uint32_t turn)
initialize_thread	/home/trinity/src/kern/test/synchprobs.c	/^initialize_thread(volatile void* threads[], uint32_t index) {$/;"	f	file:	signature:(volatile void* threads[], uint32_t index)
inititems	/home/trinity/src/kern/test/automationtest.c	/^inititems(void)$/;"	f	file:	signature:(void)
ino_t	/home/trinity/src/kern/include/types.h	/^typedef __ino_t ino_t;$/;"	t
int16_t	/home/trinity/src/kern/include/types.h	/^typedef __i16 int16_t;$/;"	t
int32_t	/home/trinity/src/kern/include/types.h	/^typedef __i32 int32_t;$/;"	t
int64_t	/home/trinity/src/kern/include/types.h	/^typedef __i64 int64_t;$/;"	t
int8_t	/home/trinity/src/kern/include/types.h	/^typedef __i8 int8_t;$/;"	t
interprocessor_interrupt	/home/trinity/src/kern/include/cpu.h	/^void interprocessor_interrupt(void);$/;"	p	signature:(void)
interprocessor_interrupt	/home/trinity/src/kern/thread/thread.c	/^interprocessor_interrupt(void)$/;"	f	signature:(void)
intptr_t	/home/trinity/src/kern/include/types.h	/^typedef __intptr_t intptr_t;$/;"	t
iov_kbase	/home/trinity/src/kern/include/kern/iovec.h	/^                void      *iov_kbase;	\/* kernel-supplied pointer *\/$/;"	m	union:iovec::__anon3	access:public
iov_len	/home/trinity/src/kern/include/kern/iovec.h	/^        size_t iov_len;			\/* Length of data *\/$/;"	m	struct:iovec	access:public
iov_ubase	/home/trinity/src/kern/include/kern/iovec.h	/^                userptr_t  iov_ubase;	\/* user-supplied pointer *\/$/;"	m	union:iovec::__anon3	access:public
iovec	/home/trinity/src/kern/include/kern/iovec.h	/^struct iovec {$/;"	s
iovec::__anon3::iov_kbase	/home/trinity/src/kern/include/kern/iovec.h	/^                void      *iov_kbase;	\/* kernel-supplied pointer *\/$/;"	m	union:iovec::__anon3	access:public
iovec::__anon3::iov_ubase	/home/trinity/src/kern/include/kern/iovec.h	/^                userptr_t  iov_ubase;	\/* user-supplied pointer *\/$/;"	m	union:iovec::__anon3	access:public
iovec::iov_len	/home/trinity/src/kern/include/kern/iovec.h	/^        size_t iov_len;			\/* Length of data *\/$/;"	m	struct:iovec	access:public
ipi_broadcast	/home/trinity/src/kern/include/cpu.h	/^void ipi_broadcast(int code);$/;"	p	signature:(int code)
ipi_broadcast	/home/trinity/src/kern/thread/thread.c	/^ipi_broadcast(int code)$/;"	f	signature:(int code)
ipi_send	/home/trinity/src/kern/include/cpu.h	/^void ipi_send(struct cpu *target, int code);$/;"	p	signature:(struct cpu *target, int code)
ipi_send	/home/trinity/src/kern/thread/thread.c	/^ipi_send(struct cpu *target, int code)$/;"	f	signature:(struct cpu *target, int code)
ipi_tlbshootdown	/home/trinity/src/kern/include/cpu.h	/^void ipi_tlbshootdown(struct cpu *target, const struct tlbshootdown *mapping);$/;"	p	signature:(struct cpu *target, const struct tlbshootdown *mapping)
ipi_tlbshootdown	/home/trinity/src/kern/thread/thread.c	/^ipi_tlbshootdown(struct cpu *target, const struct tlbshootdown *mapping)$/;"	f	signature:(struct cpu *target, const struct tlbshootdown *mapping)
it_interval	/home/trinity/src/kern/include/kern/time.h	/^        struct timeval it_interval;	\/* Time to reload after expiry. *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
it_value	/home/trinity/src/kern/include/kern/time.h	/^	struct timeval it_value;	\/* Time to count. *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
itimerval	/home/trinity/src/kern/include/kern/time.h	/^struct itimerval {$/;"	s
itimerval::it_interval	/home/trinity/src/kern/include/kern/time.h	/^        struct timeval it_interval;	\/* Time to reload after expiry. *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
itimerval::it_value	/home/trinity/src/kern/include/kern/time.h	/^	struct timeval it_value;	\/* Time to count. *\/$/;"	m	struct:itimerval	typeref:struct:itimerval::timeval	access:public
jmp_buf	/home/trinity/src/kern/arch/mips/include/kern/setjmp.h	/^typedef uint32_t jmp_buf[__JB_REGS];$/;"	t
join32to64	/home/trinity/src/kern/include/endian.h	/^void join32to64(uint32_t x1, uint32_t x2, uint64_t *y2);$/;"	p	signature:(uint32_t x1, uint32_t x2, uint64_t *y2)
join32to64	/home/trinity/src/kern/lib/bswap.c	/^join32to64(uint32_t x1, uint32_t x2, uint64_t *y2)$/;"	f	signature:(uint32_t x1, uint32_t x2, uint64_t *y2)
k0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	66;"	d
k1	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	67;"	d
kd_device	/home/trinity/src/kern/vfs/vfslist.c	/^	struct device *kd_device;$/;"	m	struct:knowndev	typeref:struct:knowndev::device	file:	access:public
kd_fs	/home/trinity/src/kern/vfs/vfslist.c	/^	struct fs *kd_fs;$/;"	m	struct:knowndev	typeref:struct:knowndev::fs	file:	access:public
kd_name	/home/trinity/src/kern/vfs/vfslist.c	/^	char *kd_name;$/;"	m	struct:knowndev	file:	access:public
kd_rawname	/home/trinity/src/kern/vfs/vfslist.c	/^	char *kd_rawname;$/;"	m	struct:knowndev	file:	access:public
kd_vnode	/home/trinity/src/kern/vfs/vfslist.c	/^	struct vnode *kd_vnode;$/;"	m	struct:knowndev	typeref:struct:knowndev::vnode	file:	access:public
keys1	/home/trinity/src/kern/test/hmacunit.c	/^static const char *keys1[] = {$/;"	v	file:
kfree	/home/trinity/src/kern/include/lib.h	/^void kfree(void *ptr);$/;"	p	signature:(void *ptr)
kfree	/home/trinity/src/kern/vm/kmalloc.c	/^kfree(void *ptr)$/;"	f	signature:(void *ptr)
kgets	/home/trinity/src/kern/include/lib.h	/^void kgets(char *buf, size_t maxbuflen);$/;"	p	signature:(char *buf, size_t maxbuflen)
kgets	/home/trinity/src/kern/lib/kgets.c	/^kgets(char *buf, size_t maxlen)$/;"	f	signature:(char *buf, size_t maxlen)
kheap_dump	/home/trinity/src/kern/include/lib.h	/^void kheap_dump(void);$/;"	p	signature:(void)
kheap_dump	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_dump(void)$/;"	f	signature:(void)
kheap_dumpall	/home/trinity/src/kern/include/lib.h	/^void kheap_dumpall(void);$/;"	p	signature:(void)
kheap_dumpall	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_dumpall(void)$/;"	f	signature:(void)
kheap_getused	/home/trinity/src/kern/include/lib.h	/^unsigned long kheap_getused(void);$/;"	p	signature:(void)
kheap_getused	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_getused(void) {$/;"	f	signature:(void)
kheap_nextgeneration	/home/trinity/src/kern/include/lib.h	/^void kheap_nextgeneration(void);$/;"	p	signature:(void)
kheap_nextgeneration	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_nextgeneration(void)$/;"	f	signature:(void)
kheap_printstats	/home/trinity/src/kern/include/lib.h	/^void kheap_printstats(void);$/;"	p	signature:(void)
kheap_printstats	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_printstats(void)$/;"	f	signature:(void)
kheap_printused	/home/trinity/src/kern/include/lib.h	/^void kheap_printused(void);$/;"	p	signature:(void)
kheap_printused	/home/trinity/src/kern/vm/kmalloc.c	/^kheap_printused(void)$/;"	f	signature:(void)
kheap_root	/home/trinity/src/kern/vm/kmalloc.c	/^struct kheap_root {$/;"	s	file:
kheap_root::numinuse	/home/trinity/src/kern/vm/kmalloc.c	/^	unsigned numinuse;$/;"	m	struct:kheap_root	file:	access:public
kheap_root::page	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pagerefpage *page;$/;"	m	struct:kheap_root	typeref:struct:kheap_root::pagerefpage	file:	access:public
kheap_root::pagerefs_inuse	/home/trinity/src/kern/vm/kmalloc.c	/^	uint32_t pagerefs_inuse[INUSE_WORDS];$/;"	m	struct:kheap_root	file:	access:public
kheaproots	/home/trinity/src/kern/vm/kmalloc.c	/^static struct kheap_root kheaproots[NUM_PAGEREFPAGES];$/;"	v	typeref:struct:kheap_root	file:
kill_curthread	/home/trinity/src/kern/arch/mips/locore/trap.c	/^kill_curthread(vaddr_t epc, unsigned code, vaddr_t vaddr)$/;"	f	file:	signature:(vaddr_t epc, unsigned code, vaddr_t vaddr)
km5_usage	/home/trinity/src/kern/test/kmalloctest.c	/^km5_usage()$/;"	f	file:
kmain	/home/trinity/src/kern/include/test.h	/^void kmain(char *bootstring);$/;"	p	signature:(char *bootstring)
kmain	/home/trinity/src/kern/main/main.c	/^kmain(char *arguments)$/;"	f	signature:(char *arguments)
kmalloc	/home/trinity/src/kern/include/lib.h	/^void *kmalloc(size_t size);$/;"	p	signature:(size_t size)
kmalloc	/home/trinity/src/kern/vm/kmalloc.c	/^kmalloc(size_t sz)$/;"	f	signature:(size_t sz)
kmalloc_spinlock	/home/trinity/src/kern/vm/kmalloc.c	/^static struct spinlock kmalloc_spinlock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
kmallocstress	/home/trinity/src/kern/include/test.h	/^int kmallocstress(int, char **);$/;"	p	signature:(int, char **)
kmallocstress	/home/trinity/src/kern/test/kmalloctest.c	/^kmallocstress(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
kmalloctest	/home/trinity/src/kern/include/test.h	/^int kmalloctest(int, char **);$/;"	p	signature:(int, char **)
kmalloctest	/home/trinity/src/kern/test/kmalloctest.c	/^kmalloctest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
kmalloctest3	/home/trinity/src/kern/include/test.h	/^int kmalloctest3(int, char **);$/;"	p	signature:(int, char **)
kmalloctest3	/home/trinity/src/kern/test/kmalloctest.c	/^kmalloctest3(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
kmalloctest4	/home/trinity/src/kern/include/test.h	/^int kmalloctest4(int, char **);$/;"	p	signature:(int, char **)
kmalloctest4	/home/trinity/src/kern/test/kmalloctest.c	/^kmalloctest4(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
kmalloctest4thread	/home/trinity/src/kern/test/kmalloctest.c	/^kmalloctest4thread(void *sm, unsigned long num)$/;"	f	file:	signature:(void *sm, unsigned long num)
kmalloctest5	/home/trinity/src/kern/include/test.h	/^int kmalloctest5(int, char **);$/;"	p	signature:(int, char **)
kmalloctest5	/home/trinity/src/kern/test/kmalloctest.c	/^kmalloctest5(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
kmallocthread	/home/trinity/src/kern/test/kmalloctest.c	/^kmallocthread(void *sm, unsigned long num)$/;"	f	file:	signature:(void *sm, unsigned long num)
knowndev	/home/trinity/src/kern/vfs/vfslist.c	/^struct knowndev {$/;"	s	file:
knowndev::kd_device	/home/trinity/src/kern/vfs/vfslist.c	/^	struct device *kd_device;$/;"	m	struct:knowndev	typeref:struct:knowndev::device	file:	access:public
knowndev::kd_fs	/home/trinity/src/kern/vfs/vfslist.c	/^	struct fs *kd_fs;$/;"	m	struct:knowndev	typeref:struct:knowndev::fs	file:	access:public
knowndev::kd_name	/home/trinity/src/kern/vfs/vfslist.c	/^	char *kd_name;$/;"	m	struct:knowndev	file:	access:public
knowndev::kd_rawname	/home/trinity/src/kern/vfs/vfslist.c	/^	char *kd_rawname;$/;"	m	struct:knowndev	file:	access:public
knowndev::kd_vnode	/home/trinity/src/kern/vfs/vfslist.c	/^	struct vnode *kd_vnode;$/;"	m	struct:knowndev	typeref:struct:knowndev::vnode	file:	access:public
knowndevs	/home/trinity/src/kern/vfs/vfslist.c	/^static struct knowndevarray *knowndevs;$/;"	v	typeref:struct:knowndevarray	file:
kprintf	/home/trinity/src/kern/lib/kprintf.c	/^kprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
kprintf_bootstrap	/home/trinity/src/kern/include/lib.h	/^void kprintf_bootstrap(void);$/;"	p	signature:(void)
kprintf_bootstrap	/home/trinity/src/kern/lib/kprintf.c	/^kprintf_bootstrap(void)$/;"	f	signature:(void)
kprintf_lock	/home/trinity/src/kern/lib/kprintf.c	/^static struct lock *kprintf_lock;$/;"	v	typeref:struct:lock	file:
kprintf_n	/home/trinity/src/kern/include/test.h	193;"	d
kprintf_n	/home/trinity/src/kern/include/test.h	196;"	d
kprintf_spinlock	/home/trinity/src/kern/lib/kprintf.c	/^static struct spinlock kprintf_spinlock;$/;"	v	typeref:struct:spinlock	file:
kprintf_t	/home/trinity/src/kern/include/test.h	192;"	d
kprintf_t	/home/trinity/src/kern/include/test.h	195;"	d
kproc	/home/trinity/src/kern/proc/proc.c	/^struct proc *kproc;$/;"	v	typeref:struct:proc
kstrdup	/home/trinity/src/kern/include/lib.h	/^char *kstrdup(const char *str);$/;"	p	signature:(const char *str)
kstrdup	/home/trinity/src/kern/lib/misc.c	/^kstrdup(const char *s)$/;"	f	signature:(const char *s)
l_holding	/home/trinity/src/kern/include/hangman.h	/^	const struct hangman_actor *l_holding;$/;"	m	struct:hangman_lockable	typeref:struct:hangman_lockable::hangman_actor	access:public
l_len	/home/trinity/src/kern/include/kern/fcntl.h	/^	off_t l_len;            \/* length of locked region *\/$/;"	m	struct:flock	access:public
l_name	/home/trinity/src/kern/include/hangman.h	/^	const char *l_name;$/;"	m	struct:hangman_lockable	access:public
l_pid	/home/trinity/src/kern/include/kern/fcntl.h	/^	pid_t l_pid;            \/* process that holds the lock *\/$/;"	m	struct:flock	access:public
l_start	/home/trinity/src/kern/include/kern/fcntl.h	/^	off_t l_start;          \/* place in file *\/$/;"	m	struct:flock	access:public
l_type	/home/trinity/src/kern/include/kern/fcntl.h	/^	int l_type;             \/* F_RDLCK or F_WRLCK *\/$/;"	m	struct:flock	access:public
l_whence	/home/trinity/src/kern/include/kern/fcntl.h	/^	int l_whence;           \/* SEEK_SET, SEEK_CUR, or SEEK_END *\/$/;"	m	struct:flock	access:public
label	/home/trinity/src/kern/vm/kmalloc.c	/^	vaddr_t label;$/;"	m	struct:malloclabel	file:	access:public
lamebus	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^static struct lamebus_softc *lamebus;$/;"	v	typeref:struct:lamebus_softc	file:
lamebus_assert_ipi	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_assert_ipi(struct lamebus_softc *lamebus, struct cpu *target)$/;"	f	signature:(struct lamebus_softc *lamebus, struct cpu *target)
lamebus_assert_ipi	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_assert_ipi(struct lamebus_softc *, struct cpu *targetcpu);$/;"	p	signature:(struct lamebus_softc *, struct cpu *targetcpu)
lamebus_attach_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_attach_interrupt(struct lamebus_softc *sc, int slot,$/;"	f	signature:(struct lamebus_softc *sc, int slot, void *devdata, void (*irqfunc)(void *devdata))
lamebus_attach_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_attach_interrupt(struct lamebus_softc *, int slot,$/;"	p	signature:(struct lamebus_softc *, int slot, void *devdata, void (*irqfunc)(void *devdata))
lamebus_clear_ipi	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_clear_ipi(struct lamebus_softc *lamebus, struct cpu *target)$/;"	f	signature:(struct lamebus_softc *lamebus, struct cpu *target)
lamebus_clear_ipi	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_clear_ipi(struct lamebus_softc *, struct cpu *targetcpu);$/;"	p	signature:(struct lamebus_softc *, struct cpu *targetcpu)
lamebus_detach_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_detach_interrupt(struct lamebus_softc *sc, int slot)$/;"	f	signature:(struct lamebus_softc *sc, int slot)
lamebus_detach_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_detach_interrupt(struct lamebus_softc *, int slot);$/;"	p	signature:(struct lamebus_softc *, int slot)
lamebus_find_cpus	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_find_cpus(struct lamebus_softc *lamebus)$/;"	f	signature:(struct lamebus_softc *lamebus)
lamebus_find_cpus	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_find_cpus(struct lamebus_softc *lamebus);$/;"	p	signature:(struct lamebus_softc *lamebus)
lamebus_init	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_init(void)$/;"	f	signature:(void)
lamebus_init	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^struct lamebus_softc *lamebus_init(void);$/;"	p	signature:(void)
lamebus_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_interrupt(struct lamebus_softc *lamebus)$/;"	f	signature:(struct lamebus_softc *lamebus)
lamebus_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_interrupt(struct lamebus_softc *);$/;"	p	signature:(struct lamebus_softc *)
lamebus_map_area	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^lamebus_map_area(struct lamebus_softc *bus, int slot, uint32_t offset)$/;"	f	signature:(struct lamebus_softc *bus, int slot, uint32_t offset)
lamebus_map_area	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void *lamebus_map_area(struct lamebus_softc *, int slot,$/;"	p	signature:(struct lamebus_softc *, int slot, uint32_t offset)
lamebus_mark	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_mark(struct lamebus_softc *sc, int slot)$/;"	f	signature:(struct lamebus_softc *sc, int slot)
lamebus_mark	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_mark(struct lamebus_softc *, int slot);$/;"	p	signature:(struct lamebus_softc *, int slot)
lamebus_mask_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_mask_interrupt(struct lamebus_softc *lamebus, int slot)$/;"	f	signature:(struct lamebus_softc *lamebus, int slot)
lamebus_mask_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_mask_interrupt(struct lamebus_softc *, int slot);$/;"	p	signature:(struct lamebus_softc *, int slot)
lamebus_poweroff	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_poweroff(struct lamebus_softc *lamebus)$/;"	f	signature:(struct lamebus_softc *lamebus)
lamebus_poweroff	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_poweroff(struct lamebus_softc *);$/;"	p	signature:(struct lamebus_softc *)
lamebus_probe	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_probe(struct lamebus_softc *sc,$/;"	f	signature:(struct lamebus_softc *sc, uint32_t vendorid, uint32_t deviceid, uint32_t lowver, uint32_t *version_ret)
lamebus_probe	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^int lamebus_probe(struct lamebus_softc *,$/;"	p	signature:(struct lamebus_softc *, uint32_t vendorid, uint32_t deviceid, uint32_t lowver, uint32_t *version_ret)
lamebus_ramsize	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_ramsize(void)$/;"	f	signature:(void)
lamebus_ramsize	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^size_t lamebus_ramsize(void);$/;"	p	signature:(void)
lamebus_read_register	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^lamebus_read_register(struct lamebus_softc *bus, int slot, uint32_t offset)$/;"	f	signature:(struct lamebus_softc *bus, int slot, uint32_t offset)
lamebus_read_register	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^uint32_t lamebus_read_register(struct lamebus_softc *, int slot,$/;"	p	signature:(struct lamebus_softc *, int slot, uint32_t offset)
lamebus_softc	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^struct lamebus_softc {$/;"	s
lamebus_softc::ls_devdata	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	void        *ls_devdata[LB_NSLOTS];$/;"	m	struct:lamebus_softc	access:public
lamebus_softc::ls_irqfuncs	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	lb_irqfunc   ls_irqfuncs[LB_NSLOTS];$/;"	m	struct:lamebus_softc	access:public
lamebus_softc::ls_lock	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	struct spinlock ls_lock;$/;"	m	struct:lamebus_softc	typeref:struct:lamebus_softc::spinlock	access:public
lamebus_softc::ls_slotsinuse	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	uint32_t     ls_slotsinuse;$/;"	m	struct:lamebus_softc	access:public
lamebus_softc::ls_uniprocessor	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	unsigned     ls_uniprocessor;$/;"	m	struct:lamebus_softc	access:public
lamebus_start_cpus	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_start_cpus(struct lamebus_softc *lamebus)$/;"	f	signature:(struct lamebus_softc *lamebus)
lamebus_start_cpus	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_start_cpus(struct lamebus_softc *lamebus);$/;"	p	signature:(struct lamebus_softc *lamebus)
lamebus_unmark	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_unmark(struct lamebus_softc *sc, int slot)$/;"	f	signature:(struct lamebus_softc *sc, int slot)
lamebus_unmark	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_unmark(struct lamebus_softc *, int slot);$/;"	p	signature:(struct lamebus_softc *, int slot)
lamebus_unmask_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^lamebus_unmask_interrupt(struct lamebus_softc *lamebus, int slot)$/;"	f	signature:(struct lamebus_softc *lamebus, int slot)
lamebus_unmask_interrupt	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_unmask_interrupt(struct lamebus_softc *, int slot);$/;"	p	signature:(struct lamebus_softc *, int slot)
lamebus_write_register	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^lamebus_write_register(struct lamebus_softc *bus, int slot,$/;"	f	signature:(struct lamebus_softc *bus, int slot, uint32_t offset, uint32_t val)
lamebus_write_register	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^void lamebus_write_register(struct lamebus_softc *, int slot,$/;"	p	signature:(struct lamebus_softc *, int slot, uint32_t offset, uint32_t val)
lastpaddr	/home/trinity/src/kern/arch/mips/vm/ram.c	/^static paddr_t lastpaddr;   \/* one past end of last free physical page *\/$/;"	v	file:
lb_irqfunc	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^typedef void (*lb_irqfunc)(void *devdata);$/;"	t
lbolt	/home/trinity/src/kern/thread/clock.c	/^static struct wchan *lbolt;$/;"	v	typeref:struct:wchan	file:
lbolt_lock	/home/trinity/src/kern/thread/clock.c	/^static struct spinlock lbolt_lock;$/;"	v	typeref:struct:spinlock	file:
leaveIntersection	/home/trinity/src/kern/include/test.h	/^void leaveIntersection(uint32_t);$/;"	p	signature:(uint32_t)
leaveIntersection	/home/trinity/src/kern/test/synchprobs.c	/^leaveIntersection(uint32_t index) {$/;"	f	signature:(uint32_t index)
lh_buf	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	void *lh_buf;			\/* Pointer to on-card I\/O buffer *\/$/;"	m	struct:lhd_softc	access:public
lh_busdata	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	void *lh_busdata;		\/* The bus we're on *\/$/;"	m	struct:lhd_softc	access:public
lh_buspos	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	uint32_t lh_buspos;		\/* Our slot on that bus *\/$/;"	m	struct:lhd_softc	access:public
lh_clear	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct semaphore *lh_clear;	\/* Synchronization *\/$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::semaphore	access:public
lh_dev	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct device lh_dev;		\/* VFS device structure *\/$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::device	access:public
lh_done	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct semaphore *lh_done;$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::semaphore	access:public
lh_result	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	int lh_result;			\/* Result from I\/O operation *\/$/;"	m	struct:lhd_softc	access:public
lh_unit	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	int lh_unit;			\/* What number lhd we are *\/$/;"	m	struct:lhd_softc	access:public
lhd_code_to_errno	/home/trinity/src/kern/dev/lamebus/lhd.c	/^int lhd_code_to_errno(struct lhd_softc *lh, int code)$/;"	f	file:	signature:(struct lhd_softc *lh, int code)
lhd_devops	/home/trinity/src/kern/dev/lamebus/lhd.c	/^static const struct device_ops lhd_devops = {$/;"	v	typeref:struct:device_ops	file:
lhd_eachopen	/home/trinity/src/kern/dev/lamebus/lhd.c	/^lhd_eachopen(struct device *d, int openflags)$/;"	f	file:	signature:(struct device *d, int openflags)
lhd_io	/home/trinity/src/kern/dev/lamebus/lhd.c	/^lhd_io(struct device *d, struct uio *uio)$/;"	f	file:	signature:(struct device *d, struct uio *uio)
lhd_ioctl	/home/trinity/src/kern/dev/lamebus/lhd.c	/^lhd_ioctl(struct device *d, int op, userptr_t data)$/;"	f	file:	signature:(struct device *d, int op, userptr_t data)
lhd_iodone	/home/trinity/src/kern/dev/lamebus/lhd.c	/^lhd_iodone(struct lhd_softc *lh, int err)$/;"	f	file:	signature:(struct lhd_softc *lh, int err)
lhd_irq	/home/trinity/src/kern/dev/lamebus/lhd.c	/^lhd_irq(void *vlh)$/;"	f	signature:(void *vlh)
lhd_irq	/home/trinity/src/kern/dev/lamebus/lhd.h	/^void lhd_irq(\/*struct lhd_softc*\/ void *);	\/* Interrupt handler *\/$/;"	p	signature:( void *)
lhd_rdreg	/home/trinity/src/kern/dev/lamebus/lhd.c	/^uint32_t lhd_rdreg(struct lhd_softc *lh, uint32_t reg)$/;"	f	file:	signature:(struct lhd_softc *lh, uint32_t reg)
lhd_softc	/home/trinity/src/kern/dev/lamebus/lhd.h	/^struct lhd_softc {$/;"	s
lhd_softc::lh_buf	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	void *lh_buf;			\/* Pointer to on-card I\/O buffer *\/$/;"	m	struct:lhd_softc	access:public
lhd_softc::lh_busdata	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	void *lh_busdata;		\/* The bus we're on *\/$/;"	m	struct:lhd_softc	access:public
lhd_softc::lh_buspos	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	uint32_t lh_buspos;		\/* Our slot on that bus *\/$/;"	m	struct:lhd_softc	access:public
lhd_softc::lh_clear	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct semaphore *lh_clear;	\/* Synchronization *\/$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::semaphore	access:public
lhd_softc::lh_dev	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct device lh_dev;		\/* VFS device structure *\/$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::device	access:public
lhd_softc::lh_done	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	struct semaphore *lh_done;$/;"	m	struct:lhd_softc	typeref:struct:lhd_softc::semaphore	access:public
lhd_softc::lh_result	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	int lh_result;			\/* Result from I\/O operation *\/$/;"	m	struct:lhd_softc	access:public
lhd_softc::lh_unit	/home/trinity/src/kern/dev/lamebus/lhd.h	/^	int lh_unit;			\/* What number lhd we are *\/$/;"	m	struct:lhd_softc	access:public
lhd_wreg	/home/trinity/src/kern/dev/lamebus/lhd.c	/^void lhd_wreg(struct lhd_softc *lh, uint32_t reg, uint32_t val)$/;"	f	file:	signature:(struct lhd_softc *lh, uint32_t reg, uint32_t val)
lk_name	/home/trinity/src/kern/include/synch.h	/^        char *lk_name;$/;"	m	struct:lock	access:public
ll16test	/home/trinity/src/kern/include/test.h	/^int ll16test(int, char **);$/;"	p	signature:(int, char **)
ll16test	/home/trinity/src/kern/test/automationtest.c	/^ll16test(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
ll16testthread	/home/trinity/src/kern/test/automationtest.c	/^ll16testthread(void *junk1, unsigned long i)$/;"	f	file:	signature:(void *junk1, unsigned long i)
ll1test	/home/trinity/src/kern/include/test.h	/^int ll1test(int, char **);$/;"	p	signature:(int, char **)
ll1test	/home/trinity/src/kern/test/automationtest.c	/^ll1test(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
load_elf	/home/trinity/src/kern/include/addrspace.h	/^int load_elf(struct vnode *v, vaddr_t *entrypoint);$/;"	p	signature:(struct vnode *v, vaddr_t *entrypoint)
load_elf	/home/trinity/src/kern/syscall/loadelf.c	/^load_elf(struct vnode *v, vaddr_t *entrypoint)$/;"	f	signature:(struct vnode *v, vaddr_t *entrypoint)
load_segment	/home/trinity/src/kern/syscall/loadelf.c	/^load_segment(struct addrspace *as, struct vnode *v,$/;"	f	file:	signature:(struct addrspace *as, struct vnode *v, off_t offset, vaddr_t vaddr, size_t memsize, size_t filesize, int is_executable)
lock	/home/trinity/src/kern/include/synch.h	/^struct lock {$/;"	s
lock1	/home/trinity/src/kern/main/menu.c	/^	struct lock *lock1;$/;"	m	struct:deadlock	typeref:struct:deadlock::lock	file:	access:public
lock2	/home/trinity/src/kern/main/menu.c	/^	struct lock *lock2;$/;"	m	struct:deadlock	typeref:struct:deadlock::lock	file:	access:public
lock::HANGMAN_LOCKABLE	/home/trinity/src/kern/include/synch.h	/^        HANGMAN_LOCKABLE(lk_hangman);   \/* Deadlock detector hook. *\/$/;"	p	struct:lock	access:public	signature:(lk_hangman)
lock::lk_name	/home/trinity/src/kern/include/synch.h	/^        char *lk_name;$/;"	m	struct:lock	access:public
lock::lock_count	/home/trinity/src/kern/include/synch.h	/^	volatile unsigned lock_count;$/;"	m	struct:lock	access:public
lock::thread_name	/home/trinity/src/kern/include/synch.h	/^	char thread_name[MAX_NAME_LENGTH];$/;"	m	struct:lock	access:public
lock_acquire	/home/trinity/src/kern/include/synch.h	/^void lock_acquire(struct lock *);$/;"	p	signature:(struct lock *)
lock_acquire	/home/trinity/src/kern/thread/synch.c	/^lock_acquire(struct lock *lock)$/;"	f	signature:(struct lock *lock)
lock_count	/home/trinity/src/kern/include/synch.h	/^	volatile unsigned lock_count;$/;"	m	struct:lock	access:public
lock_create	/home/trinity/src/kern/include/synch.h	/^struct lock *lock_create(const char *name);$/;"	p	signature:(const char *name)
lock_create	/home/trinity/src/kern/thread/synch.c	/^lock_create(const char *name)$/;"	f	signature:(const char *name)
lock_destroy	/home/trinity/src/kern/include/synch.h	/^void lock_destroy(struct lock *);$/;"	p	signature:(struct lock *)
lock_destroy	/home/trinity/src/kern/thread/synch.c	/^lock_destroy(struct lock *lock)$/;"	f	signature:(struct lock *lock)
lock_do_i_hold	/home/trinity/src/kern/include/synch.h	/^bool lock_do_i_hold(struct lock *);$/;"	p	signature:(struct lock *)
lock_do_i_hold	/home/trinity/src/kern/thread/synch.c	/^lock_do_i_hold(struct lock *lock)$/;"	f	signature:(struct lock *lock)
lock_release	/home/trinity/src/kern/include/synch.h	/^void lock_release(struct lock *);$/;"	p	signature:(struct lock *)
lock_release	/home/trinity/src/kern/thread/synch.c	/^lock_release(struct lock *lock)$/;"	f	signature:(struct lock *lock)
locktest	/home/trinity/src/kern/include/test.h	/^int locktest(int, char **);$/;"	p	signature:(int, char **)
locktest	/home/trinity/src/kern/test/synchtest.c	/^locktest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
locktest2	/home/trinity/src/kern/include/test.h	/^int locktest2(int, char **);$/;"	p	signature:(int, char **)
locktest2	/home/trinity/src/kern/test/synchtest.c	/^locktest2(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
locktest3	/home/trinity/src/kern/include/test.h	/^int locktest3(int, char **);$/;"	p	signature:(int, char **)
locktest3	/home/trinity/src/kern/test/synchtest.c	/^locktest3(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
locktest4	/home/trinity/src/kern/include/test.h	/^int locktest4(int, char **);$/;"	p	signature:(int, char **)
locktest4	/home/trinity/src/kern/test/synchtest.c	/^locktest4(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
locktest5	/home/trinity/src/kern/include/test.h	/^int locktest5(int, char **);$/;"	p	signature:(int, char **)
locktest5	/home/trinity/src/kern/test/synchtest.c	/^locktest5(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
locktestacquirer	/home/trinity/src/kern/test/synchtest.c	/^locktestacquirer(void * junk, unsigned long num)$/;"	f	file:	signature:(void * junk, unsigned long num)
locktestthread	/home/trinity/src/kern/test/synchtest.c	/^locktestthread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
longjmp	/home/trinity/src/kern/include/setjmp.h	/^void longjmp(jmp_buf jb, int retval);$/;"	p	signature:(jmp_buf jb, int retval)
longstress	/home/trinity/src/kern/include/test.h	/^int longstress(int, char **);$/;"	p	signature:(int, char **)
longstress	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(longstress);$/;"	v
longstress_thread	/home/trinity/src/kern/test/fstest.c	/^longstress_thread(void *fs, unsigned long num)$/;"	f	file:	signature:(void *fs, unsigned long num)
loudthread	/home/trinity/src/kern/test/threadtest.c	/^loudthread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
lr_bus	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^	void *lr_bus;$/;"	m	struct:lrandom_softc	access:public
lr_buspos	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^	uint32_t lr_buspos;$/;"	m	struct:lrandom_softc	access:public
lrandom_randmax	/home/trinity/src/kern/dev/lamebus/lrandom.c	/^lrandom_randmax(void *devdata)$/;"	f	signature:(void *devdata)
lrandom_randmax	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^uint32_t lrandom_randmax(\/*struct lrandom_softc*\/ void *devdata);$/;"	p	signature:( void *devdata)
lrandom_random	/home/trinity/src/kern/dev/lamebus/lrandom.c	/^lrandom_random(void *devdata)$/;"	f	signature:(void *devdata)
lrandom_random	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^uint32_t lrandom_random(\/*struct lrandom_softc*\/ void *devdata);$/;"	p	signature:( void *devdata)
lrandom_read	/home/trinity/src/kern/dev/lamebus/lrandom.c	/^lrandom_read(void *devdata, struct uio *uio)$/;"	f	signature:(void *devdata, struct uio *uio)
lrandom_read	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^int lrandom_read(\/*struct lrandom_softc*\/ void *, struct uio *);$/;"	p	signature:( void *, struct uio *)
lrandom_softc	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^struct lrandom_softc {$/;"	s
lrandom_softc::lr_bus	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^	void *lr_bus;$/;"	m	struct:lrandom_softc	access:public
lrandom_softc::lr_buspos	/home/trinity/src/kern/dev/lamebus/lrandom.h	/^	uint32_t lr_buspos;$/;"	m	struct:lrandom_softc	access:public
ls_busdata	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void *ls_busdata;		\/\/ bus we're on$/;"	m	struct:lscreen_softc	access:public
ls_busdata	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void *ls_busdata;$/;"	m	struct:lser_softc	access:public
ls_buspos	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	uint32_t ls_buspos;		\/\/ position on that bus$/;"	m	struct:lscreen_softc	access:public
ls_buspos	/home/trinity/src/kern/dev/lamebus/lser.h	/^	uint32_t ls_buspos;$/;"	m	struct:lser_softc	access:public
ls_cx	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	access:public
ls_cy	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	access:public
ls_devdata	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	void        *ls_devdata[LB_NSLOTS];$/;"	m	struct:lamebus_softc	access:public
ls_devdata	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void *ls_devdata;			\/\/ data and functions for$/;"	m	struct:lscreen_softc	access:public
ls_devdata	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void *ls_devdata;$/;"	m	struct:lser_softc	access:public
ls_height	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	access:public
ls_input	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void (*ls_input)(void *devdata, int ch); \/\/ console)$/;"	m	struct:lscreen_softc	access:public
ls_input	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void (*ls_input)(void *devdata, int ch);$/;"	m	struct:lser_softc	access:public
ls_irqfuncs	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	lb_irqfunc   ls_irqfuncs[LB_NSLOTS];$/;"	m	struct:lamebus_softc	access:public
ls_lock	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	struct spinlock ls_lock;$/;"	m	struct:lamebus_softc	typeref:struct:lamebus_softc::spinlock	access:public
ls_lock	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	struct spinlock ls_lock;      \/\/ protects data and device regs$/;"	m	struct:lscreen_softc	typeref:struct:lscreen_softc::spinlock	access:public
ls_lock	/home/trinity/src/kern/dev/lamebus/lser.h	/^	struct spinlock ls_lock;    \/* protects ls_wbusy and device regs *\/$/;"	m	struct:lser_softc	typeref:struct:lser_softc::spinlock	access:public
ls_screen	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	char *ls_screen;              \/\/ memory-mapped screen buffer$/;"	m	struct:lscreen_softc	access:public
ls_slotsinuse	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	uint32_t     ls_slotsinuse;$/;"	m	struct:lamebus_softc	access:public
ls_start	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void (*ls_start)(void *devdata);	\/\/ upper device (perhaps$/;"	m	struct:lscreen_softc	access:public
ls_start	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void (*ls_start)(void *devdata);$/;"	m	struct:lser_softc	access:public
ls_uniprocessor	/home/trinity/src/kern/dev/lamebus/lamebus.h	/^	unsigned     ls_uniprocessor;$/;"	m	struct:lamebus_softc	access:public
ls_wbusy	/home/trinity/src/kern/dev/lamebus/lser.h	/^	volatile bool ls_wbusy;     \/* true if write in progress *\/$/;"	m	struct:lser_softc	access:public
ls_width	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	access:public
lscreen_char	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^lscreen_char(struct lscreen_softc *sc, int ch)$/;"	f	file:	signature:(struct lscreen_softc *sc, int ch)
lscreen_irq	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^lscreen_irq(void *vsc)$/;"	f	signature:(void *vsc)
lscreen_irq	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^void lscreen_irq(\/*struct lser_softc*\/ void *sc);  \/\/ interrupt handler$/;"	p	signature:( void *sc)
lscreen_newline	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^lscreen_newline(struct lscreen_softc *sc)$/;"	f	file:	signature:(struct lscreen_softc *sc)
lscreen_softc	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^struct lscreen_softc {$/;"	s
lscreen_softc::ls_busdata	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void *ls_busdata;		\/\/ bus we're on$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_buspos	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	uint32_t ls_buspos;		\/\/ position on that bus$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_cx	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_cy	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_cx, ls_cy;        \/\/ cursor position$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_devdata	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void *ls_devdata;			\/\/ data and functions for$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_height	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_input	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void (*ls_input)(void *devdata, int ch); \/\/ console)$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_lock	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	struct spinlock ls_lock;      \/\/ protects data and device regs$/;"	m	struct:lscreen_softc	typeref:struct:lscreen_softc::spinlock	access:public
lscreen_softc::ls_screen	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	char *ls_screen;              \/\/ memory-mapped screen buffer$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_start	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	void (*ls_start)(void *devdata);	\/\/ upper device (perhaps$/;"	m	struct:lscreen_softc	access:public
lscreen_softc::ls_width	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^	unsigned ls_width, ls_height; \/\/ screen size$/;"	m	struct:lscreen_softc	access:public
lscreen_write	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^lscreen_write(void *vsc, int ch)$/;"	f	signature:(void *vsc, int ch)
lscreen_write	/home/trinity/src/kern/dev/lamebus/lscreen.h	/^void lscreen_write(\/*struct lser_softc*\/ void *sc, int ch); \/\/ output function$/;"	p	signature:( void *sc, int ch)
lser_irq	/home/trinity/src/kern/dev/lamebus/lser.c	/^lser_irq(void *vsc)$/;"	f	signature:(void *vsc)
lser_irq	/home/trinity/src/kern/dev/lamebus/lser.h	/^void lser_irq(\/*struct lser_softc*\/ void *sc);$/;"	p	signature:( void *sc)
lser_poll_until_write	/home/trinity/src/kern/dev/lamebus/lser.c	/^lser_poll_until_write(struct lser_softc *sc)$/;"	f	file:	signature:(struct lser_softc *sc)
lser_softc	/home/trinity/src/kern/dev/lamebus/lser.h	/^struct lser_softc {$/;"	s
lser_softc::ls_busdata	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void *ls_busdata;$/;"	m	struct:lser_softc	access:public
lser_softc::ls_buspos	/home/trinity/src/kern/dev/lamebus/lser.h	/^	uint32_t ls_buspos;$/;"	m	struct:lser_softc	access:public
lser_softc::ls_devdata	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void *ls_devdata;$/;"	m	struct:lser_softc	access:public
lser_softc::ls_input	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void (*ls_input)(void *devdata, int ch);$/;"	m	struct:lser_softc	access:public
lser_softc::ls_lock	/home/trinity/src/kern/dev/lamebus/lser.h	/^	struct spinlock ls_lock;    \/* protects ls_wbusy and device regs *\/$/;"	m	struct:lser_softc	typeref:struct:lser_softc::spinlock	access:public
lser_softc::ls_start	/home/trinity/src/kern/dev/lamebus/lser.h	/^	void (*ls_start)(void *devdata);$/;"	m	struct:lser_softc	access:public
lser_softc::ls_wbusy	/home/trinity/src/kern/dev/lamebus/lser.h	/^	volatile bool ls_wbusy;     \/* true if write in progress *\/$/;"	m	struct:lser_softc	access:public
lser_write	/home/trinity/src/kern/dev/lamebus/lser.c	/^lser_write(void *vls, int ch)$/;"	f	signature:(void *vls, int ch)
lser_write	/home/trinity/src/kern/dev/lamebus/lser.h	/^void lser_write(\/*struct lser_softc*\/ void *sc, int ch);$/;"	p	signature:( void *sc, int ch)
lser_writepolled	/home/trinity/src/kern/dev/lamebus/lser.c	/^lser_writepolled(void *vsc, int ch)$/;"	f	signature:(void *vsc, int ch)
lser_writepolled	/home/trinity/src/kern/dev/lamebus/lser.h	/^void lser_writepolled(\/*struct lser_softc*\/ void *sc, int ch);$/;"	p	signature:( void *sc, int ch)
lt_bus	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	void *lt_bus;		\/* bus we're on *\/$/;"	m	struct:ltimer_softc	access:public
lt_busdata	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	void *lt_busdata;$/;"	m	struct:ltrace_softc	access:public
lt_buspos	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	uint32_t lt_buspos;	\/* position (slot) on that bus *\/$/;"	m	struct:ltimer_softc	access:public
lt_buspos	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	uint32_t lt_buspos;$/;"	m	struct:ltrace_softc	access:public
lt_canprof	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	bool lt_canprof;$/;"	m	struct:ltrace_softc	access:public
lt_canstop	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	bool lt_canstop;$/;"	m	struct:ltrace_softc	access:public
lt_hardclock	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	int lt_hardclock;        \/* true if we should call hardclock() *\/$/;"	m	struct:ltimer_softc	access:public
lt_timerclock	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	int lt_timerclock;        \/* true if we should call timerclock() *\/$/;"	m	struct:ltimer_softc	access:public
ltimer_beep	/home/trinity/src/kern/dev/lamebus/ltimer.c	/^ltimer_beep(void *vlt)$/;"	f	signature:(void *vlt)
ltimer_beep	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^void ltimer_beep(\/*struct ltimer_softc*\/ void *devdata);   \/\/ for beep device$/;"	p	signature:( void *devdata)
ltimer_gettime	/home/trinity/src/kern/dev/lamebus/ltimer.c	/^ltimer_gettime(void *vlt, struct timespec *ts)$/;"	f	signature:(void *vlt, struct timespec *ts)
ltimer_gettime	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^void ltimer_gettime(\/*struct ltimer_softc*\/ void *devdata,$/;"	p	signature:( void *devdata, struct timespec *ts)
ltimer_irq	/home/trinity/src/kern/dev/lamebus/ltimer.c	/^ltimer_irq(void *vlt)$/;"	f	signature:(void *vlt)
ltimer_irq	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^void ltimer_irq(\/*struct ltimer_softc*\/ void *lt);  \/\/ interrupt handler$/;"	p	signature:( void *lt)
ltimer_softc	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^struct ltimer_softc {$/;"	s
ltimer_softc::lt_bus	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	void *lt_bus;		\/* bus we're on *\/$/;"	m	struct:ltimer_softc	access:public
ltimer_softc::lt_buspos	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	uint32_t lt_buspos;	\/* position (slot) on that bus *\/$/;"	m	struct:ltimer_softc	access:public
ltimer_softc::lt_hardclock	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	int lt_hardclock;        \/* true if we should call hardclock() *\/$/;"	m	struct:ltimer_softc	access:public
ltimer_softc::lt_timerclock	/home/trinity/src/kern/dev/lamebus/ltimer.h	/^	int lt_timerclock;        \/* true if we should call timerclock() *\/$/;"	m	struct:ltimer_softc	access:public
ltrace_debug	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_debug(uint32_t code)$/;"	f	signature:(uint32_t code)
ltrace_debug	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_debug(uint32_t code);$/;"	p	signature:(uint32_t code)
ltrace_dump	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_dump(uint32_t code)$/;"	f	signature:(uint32_t code)
ltrace_dump	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_dump(uint32_t code);$/;"	p	signature:(uint32_t code)
ltrace_eraseprof	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_eraseprof(void)$/;"	f	signature:(void)
ltrace_eraseprof	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_eraseprof(void);$/;"	p	signature:(void)
ltrace_off	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_off(uint32_t code)$/;"	f	signature:(uint32_t code)
ltrace_off	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_off(uint32_t code);$/;"	p	signature:(uint32_t code)
ltrace_on	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_on(uint32_t code)$/;"	f	signature:(uint32_t code)
ltrace_on	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_on(uint32_t code);$/;"	p	signature:(uint32_t code)
ltrace_setprof	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_setprof(uint32_t onoff)$/;"	f	signature:(uint32_t onoff)
ltrace_setprof	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_setprof(uint32_t onoff);$/;"	p	signature:(uint32_t onoff)
ltrace_softc	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^struct ltrace_softc {$/;"	s
ltrace_softc::lt_busdata	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	void *lt_busdata;$/;"	m	struct:ltrace_softc	access:public
ltrace_softc::lt_buspos	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	uint32_t lt_buspos;$/;"	m	struct:ltrace_softc	access:public
ltrace_softc::lt_canprof	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	bool lt_canprof;$/;"	m	struct:ltrace_softc	access:public
ltrace_softc::lt_canstop	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^	bool lt_canstop;$/;"	m	struct:ltrace_softc	access:public
ltrace_stop	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^ltrace_stop(uint32_t code)$/;"	f	signature:(uint32_t code)
ltrace_stop	/home/trinity/src/kern/dev/lamebus/ltrace.h	/^void ltrace_stop(uint32_t code);$/;"	p	signature:(uint32_t code)
mainbus_bootstrap	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_bootstrap(void)$/;"	f	signature:(void)
mainbus_bootstrap	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_bootstrap(void);$/;"	p	signature:(void)
mainbus_debugger	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_debugger(void)$/;"	f	signature:(void)
mainbus_debugger	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_debugger(void);$/;"	p	signature:(void)
mainbus_halt	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_halt(void)$/;"	f	signature:(void)
mainbus_halt	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_halt(void);$/;"	p	signature:(void)
mainbus_interrupt	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_interrupt(struct trapframe *tf)$/;"	f	signature:(struct trapframe *tf)
mainbus_interrupt	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_interrupt(struct trapframe *);$/;"	p	signature:(struct trapframe *)
mainbus_panic	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_panic(void)$/;"	f	signature:(void)
mainbus_panic	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_panic(void);$/;"	p	signature:(void)
mainbus_poweroff	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_poweroff(void)$/;"	f	signature:(void)
mainbus_poweroff	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_poweroff(void);$/;"	p	signature:(void)
mainbus_ramsize	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_ramsize(void)$/;"	f	signature:(void)
mainbus_ramsize	/home/trinity/src/kern/include/mainbus.h	/^size_t mainbus_ramsize(void);$/;"	p	signature:(void)
mainbus_reboot	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_reboot(void)$/;"	f	signature:(void)
mainbus_reboot	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_reboot(void);$/;"	p	signature:(void)
mainbus_send_ipi	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_send_ipi(struct cpu *target)$/;"	f	signature:(struct cpu *target)
mainbus_send_ipi	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_send_ipi(struct cpu *target);$/;"	p	signature:(struct cpu *target)
mainbus_start_cpus	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mainbus_start_cpus(void)$/;"	f	signature:(void)
mainbus_start_cpus	/home/trinity/src/kern/include/mainbus.h	/^void mainbus_start_cpus(void);$/;"	p	signature:(void)
mainmenu	/home/trinity/src/kern/main/menu.c	/^static const char *mainmenu[] = {$/;"	v	file:
make_computes	/home/trinity/src/kern/test/tt3.c	/^make_computes(int howmany)$/;"	f	file:	signature:(int howmany)
make_sleepalots	/home/trinity/src/kern/test/tt3.c	/^make_sleepalots(int howmany)$/;"	f	file:	signature:(int howmany)
makesem	/home/trinity/src/kern/test/semunit.c	/^makesem(unsigned count)$/;"	f	file:	signature:(unsigned count)
makewaiter	/home/trinity/src/kern/test/semunit.c	/^makewaiter(struct semaphore *sem)$/;"	f	file:	signature:(struct semaphore *sem)
male	/home/trinity/src/kern/include/test.h	/^void male(uint32_t);$/;"	p	signature:(uint32_t)
male	/home/trinity/src/kern/synchprobs/whalemating.c	/^male(uint32_t index)$/;"	f	signature:(uint32_t index)
male_end	/home/trinity/src/kern/include/test.h	/^void male_end(uint32_t);$/;"	p	signature:(uint32_t)
male_end	/home/trinity/src/kern/test/synchprobs.c	/^male_end(uint32_t index) {$/;"	f	signature:(uint32_t index)
male_end_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int male_end_count;$/;"	v	file:
male_start	/home/trinity/src/kern/include/test.h	/^void male_start(uint32_t);$/;"	p	signature:(uint32_t)
male_start	/home/trinity/src/kern/test/synchprobs.c	/^male_start(uint32_t index) {$/;"	f	signature:(uint32_t index)
male_start_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int male_start_count;$/;"	v	file:
male_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^male_wrapper(void * unused1, unsigned long index) {$/;"	f	file:	signature:(void * unused1, unsigned long index)
mallocgeneration	/home/trinity/src/kern/vm/kmalloc.c	/^static unsigned mallocgeneration;$/;"	v	file:
malloclabel	/home/trinity/src/kern/vm/kmalloc.c	/^struct malloclabel {$/;"	s	file:
malloclabel::generation	/home/trinity/src/kern/vm/kmalloc.c	/^	unsigned generation;$/;"	m	struct:malloclabel	file:	access:public
malloclabel::label	/home/trinity/src/kern/vm/kmalloc.c	/^	vaddr_t label;$/;"	m	struct:malloclabel	file:	access:public
match_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int match_count;$/;"	v	file:
matcher_sem	/home/trinity/src/kern/test/synchprobs.c	/^static struct semaphore *matcher_sem;$/;"	v	typeref:struct:semaphore	file:
matchmaker	/home/trinity/src/kern/include/test.h	/^void matchmaker(uint32_t);$/;"	p	signature:(uint32_t)
matchmaker	/home/trinity/src/kern/synchprobs/whalemating.c	/^matchmaker(uint32_t index)$/;"	f	signature:(uint32_t index)
matchmaker_end	/home/trinity/src/kern/include/test.h	/^void matchmaker_end(uint32_t);$/;"	p	signature:(uint32_t)
matchmaker_end	/home/trinity/src/kern/test/synchprobs.c	/^matchmaker_end(uint32_t index) {$/;"	f	signature:(uint32_t index)
matchmaker_end_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int matchmaker_end_count;$/;"	v	file:
matchmaker_start	/home/trinity/src/kern/include/test.h	/^void matchmaker_start(uint32_t);$/;"	p	signature:(uint32_t)
matchmaker_start	/home/trinity/src/kern/test/synchprobs.c	/^matchmaker_start(uint32_t index) {$/;"	f	signature:(uint32_t index)
matchmaker_start_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int matchmaker_start_count;$/;"	v	file:
matchmaker_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^matchmaker_wrapper(void * unused1, unsigned long index) {$/;"	f	file:	signature:(void * unused1, unsigned long index)
max	/home/trinity/src/kern/include/array.h	/^	unsigned num, max;$/;"	m	struct:array	access:public
max_car_count	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int max_car_count;$/;"	v	file:
max_concurrent_matchmakers	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int max_concurrent_matchmakers;$/;"	v	file:
membar_any_any	/home/trinity/src/kern/arch/mips/include/membar.h	/^membar_any_any(void)$/;"	f	signature:(void)
membar_any_any	/home/trinity/src/kern/include/membar.h	/^MEMBAR_INLINE void membar_any_any(void);$/;"	p	signature:(void)
membar_any_store	/home/trinity/src/kern/arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_any_store(void) { membar_any_any(); }$/;"	f	signature:(void)
membar_any_store	/home/trinity/src/kern/include/membar.h	/^MEMBAR_INLINE void membar_any_store(void);$/;"	p	signature:(void)
membar_load_load	/home/trinity/src/kern/arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_load_load(void) { membar_any_any(); }$/;"	f	signature:(void)
membar_load_load	/home/trinity/src/kern/include/membar.h	/^MEMBAR_INLINE void membar_load_load(void);$/;"	p	signature:(void)
membar_store_any	/home/trinity/src/kern/arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_store_any(void) { membar_any_any(); }$/;"	f	signature:(void)
membar_store_any	/home/trinity/src/kern/include/membar.h	/^MEMBAR_INLINE void membar_store_any(void);$/;"	p	signature:(void)
membar_store_store	/home/trinity/src/kern/arch/mips/include/membar.h	/^MEMBAR_INLINE void membar_store_store(void) { membar_any_any(); }$/;"	f	signature:(void)
membar_store_store	/home/trinity/src/kern/include/membar.h	/^MEMBAR_INLINE void membar_store_store(void);$/;"	p	signature:(void)
memcpy	/home/trinity/src/kern/include/lib.h	/^void *memcpy(void *dest, const void *src, size_t len);$/;"	p	signature:(void *dest, const void *src, size_t len)
memmove	/home/trinity/src/kern/include/lib.h	/^void *memmove(void *dest, const void *src, size_t len);$/;"	p	signature:(void *dest, const void *src, size_t len)
memset	/home/trinity/src/kern/include/lib.h	/^void *memset(void *block, int ch, size_t len);$/;"	p	signature:(void *block, int ch, size_t len)
menu	/home/trinity/src/kern/include/test.h	/^void menu(char *argstr);$/;"	p	signature:(char *argstr)
menu	/home/trinity/src/kern/main/menu.c	/^menu(char *args)$/;"	f	signature:(char *args)
menu_execute	/home/trinity/src/kern/main/menu.c	/^menu_execute(char *line, int isargs)$/;"	f	file:	signature:(char *line, int isargs)
mergexy	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^mergexy(unsigned x, unsigned y)$/;"	f	file:	signature:(unsigned x, unsigned y)
mips_flushicache	/home/trinity/src/kern/arch/mips/locore/cache-mips161.S	/^mips_flushicache:$/;"	l
mips_general_end	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^mips_general_end:$/;"	l
mips_general_handler	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^mips_general_handler:$/;"	l
mips_threadstart	/home/trinity/src/kern/arch/mips/thread/switchframe.c	/^extern void mips_threadstart(\/* arguments are in unusual registers *\/);$/;"	p	file:
mips_threadstart	/home/trinity/src/kern/arch/mips/thread/threadstart.S	/^mips_threadstart:$/;"	l
mips_timer_set	/home/trinity/src/kern/arch/sys161/dev/lamebus_machdep.c	/^mips_timer_set(uint32_t count)$/;"	f	file:	signature:(uint32_t count)
mips_trap	/home/trinity/src/kern/arch/mips/locore/trap.c	/^mips_trap(struct trapframe *tf)$/;"	f	signature:(struct trapframe *tf)
mips_trap	/home/trinity/src/kern/arch/mips/locore/trap.c	/^void mips_trap(struct trapframe *tf);$/;"	p	file:	signature:(struct trapframe *tf)
mips_usermode	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^__DEAD void mips_usermode(struct trapframe *tf);$/;"	p	signature:(struct trapframe *tf)
mips_usermode	/home/trinity/src/kern/arch/mips/locore/trap.c	/^mips_usermode(struct trapframe *tf)$/;"	f	signature:(struct trapframe *tf)
mips_utlb_end	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^mips_utlb_end:$/;"	l
mips_utlb_handler	/home/trinity/src/kern/arch/mips/locore/exception-mips1.S	/^mips_utlb_handler:$/;"	l
mkrawname	/home/trinity/src/kern/vfs/vfslist.c	/^mkrawname(const char *name)$/;"	f	file:	signature:(const char *name)
mode_t	/home/trinity/src/kern/include/types.h	/^typedef __mode_t mode_t;$/;"	t
mounttable	/home/trinity/src/kern/main/menu.c	/^} mounttable[] = {$/;"	v	typeref:struct:__anon5	file:
move	/home/trinity/src/kern/test/synchprobs.c	/^move(uint32_t index) {$/;"	f	file:	signature:(uint32_t index)
msg_control	/home/trinity/src/kern/include/kern/socket.h	/^	void *msg_control;	\/* auxiliary data area, or null *\/$/;"	m	struct:msghdr	access:public
msg_controllen	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t msg_controllen; \/* size of msg_control area *\/$/;"	m	struct:msghdr	access:public
msg_flags	/home/trinity/src/kern/include/kern/socket.h	/^	int msg_flags;		\/* flags *\/$/;"	m	struct:msghdr	access:public
msg_iov	/home/trinity/src/kern/include/kern/socket.h	/^	struct iovec *msg_iov;	\/* I\/O buffers *\/$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec	access:public
msg_iovlen	/home/trinity/src/kern/include/kern/socket.h	/^	int msg_iovlen;		\/* number of iovecs *\/$/;"	m	struct:msghdr	access:public
msg_name	/home/trinity/src/kern/include/kern/socket.h	/^	void *msg_name;		\/* really sockaddr; address, or null *\/$/;"	m	struct:msghdr	access:public
msg_namelen	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t msg_namelen;	\/* size of msg_name object, or 0 *\/$/;"	m	struct:msghdr	access:public
msghdr	/home/trinity/src/kern/include/kern/socket.h	/^struct msghdr {$/;"	s
msghdr::msg_control	/home/trinity/src/kern/include/kern/socket.h	/^	void *msg_control;	\/* auxiliary data area, or null *\/$/;"	m	struct:msghdr	access:public
msghdr::msg_controllen	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t msg_controllen; \/* size of msg_control area *\/$/;"	m	struct:msghdr	access:public
msghdr::msg_flags	/home/trinity/src/kern/include/kern/socket.h	/^	int msg_flags;		\/* flags *\/$/;"	m	struct:msghdr	access:public
msghdr::msg_iov	/home/trinity/src/kern/include/kern/socket.h	/^	struct iovec *msg_iov;	\/* I\/O buffers *\/$/;"	m	struct:msghdr	typeref:struct:msghdr::iovec	access:public
msghdr::msg_iovlen	/home/trinity/src/kern/include/kern/socket.h	/^	int msg_iovlen;		\/* number of iovecs *\/$/;"	m	struct:msghdr	access:public
msghdr::msg_name	/home/trinity/src/kern/include/kern/socket.h	/^	void *msg_name;		\/* really sockaddr; address, or null *\/$/;"	m	struct:msghdr	access:public
msghdr::msg_namelen	/home/trinity/src/kern/include/kern/socket.h	/^	socklen_t msg_namelen;	\/* size of msg_name object, or 0 *\/$/;"	m	struct:msghdr	access:public
name	/home/trinity/src/kern/main/menu.c	/^	const char *name;$/;"	m	struct:__anon5	file:	access:public
name	/home/trinity/src/kern/main/menu.c	/^	const char *name;$/;"	m	struct:__anon6	file:	access:public
names	/home/trinity/src/kern/test/threadlisttest.c	/^static const char *const names[NUMNAMES] = {$/;"	v	file:
nbits	/home/trinity/src/kern/lib/bitmap.c	/^        unsigned nbits;$/;"	m	struct:bitmap	file:	access:public
nettest	/home/trinity/src/kern/include/test.h	/^int nettest(int, char **);$/;"	p	signature:(int, char **)
nettest	/home/trinity/src/kern/test/nettest.c	/^nettest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
next	/home/trinity/src/kern/vm/kmalloc.c	/^	struct freelist *next;$/;"	m	struct:freelist	typeref:struct:freelist::freelist	file:	access:public
next_all	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref *next_all;$/;"	m	struct:pageref	typeref:struct:pageref::pageref	file:	access:public
next_samesize	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref *next_samesize;$/;"	m	struct:pageref	typeref:struct:pageref::pageref	file:	access:public
nextunit_beep	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_beep;$/;"	v	file:
nextunit_con	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_con;$/;"	v	file:
nextunit_emu	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_emu;$/;"	v	file:
nextunit_lhd	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_lhd;$/;"	v	file:
nextunit_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_lrandom;$/;"	v	file:
nextunit_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_lser;$/;"	v	file:
nextunit_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_ltimer;$/;"	v	file:
nextunit_ltrace	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_ltrace;$/;"	v	file:
nextunit_random	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_random;$/;"	v	file:
nextunit_rtclock	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^static int nextunit_rtclock;$/;"	v	file:
nfds_t	/home/trinity/src/kern/include/types.h	/^typedef __nfds_t nfds_t;$/;"	t
nfree	/home/trinity/src/kern/vm/kmalloc.c	/^	uint16_t nfree;$/;"	m	struct:pageref	file:	access:public
nlink_t	/home/trinity/src/kern/include/types.h	/^typedef __nlink_t nlink_t;$/;"	t
ntohl	/home/trinity/src/kern/include/endian.h	/^uint32_t ntohl(uint32_t);$/;"	p	signature:(uint32_t)
ntohll	/home/trinity/src/kern/include/endian.h	/^uint64_t ntohll(uint64_t);$/;"	p	signature:(uint64_t)
ntohs	/home/trinity/src/kern/include/endian.h	/^uint16_t ntohs(uint16_t);$/;"	p	signature:(uint16_t)
null_devops	/home/trinity/src/kern/vfs/devnull.c	/^static const struct device_ops null_devops = {$/;"	v	typeref:struct:device_ops	file:
null_fsync	/home/trinity/src/kern/vfs/device.c	/^null_fsync(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
nullio	/home/trinity/src/kern/vfs/devnull.c	/^nullio(struct device *dev, struct uio *uio)$/;"	f	file:	signature:(struct device *dev, struct uio *uio)
nullioctl	/home/trinity/src/kern/vfs/devnull.c	/^nullioctl(struct device *dev, int op, userptr_t data)$/;"	f	file:	signature:(struct device *dev, int op, userptr_t data)
nullopen	/home/trinity/src/kern/vfs/devnull.c	/^nullopen(struct device *dev, int openflags)$/;"	f	file:	signature:(struct device *dev, int openflags)
num	/home/trinity/src/kern/include/array.h	/^	unsigned num, max;$/;"	m	struct:array	access:public
num_cpus	/home/trinity/src/kern/thread/thread.c	/^unsigned num_cpus;$/;"	v
numinuse	/home/trinity/src/kern/vm/kmalloc.c	/^	unsigned numinuse;$/;"	m	struct:kheap_root	file:	access:public
off_t	/home/trinity/src/kern/include/types.h	/^typedef __off_t off_t;$/;"	t
ok	/home/trinity/src/kern/test/hmacunit.c	/^ok(void)$/;"	f	file:	signature:(void)
ok	/home/trinity/src/kern/test/semunit.c	/^ok(void)$/;"	f	file:	signature:(void)
opsmenu	/home/trinity/src/kern/main/menu.c	/^static const char *opsmenu[] = {$/;"	v	file:
p_addrspace	/home/trinity/src/kern/include/proc.h	/^	struct addrspace *p_addrspace;	\/* virtual address space *\/$/;"	m	struct:proc	typeref:struct:proc::addrspace	access:public
p_align	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_align;     \/* Required alignment - can ignore *\/$/;"	m	struct:__anon2	access:public
p_cwd	/home/trinity/src/kern/include/proc.h	/^	struct vnode *p_cwd;		\/* current working directory *\/$/;"	m	struct:proc	typeref:struct:proc::vnode	access:public
p_filesz	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_filesz;    \/* Size of data within file *\/$/;"	m	struct:__anon2	access:public
p_flags	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_flags;     \/* Flags *\/$/;"	m	struct:__anon2	access:public
p_lock	/home/trinity/src/kern/include/proc.h	/^	struct spinlock p_lock;		\/* Lock for this structure *\/$/;"	m	struct:proc	typeref:struct:proc::spinlock	access:public
p_memsz	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_memsz;     \/* Size of data to be loaded into memory*\/$/;"	m	struct:__anon2	access:public
p_name	/home/trinity/src/kern/include/proc.h	/^	char *p_name;			\/* Name of this process *\/$/;"	m	struct:proc	access:public
p_numthreads	/home/trinity/src/kern/include/proc.h	/^	unsigned p_numthreads;		\/* Number of threads in this process *\/$/;"	m	struct:proc	access:public
p_offset	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_offset;    \/* Location of data within file *\/$/;"	m	struct:__anon2	access:public
p_paddr	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_paddr;     \/* Ignore *\/$/;"	m	struct:__anon2	access:public
p_type	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_type;      \/* Type of segment *\/$/;"	m	struct:__anon2	access:public
p_vaddr	/home/trinity/src/kern/include/elf.h	/^	uint32_t	p_vaddr;     \/* Virtual address *\/$/;"	m	struct:__anon2	access:public
paddr_t	/home/trinity/src/kern/arch/mips/include/types.h	/^typedef __u32 paddr_t;$/;"	t
page	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pagerefpage *page;$/;"	m	struct:kheap_root	typeref:struct:kheap_root::pagerefpage	file:	access:public
pageaddr_and_blocktype	/home/trinity/src/kern/vm/kmalloc.c	/^	vaddr_t pageaddr_and_blocktype;$/;"	m	struct:pageref	file:	access:public
pageref	/home/trinity/src/kern/vm/kmalloc.c	/^struct pageref {$/;"	s	file:
pageref::freelist_offset	/home/trinity/src/kern/vm/kmalloc.c	/^	uint16_t freelist_offset;$/;"	m	struct:pageref	file:	access:public
pageref::next_all	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref *next_all;$/;"	m	struct:pageref	typeref:struct:pageref::pageref	file:	access:public
pageref::next_samesize	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref *next_samesize;$/;"	m	struct:pageref	typeref:struct:pageref::pageref	file:	access:public
pageref::nfree	/home/trinity/src/kern/vm/kmalloc.c	/^	uint16_t nfree;$/;"	m	struct:pageref	file:	access:public
pageref::pageaddr_and_blocktype	/home/trinity/src/kern/vm/kmalloc.c	/^	vaddr_t pageaddr_and_blocktype;$/;"	m	struct:pageref	file:	access:public
pagerefpage	/home/trinity/src/kern/vm/kmalloc.c	/^struct pagerefpage {$/;"	s	file:
pagerefpage::refs	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref refs[NPAGEREFS_PER_PAGE];$/;"	m	struct:pagerefpage	typeref:struct:pagerefpage::pageref	file:	access:public
pagerefs_inuse	/home/trinity/src/kern/vm/kmalloc.c	/^	uint32_t pagerefs_inuse[INUSE_WORDS];$/;"	m	struct:kheap_root	file:	access:public
panic	/home/trinity/src/kern/lib/kprintf.c	/^panic(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
panicstr	/home/trinity/src/kern/arch/sys161/main/start.S	/^panicstr:$/;"	l
partial_credit	/home/trinity/src/kern/include/kern/test161.h	/^int partial_credit(const char *secret, const char *name, int scored, int total);$/;"	p	signature:(const char *secret, const char *name, int scored, int total)
pid_t	/home/trinity/src/kern/include/types.h	/^typedef __pid_t pid_t;$/;"	t
plaintext1	/home/trinity/src/kern/test/hmacunit.c	/^static const char *plaintext1[] = {$/;"	v	file:
printfile	/home/trinity/src/kern/include/test.h	/^int printfile(int, char **);$/;"	p	signature:(int, char **)
printfile	/home/trinity/src/kern/test/fstest.c	/^printfile(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
proc	/home/trinity/src/kern/include/proc.h	/^struct proc {$/;"	s
proc::p_addrspace	/home/trinity/src/kern/include/proc.h	/^	struct addrspace *p_addrspace;	\/* virtual address space *\/$/;"	m	struct:proc	typeref:struct:proc::addrspace	access:public
proc::p_cwd	/home/trinity/src/kern/include/proc.h	/^	struct vnode *p_cwd;		\/* current working directory *\/$/;"	m	struct:proc	typeref:struct:proc::vnode	access:public
proc::p_lock	/home/trinity/src/kern/include/proc.h	/^	struct spinlock p_lock;		\/* Lock for this structure *\/$/;"	m	struct:proc	typeref:struct:proc::spinlock	access:public
proc::p_name	/home/trinity/src/kern/include/proc.h	/^	char *p_name;			\/* Name of this process *\/$/;"	m	struct:proc	access:public
proc::p_numthreads	/home/trinity/src/kern/include/proc.h	/^	unsigned p_numthreads;		\/* Number of threads in this process *\/$/;"	m	struct:proc	access:public
proc_addthread	/home/trinity/src/kern/include/proc.h	/^int proc_addthread(struct proc *proc, struct thread *t);$/;"	p	signature:(struct proc *proc, struct thread *t)
proc_addthread	/home/trinity/src/kern/proc/proc.c	/^proc_addthread(struct proc *proc, struct thread *t)$/;"	f	signature:(struct proc *proc, struct thread *t)
proc_bootstrap	/home/trinity/src/kern/include/proc.h	/^void proc_bootstrap(void);$/;"	p	signature:(void)
proc_bootstrap	/home/trinity/src/kern/proc/proc.c	/^proc_bootstrap(void)$/;"	f	signature:(void)
proc_create	/home/trinity/src/kern/proc/proc.c	/^proc_create(const char *name)$/;"	f	file:	signature:(const char *name)
proc_create_runprogram	/home/trinity/src/kern/include/proc.h	/^struct proc *proc_create_runprogram(const char *name);$/;"	p	signature:(const char *name)
proc_create_runprogram	/home/trinity/src/kern/proc/proc.c	/^proc_create_runprogram(const char *name)$/;"	f	signature:(const char *name)
proc_destroy	/home/trinity/src/kern/include/proc.h	/^void proc_destroy(struct proc *proc);$/;"	p	signature:(struct proc *proc)
proc_destroy	/home/trinity/src/kern/proc/proc.c	/^proc_destroy(struct proc *proc)$/;"	f	signature:(struct proc *proc)
proc_getas	/home/trinity/src/kern/include/proc.h	/^struct addrspace *proc_getas(void);$/;"	p	signature:(void)
proc_getas	/home/trinity/src/kern/proc/proc.c	/^proc_getas(void)$/;"	f	signature:(void)
proc_remthread	/home/trinity/src/kern/include/proc.h	/^void proc_remthread(struct thread *t);$/;"	p	signature:(struct thread *t)
proc_remthread	/home/trinity/src/kern/proc/proc.c	/^proc_remthread(struct thread *t)$/;"	f	signature:(struct thread *t)
proc_setas	/home/trinity/src/kern/include/proc.h	/^struct addrspace *proc_setas(struct addrspace *);$/;"	p	signature:(struct addrspace *)
proc_setas	/home/trinity/src/kern/proc/proc.c	/^proc_setas(struct addrspace *newas)$/;"	f	signature:(struct addrspace *newas)
pseudoconfig	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^pseudoconfig(void)$/;"	f	signature:(void)
pseudoconfig	/home/trinity/src/kern/compile/DUMBVM/autoconf.h	/^void pseudoconfig(void);$/;"	p	signature:(void)
ptrdiff_t	/home/trinity/src/kern/include/types.h	/^typedef __ptrdiff_t ptrdiff_t;$/;"	t
putch	/home/trinity/src/kern/dev/generic/console.c	/^putch(int ch)$/;"	f	signature:(int ch)
putch	/home/trinity/src/kern/include/lib.h	/^void putch(int ch);$/;"	p	signature:(int ch)
putch_delayed	/home/trinity/src/kern/dev/generic/console.c	/^putch_delayed(int ch)$/;"	f	file:	signature:(int ch)
putch_intr	/home/trinity/src/kern/dev/generic/console.c	/^putch_intr(struct con_softc *cs, int ch)$/;"	f	file:	signature:(struct con_softc *cs, int ch)
putch_polled	/home/trinity/src/kern/dev/generic/console.c	/^putch_polled(struct con_softc *cs, int ch)$/;"	f	file:	signature:(struct con_softc *cs, int ch)
quadrant_array	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int quadrant_array[NUM_QUADRANTS];$/;"	v	file:
quietthread	/home/trinity/src/kern/test/threadtest.c	/^quietthread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
ra	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	71;"	d
ram_bootstrap	/home/trinity/src/kern/arch/mips/include/vm.h	/^void ram_bootstrap(void);$/;"	p	signature:(void)
ram_bootstrap	/home/trinity/src/kern/arch/mips/vm/ram.c	/^ram_bootstrap(void)$/;"	f	signature:(void)
ram_getfirstfree	/home/trinity/src/kern/arch/mips/include/vm.h	/^paddr_t ram_getfirstfree(void);$/;"	p	signature:(void)
ram_getfirstfree	/home/trinity/src/kern/arch/mips/vm/ram.c	/^ram_getfirstfree(void)$/;"	f	signature:(void)
ram_getsize	/home/trinity/src/kern/arch/mips/include/vm.h	/^paddr_t ram_getsize(void);$/;"	p	signature:(void)
ram_getsize	/home/trinity/src/kern/arch/mips/vm/ram.c	/^ram_getsize(void)$/;"	f	signature:(void)
ram_stealmem	/home/trinity/src/kern/arch/mips/include/vm.h	/^paddr_t ram_stealmem(unsigned long npages);$/;"	p	signature:(unsigned long npages)
ram_stealmem	/home/trinity/src/kern/arch/mips/vm/ram.c	/^ram_stealmem(unsigned long npages)$/;"	f	signature:(unsigned long npages)
randeachopen	/home/trinity/src/kern/dev/generic/random.c	/^randeachopen(struct device *dev, int openflags)$/;"	f	file:	signature:(struct device *dev, int openflags)
randio	/home/trinity/src/kern/dev/generic/random.c	/^randio(struct device *dev, struct uio *uio)$/;"	f	file:	signature:(struct device *dev, struct uio *uio)
randioctl	/home/trinity/src/kern/dev/generic/random.c	/^randioctl(struct device *dev, int op, userptr_t data)$/;"	f	file:	signature:(struct device *dev, int op, userptr_t data)
randmax	/home/trinity/src/kern/dev/generic/random.c	/^randmax(void)$/;"	f	signature:(void)
randmax	/home/trinity/src/kern/include/lib.h	/^uint32_t randmax(void);$/;"	p	signature:(void)
random	/home/trinity/src/kern/dev/generic/random.c	/^random(void)$/;"	f	signature:(void)
random	/home/trinity/src/kern/include/lib.h	/^uint32_t random(void);$/;"	p	signature:(void)
random_devops	/home/trinity/src/kern/dev/generic/random.c	/^static const struct device_ops random_devops = {$/;"	v	typeref:struct:device_ops	file:
random_softc	/home/trinity/src/kern/dev/generic/random.h	/^struct random_softc {$/;"	s
random_softc::rs_dev	/home/trinity/src/kern/dev/generic/random.h	/^	struct device rs_dev;$/;"	m	struct:random_softc	typeref:struct:random_softc::device	access:public
random_softc::rs_devdata	/home/trinity/src/kern/dev/generic/random.h	/^	void *rs_devdata;$/;"	m	struct:random_softc	access:public
random_softc::rs_randmax	/home/trinity/src/kern/dev/generic/random.h	/^	uint32_t (*rs_randmax)(void *devdata);$/;"	m	struct:random_softc	access:public
random_softc::rs_random	/home/trinity/src/kern/dev/generic/random.h	/^	uint32_t (*rs_random)(void *devdata);$/;"	m	struct:random_softc	access:public
random_softc::rs_read	/home/trinity/src/kern/dev/generic/random.h	/^	int (*rs_read)(void *devdata, struct uio *uio);$/;"	m	struct:random_softc	access:public
random_spinner	/home/trinity/src/kern/include/test.h	/^void random_spinner(uint32_t);$/;"	p	signature:(uint32_t)
random_spinner	/home/trinity/src/kern/test/lib.c	/^random_spinner(uint32_t max_spin_count)$/;"	f	signature:(uint32_t max_spin_count)
random_yielder	/home/trinity/src/kern/include/test.h	/^void random_yielder(uint32_t);$/;"	p	signature:(uint32_t)
random_yielder	/home/trinity/src/kern/test/lib.c	/^random_yielder(uint32_t max_yield_count)$/;"	f	signature:(uint32_t max_yield_count)
read_cfg_register	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^read_cfg_register(struct lamebus_softc *lb, int slot, uint32_t offset)$/;"	f	file:	signature:(struct lamebus_softc *lb, int slot, uint32_t offset)
read_ctl_register	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^read_ctl_register(struct lamebus_softc *lb, uint32_t offset)$/;"	f	file:	signature:(struct lamebus_softc *lb, uint32_t offset)
readstress	/home/trinity/src/kern/include/test.h	/^int readstress(int, char **);$/;"	p	signature:(int, char **)
readstress	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(readstress);$/;"	v
readstress_thread	/home/trinity/src/kern/test/fstest.c	/^readstress_thread(void *fs, unsigned long num)$/;"	f	file:	signature:(void *fs, unsigned long num)
refs	/home/trinity/src/kern/vm/kmalloc.c	/^	struct pageref refs[NPAGEREFS_PER_PAGE];$/;"	m	struct:pagerefpage	typeref:struct:pagerefpage::pageref	file:	access:public
remove_lists	/home/trinity/src/kern/vm/kmalloc.c	/^remove_lists(struct pageref *pr, int blktype)$/;"	f	file:	signature:(struct pageref *pr, int blktype)
reserved	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t reserved[118];			\/* unused, set to 0 *\/$/;"	m	struct:sfs_superblock	access:public
rlim_cur	/home/trinity/src/kern/include/kern/resource.h	/^	__rlim_t rlim_cur;	\/* soft limit *\/$/;"	m	struct:rlimit	access:public
rlim_max	/home/trinity/src/kern/include/kern/resource.h	/^	__rlim_t rlim_max;	\/* hard limit *\/$/;"	m	struct:rlimit	access:public
rlim_t	/home/trinity/src/kern/include/types.h	/^typedef __rlim_t rlim_t;$/;"	t
rlimit	/home/trinity/src/kern/include/kern/resource.h	/^struct rlimit {$/;"	s
rlimit::rlim_cur	/home/trinity/src/kern/include/kern/resource.h	/^	__rlim_t rlim_cur;	\/* soft limit *\/$/;"	m	struct:rlimit	access:public
rlimit::rlim_max	/home/trinity/src/kern/include/kern/resource.h	/^	__rlim_t rlim_max;	\/* hard limit *\/$/;"	m	struct:rlimit	access:public
rotate	/home/trinity/src/kern/test/fstest.c	/^rotate(char *str, int amt)$/;"	f	file:	signature:(char *str, int amt)
rs_dev	/home/trinity/src/kern/dev/generic/random.h	/^	struct device rs_dev;$/;"	m	struct:random_softc	typeref:struct:random_softc::device	access:public
rs_devdata	/home/trinity/src/kern/dev/generic/random.h	/^	void *rs_devdata;$/;"	m	struct:random_softc	access:public
rs_randmax	/home/trinity/src/kern/dev/generic/random.h	/^	uint32_t (*rs_randmax)(void *devdata);$/;"	m	struct:random_softc	access:public
rs_random	/home/trinity/src/kern/dev/generic/random.h	/^	uint32_t (*rs_random)(void *devdata);$/;"	m	struct:random_softc	access:public
rs_read	/home/trinity/src/kern/dev/generic/random.h	/^	int (*rs_read)(void *devdata, struct uio *uio);$/;"	m	struct:random_softc	access:public
rtc_devdata	/home/trinity/src/kern/dev/generic/rtclock.h	/^	void *rtc_devdata;$/;"	m	struct:rtclock_softc	access:public
rtc_gettime	/home/trinity/src/kern/dev/generic/rtclock.h	/^	void (*rtc_gettime)(void *devdata, struct timespec *);$/;"	m	struct:rtclock_softc	access:public
rtclock_softc	/home/trinity/src/kern/dev/generic/rtclock.h	/^struct rtclock_softc {$/;"	s
rtclock_softc::rtc_devdata	/home/trinity/src/kern/dev/generic/rtclock.h	/^	void *rtc_devdata;$/;"	m	struct:rtclock_softc	access:public
rtclock_softc::rtc_gettime	/home/trinity/src/kern/dev/generic/rtclock.h	/^	void (*rtc_gettime)(void *devdata, struct timespec *);$/;"	m	struct:rtclock_softc	access:public
ru_idrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_idrss;		\/* data memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
ru_inblock	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_inblock;		\/* file blocks read (count) *\/$/;"	m	struct:rusage	access:public
ru_isrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_isrss;		\/* stack memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
ru_ixrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_ixrss;		\/* text memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
ru_majflt	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_majflt;		\/* major VM faults (count) *\/$/;"	m	struct:rusage	access:public
ru_maxrss	/home/trinity/src/kern/include/kern/resource.h	/^	__size_t ru_maxrss;		\/* maximum RSS during lifespan (kb) *\/$/;"	m	struct:rusage	access:public
ru_minflt	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_minflt;		\/* minor VM faults (count) *\/$/;"	m	struct:rusage	access:public
ru_msgrcv	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_msgrcv;		\/* socket\/pipe packets rcv'd (count) *\/$/;"	m	struct:rusage	access:public
ru_msgsnd	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_msgsnd;		\/* socket\/pipe packets sent (count) *\/$/;"	m	struct:rusage	access:public
ru_nivcsw	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nivcsw;		\/* involuntary ditto (count) *\/$/;"	m	struct:rusage	access:public
ru_nsignals	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nsignals;	\/* signals delivered (count) *\/$/;"	m	struct:rusage	access:public
ru_nswap	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nswap;		\/* whole-process swaps (count) *\/$/;"	m	struct:rusage	access:public
ru_nvcsw	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nvcsw;		\/* voluntary context switches (count)*\/$/;"	m	struct:rusage	access:public
ru_oublock	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_oublock;		\/* file blocks written (count) *\/$/;"	m	struct:rusage	access:public
ru_stime	/home/trinity/src/kern/include/kern/resource.h	/^	struct timeval ru_stime;$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
ru_utime	/home/trinity/src/kern/include/kern/resource.h	/^	struct timeval ru_utime;$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
runprogram	/home/trinity/src/kern/include/test.h	/^int runprogram(char *progname);$/;"	p	signature:(char *progname)
runprogram	/home/trinity/src/kern/syscall/runprogram.c	/^runprogram(char *progname)$/;"	f	signature:(char *progname)
runtest3	/home/trinity/src/kern/test/tt3.c	/^runtest3(int nsleeps, int ncomputes)$/;"	f	file:	signature:(int nsleeps, int ncomputes)
runthreads	/home/trinity/src/kern/test/threadtest.c	/^runthreads(int doloud)$/;"	f	file:	signature:(int doloud)
rusage	/home/trinity/src/kern/include/kern/resource.h	/^struct rusage {$/;"	s
rusage::ru_idrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_idrss;		\/* data memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
rusage::ru_inblock	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_inblock;		\/* file blocks read (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_isrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_isrss;		\/* stack memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
rusage::ru_ixrss	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_ixrss;		\/* text memory usage (kb-ticks) *\/$/;"	m	struct:rusage	access:public
rusage::ru_majflt	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_majflt;		\/* major VM faults (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_maxrss	/home/trinity/src/kern/include/kern/resource.h	/^	__size_t ru_maxrss;		\/* maximum RSS during lifespan (kb) *\/$/;"	m	struct:rusage	access:public
rusage::ru_minflt	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_minflt;		\/* minor VM faults (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_msgrcv	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_msgrcv;		\/* socket\/pipe packets rcv'd (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_msgsnd	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_msgsnd;		\/* socket\/pipe packets sent (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_nivcsw	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nivcsw;		\/* involuntary ditto (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_nsignals	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nsignals;	\/* signals delivered (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_nswap	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nswap;		\/* whole-process swaps (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_nvcsw	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_nvcsw;		\/* voluntary context switches (count)*\/$/;"	m	struct:rusage	access:public
rusage::ru_oublock	/home/trinity/src/kern/include/kern/resource.h	/^	__counter_t ru_oublock;		\/* file blocks written (count) *\/$/;"	m	struct:rusage	access:public
rusage::ru_stime	/home/trinity/src/kern/include/kern/resource.h	/^	struct timeval ru_stime;$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
rusage::ru_utime	/home/trinity/src/kern/include/kern/resource.h	/^	struct timeval ru_utime;$/;"	m	struct:rusage	typeref:struct:rusage::timeval	access:public
rwlock	/home/trinity/src/kern/include/synch.h	/^struct rwlock {$/;"	s
rwlock::rwlock_name	/home/trinity/src/kern/include/synch.h	/^        char *rwlock_name;$/;"	m	struct:rwlock	access:public
rwlock_acquire_read	/home/trinity/src/kern/include/synch.h	/^void rwlock_acquire_read(struct rwlock *);$/;"	p	signature:(struct rwlock *)
rwlock_acquire_write	/home/trinity/src/kern/include/synch.h	/^void rwlock_acquire_write(struct rwlock *);$/;"	p	signature:(struct rwlock *)
rwlock_create	/home/trinity/src/kern/include/synch.h	/^struct rwlock * rwlock_create(const char *);$/;"	p	signature:(const char *)
rwlock_destroy	/home/trinity/src/kern/include/synch.h	/^void rwlock_destroy(struct rwlock *);$/;"	p	signature:(struct rwlock *)
rwlock_name	/home/trinity/src/kern/include/synch.h	/^        char *rwlock_name;$/;"	m	struct:rwlock	access:public
rwlock_release_read	/home/trinity/src/kern/include/synch.h	/^void rwlock_release_read(struct rwlock *);$/;"	p	signature:(struct rwlock *)
rwlock_release_write	/home/trinity/src/kern/include/synch.h	/^void rwlock_release_write(struct rwlock *);$/;"	p	signature:(struct rwlock *)
rwtest	/home/trinity/src/kern/include/test.h	/^int rwtest(int, char **);$/;"	p	signature:(int, char **)
rwtest	/home/trinity/src/kern/test/rwtest.c	/^int rwtest(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
rwtest2	/home/trinity/src/kern/include/test.h	/^int rwtest2(int, char **);$/;"	p	signature:(int, char **)
rwtest2	/home/trinity/src/kern/test/rwtest.c	/^int rwtest2(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
rwtest3	/home/trinity/src/kern/include/test.h	/^int rwtest3(int, char **);$/;"	p	signature:(int, char **)
rwtest3	/home/trinity/src/kern/test/rwtest.c	/^int rwtest3(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
rwtest4	/home/trinity/src/kern/include/test.h	/^int rwtest4(int, char **);$/;"	p	signature:(int, char **)
rwtest4	/home/trinity/src/kern/test/rwtest.c	/^int rwtest4(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
rwtest5	/home/trinity/src/kern/include/test.h	/^int rwtest5(int, char **);$/;"	p	signature:(int, char **)
rwtest5	/home/trinity/src/kern/test/rwtest.c	/^int rwtest5(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
s0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	56;"	d
s1	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	57;"	d
s2	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	58;"	d
s3	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	59;"	d
s4	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	60;"	d
s5	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	61;"	d
s6	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	62;"	d
s7	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	63;"	d
s8	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	70;"	d
sa_family	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 sa_family;$/;"	m	struct:sockaddr	access:public
sa_family_t	/home/trinity/src/kern/include/types.h	/^typedef __sa_family_t sa_family_t;$/;"	t
sa_flags	/home/trinity/src/kern/include/kern/signal.h	/^	unsigned sa_flags;$/;"	m	struct:sigaction	access:public
sa_handler	/home/trinity/src/kern/include/kern/signal.h	/^	__sigfunc sa_handler;$/;"	m	struct:sigaction	access:public
sa_len	/home/trinity/src/kern/include/kern/socket.h	/^   __u8	sa_len;$/;"	m	struct:sockaddr	access:public
sa_mask	/home/trinity/src/kern/include/kern/signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	access:public
samestring	/home/trinity/src/kern/vfs/vfslist.c	/^samestring(const char *a, const char *b)$/;"	f	file:	signature:(const char *a, const char *b)
samestring3	/home/trinity/src/kern/vfs/vfslist.c	/^samestring3(const char *a, const char *b, const char *c, const char *d)$/;"	f	file:	signature:(const char *a, const char *b, const char *c, const char *d)
sb_magic	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sb_magic;		\/* Magic number; should be SFS_MAGIC *\/$/;"	m	struct:sfs_superblock	access:public
sb_nblocks	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sb_nblocks;			\/* Number of blocks in fs *\/$/;"	m	struct:sfs_superblock	access:public
sb_volname	/home/trinity/src/kern/include/kern/sfs.h	/^	char sb_volname[SFS_VOLNAME_SIZE];	\/* Name of this volume *\/$/;"	m	struct:sfs_superblock	access:public
schedule	/home/trinity/src/kern/include/thread.h	/^void schedule(void);$/;"	p	signature:(void)
schedule	/home/trinity/src/kern/thread/thread.c	/^schedule(void)$/;"	f	signature:(void)
secprintf	/home/trinity/src/kern/include/kern/test161.h	/^int secprintf(const char *secret, const char *msg, const char *name);$/;"	p	signature:(const char *secret, const char *msg, const char *name)
sem_count	/home/trinity/src/kern/include/synch.h	/^	volatile unsigned sem_count;$/;"	m	struct:semaphore	access:public
sem_create	/home/trinity/src/kern/include/synch.h	/^struct semaphore *sem_create(const char *name, unsigned initial_count);$/;"	p	signature:(const char *name, unsigned initial_count)
sem_create	/home/trinity/src/kern/thread/synch.c	/^sem_create(const char *name, unsigned initial_count)$/;"	f	signature:(const char *name, unsigned initial_count)
sem_destroy	/home/trinity/src/kern/include/synch.h	/^void sem_destroy(struct semaphore *);$/;"	p	signature:(struct semaphore *)
sem_destroy	/home/trinity/src/kern/thread/synch.c	/^sem_destroy(struct semaphore *sem)$/;"	f	signature:(struct semaphore *sem)
sem_lock	/home/trinity/src/kern/include/synch.h	/^	struct spinlock sem_lock;$/;"	m	struct:semaphore	typeref:struct:semaphore::spinlock	access:public
sem_name	/home/trinity/src/kern/include/synch.h	/^	char *sem_name;$/;"	m	struct:semaphore	access:public
sem_wchan	/home/trinity/src/kern/include/synch.h	/^	struct wchan *sem_wchan;$/;"	m	struct:semaphore	typeref:struct:semaphore::wchan	access:public
semaphore	/home/trinity/src/kern/include/synch.h	/^struct semaphore {$/;"	s
semaphore::sem_count	/home/trinity/src/kern/include/synch.h	/^	volatile unsigned sem_count;$/;"	m	struct:semaphore	access:public
semaphore::sem_lock	/home/trinity/src/kern/include/synch.h	/^	struct spinlock sem_lock;$/;"	m	struct:semaphore	typeref:struct:semaphore::spinlock	access:public
semaphore::sem_name	/home/trinity/src/kern/include/synch.h	/^	char *sem_name;$/;"	m	struct:semaphore	access:public
semaphore::sem_wchan	/home/trinity/src/kern/include/synch.h	/^	struct wchan *sem_wchan;$/;"	m	struct:semaphore	typeref:struct:semaphore::wchan	access:public
semd_name	/home/trinity/src/kern/fs/semfs/semfs.h	/^	char *semd_name;			\/* Name *\/$/;"	m	struct:semfs_direntry	access:public
semd_semnum	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned semd_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_direntry	access:public
semfs	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs {$/;"	s
semfs::semfs_absfs	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct fs semfs_absfs;			\/* Abstract fs object *\/$/;"	m	struct:semfs	typeref:struct:semfs::fs	access:public
semfs::semfs_dents	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs_direntryarray *semfs_dents; \/* The root directory *\/$/;"	m	struct:semfs	typeref:struct:semfs::semfs_direntryarray	access:public
semfs::semfs_dirlock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *semfs_dirlock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:semfs::lock	access:public
semfs::semfs_sems	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs_semarray *semfs_sems;	\/* Semaphores *\/$/;"	m	struct:semfs	typeref:struct:semfs::semfs_semarray	access:public
semfs::semfs_tablelock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *semfs_tablelock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:semfs::lock	access:public
semfs::semfs_vnodes	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct vnodearray *semfs_vnodes;	\/* Currently extant vnodes *\/$/;"	m	struct:semfs	typeref:struct:semfs::vnodearray	access:public
semfs_absfs	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct fs semfs_absfs;			\/* Abstract fs object *\/$/;"	m	struct:semfs	typeref:struct:semfs::fs	access:public
semfs_bootstrap	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_bootstrap(void)$/;"	f	signature:(void)
semfs_bootstrap	/home/trinity/src/kern/include/fs.h	/^void semfs_bootstrap(void);$/;"	p	signature:(void)
semfs_creat	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_creat(struct vnode *dirvn, const char *name, bool excl, mode_t mode,$/;"	f	file:	signature:(struct vnode *dirvn, const char *name, bool excl, mode_t mode, struct vnode **resultvn)
semfs_create	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_create(void)$/;"	f	file:	signature:(void)
semfs_dents	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs_direntryarray *semfs_dents; \/* The root directory *\/$/;"	m	struct:semfs	typeref:struct:semfs::semfs_direntryarray	access:public
semfs_destroy	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_destroy(struct semfs *semfs)$/;"	f	file:	signature:(struct semfs *semfs)
semfs_direntry	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs_direntry {$/;"	s
semfs_direntry::semd_name	/home/trinity/src/kern/fs/semfs/semfs.h	/^	char *semd_name;			\/* Name *\/$/;"	m	struct:semfs_direntry	access:public
semfs_direntry::semd_semnum	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned semd_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_direntry	access:public
semfs_direntry_create	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs_direntry *semfs_direntry_create(const char *name, unsigned semno);$/;"	p	signature:(const char *name, unsigned semno)
semfs_direntry_create	/home/trinity/src/kern/fs/semfs/semfs_obj.c	/^semfs_direntry_create(const char *name, unsigned semnum)$/;"	f	signature:(const char *name, unsigned semnum)
semfs_direntry_destroy	/home/trinity/src/kern/fs/semfs/semfs.h	/^void semfs_direntry_destroy(struct semfs_direntry *);$/;"	p	signature:(struct semfs_direntry *)
semfs_direntry_destroy	/home/trinity/src/kern/fs/semfs/semfs_obj.c	/^semfs_direntry_destroy(struct semfs_direntry *dent)$/;"	f	signature:(struct semfs_direntry *dent)
semfs_dirlock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *semfs_dirlock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:semfs::lock	access:public
semfs_dirops	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^static const struct vnode_ops semfs_dirops = {$/;"	v	typeref:struct:vnode_ops	file:
semfs_dirstat	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_dirstat(struct vnode *vn, struct stat *buf)$/;"	f	file:	signature:(struct vnode *vn, struct stat *buf)
semfs_eachopen	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_eachopen(struct vnode *vn, int openflags)$/;"	f	file:	signature:(struct vnode *vn, int openflags)
semfs_fsops	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^static const struct fs_ops semfs_fsops = {$/;"	v	typeref:struct:fs_ops	file:
semfs_fsync	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_fsync(struct vnode *vn)$/;"	f	file:	signature:(struct vnode *vn)
semfs_getdirentry	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_getdirentry(struct vnode *dirvn, struct uio *uio)$/;"	f	file:	signature:(struct vnode *dirvn, struct uio *uio)
semfs_getroot	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_getroot(struct fs *fs, struct vnode **ret)$/;"	f	file:	signature:(struct fs *fs, struct vnode **ret)
semfs_getsem	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_getsem(struct semfs_vnode *semv)$/;"	f	file:	signature:(struct semfs_vnode *semv)
semfs_getsembynum	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_getsembynum(struct semfs *semfs, unsigned semnum)$/;"	f	file:	signature:(struct semfs *semfs, unsigned semnum)
semfs_gettype	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_gettype(struct vnode *vn, mode_t *ret)$/;"	f	file:	signature:(struct vnode *vn, mode_t *ret)
semfs_getvnode	/home/trinity/src/kern/fs/semfs/semfs.h	/^int semfs_getvnode(struct semfs *, unsigned, struct vnode **ret);$/;"	p	signature:(struct semfs *, unsigned, struct vnode **ret)
semfs_getvnode	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_getvnode(struct semfs *semfs, unsigned semnum, struct vnode **ret)$/;"	f	signature:(struct semfs *semfs, unsigned semnum, struct vnode **ret)
semfs_getvolname	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_getvolname(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
semfs_ioctl	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_ioctl(struct vnode *vn, int op, userptr_t data)$/;"	f	file:	signature:(struct vnode *vn, int op, userptr_t data)
semfs_isseekable	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_isseekable(struct vnode *vn)$/;"	f	file:	signature:(struct vnode *vn)
semfs_lookparent	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_lookparent(struct vnode *dirvn, char *path,$/;"	f	file:	signature:(struct vnode *dirvn, char *path, struct vnode **resultdirvn, char *namebuf, size_t bufmax)
semfs_lookup	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_lookup(struct vnode *dirvn, char *path, struct vnode **resultvn)$/;"	f	file:	signature:(struct vnode *dirvn, char *path, struct vnode **resultvn)
semfs_namefile	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_namefile(struct vnode *vn, struct uio *uio)$/;"	f	file:	signature:(struct vnode *vn, struct uio *uio)
semfs_read	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_read(struct vnode *vn, struct uio *uio)$/;"	f	file:	signature:(struct vnode *vn, struct uio *uio)
semfs_reclaim	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_reclaim(struct vnode *vn)$/;"	f	file:	signature:(struct vnode *vn)
semfs_remove	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_remove(struct vnode *dirvn, const char *name)$/;"	f	file:	signature:(struct vnode *dirvn, const char *name)
semfs_sem	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs_sem {$/;"	s
semfs_sem::sems_count	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned sems_count;			\/* Semaphore count *\/$/;"	m	struct:semfs_sem	access:public
semfs_sem::sems_cv	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct cv *sems_cv;			\/* CV to wait *\/$/;"	m	struct:semfs_sem	typeref:struct:semfs_sem::cv	access:public
semfs_sem::sems_hasvnode	/home/trinity/src/kern/fs/semfs/semfs.h	/^	bool sems_hasvnode;			\/* The vnode exists *\/$/;"	m	struct:semfs_sem	access:public
semfs_sem::sems_linked	/home/trinity/src/kern/fs/semfs/semfs.h	/^	bool sems_linked;			\/* In the directory *\/$/;"	m	struct:semfs_sem	access:public
semfs_sem::sems_lock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *sems_lock;			\/* Lock to protect count *\/$/;"	m	struct:semfs_sem	typeref:struct:semfs_sem::lock	access:public
semfs_sem_create	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs_sem *semfs_sem_create(const char *name);$/;"	p	signature:(const char *name)
semfs_sem_create	/home/trinity/src/kern/fs/semfs/semfs_obj.c	/^semfs_sem_create(const char *name)$/;"	f	signature:(const char *name)
semfs_sem_destroy	/home/trinity/src/kern/fs/semfs/semfs.h	/^void semfs_sem_destroy(struct semfs_sem *);$/;"	p	signature:(struct semfs_sem *)
semfs_sem_destroy	/home/trinity/src/kern/fs/semfs/semfs_obj.c	/^semfs_sem_destroy(struct semfs_sem *sem)$/;"	f	signature:(struct semfs_sem *sem)
semfs_sem_insert	/home/trinity/src/kern/fs/semfs/semfs.h	/^int semfs_sem_insert(struct semfs *, struct semfs_sem *, unsigned *);$/;"	p	signature:(struct semfs *, struct semfs_sem *, unsigned *)
semfs_sem_insert	/home/trinity/src/kern/fs/semfs/semfs_obj.c	/^semfs_sem_insert(struct semfs *semfs, struct semfs_sem *sem, unsigned *ret)$/;"	f	signature:(struct semfs *semfs, struct semfs_sem *sem, unsigned *ret)
semfs_semops	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^static const struct vnode_ops semfs_semops = {$/;"	v	typeref:struct:vnode_ops	file:
semfs_sems	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs_semarray *semfs_sems;	\/* Semaphores *\/$/;"	m	struct:semfs	typeref:struct:semfs::semfs_semarray	access:public
semfs_semstat	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_semstat(struct vnode *vn, struct stat *buf)$/;"	f	file:	signature:(struct vnode *vn, struct stat *buf)
semfs_sync	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_sync(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
semfs_tablelock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *semfs_tablelock;		\/* Lock for following *\/$/;"	m	struct:semfs	typeref:struct:semfs::lock	access:public
semfs_truncate	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_truncate(struct vnode *vn, off_t len)$/;"	f	file:	signature:(struct vnode *vn, off_t len)
semfs_unmount	/home/trinity/src/kern/fs/semfs/semfs_fsops.c	/^semfs_unmount(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
semfs_vnode	/home/trinity/src/kern/fs/semfs/semfs.h	/^struct semfs_vnode {$/;"	s
semfs_vnode::semv_absvn	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct vnode semv_absvn;		\/* Abstract vnode *\/$/;"	m	struct:semfs_vnode	typeref:struct:semfs_vnode::vnode	access:public
semfs_vnode::semv_semfs	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs *semv_semfs;		\/* Back-pointer to fs *\/$/;"	m	struct:semfs_vnode	typeref:struct:semfs_vnode::semfs	access:public
semfs_vnode::semv_semnum	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned semv_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_vnode	access:public
semfs_vnode_create	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_vnode_create(struct semfs *semfs, unsigned semnum)$/;"	f	file:	signature:(struct semfs *semfs, unsigned semnum)
semfs_vnode_destroy	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_vnode_destroy(struct semfs_vnode *semv)$/;"	f	file:	signature:(struct semfs_vnode *semv)
semfs_vnodes	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct vnodearray *semfs_vnodes;	\/* Currently extant vnodes *\/$/;"	m	struct:semfs	typeref:struct:semfs::vnodearray	access:public
semfs_wakeup	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_wakeup(struct semfs_sem *sem, unsigned newcount)$/;"	f	file:	signature:(struct semfs_sem *sem, unsigned newcount)
semfs_write	/home/trinity/src/kern/fs/semfs/semfs_vnops.c	/^semfs_write(struct vnode *vn, struct uio *uio)$/;"	f	file:	signature:(struct vnode *vn, struct uio *uio)
sems_count	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned sems_count;			\/* Semaphore count *\/$/;"	m	struct:semfs_sem	access:public
sems_cv	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct cv *sems_cv;			\/* CV to wait *\/$/;"	m	struct:semfs_sem	typeref:struct:semfs_sem::cv	access:public
sems_hasvnode	/home/trinity/src/kern/fs/semfs/semfs.h	/^	bool sems_hasvnode;			\/* The vnode exists *\/$/;"	m	struct:semfs_sem	access:public
sems_linked	/home/trinity/src/kern/fs/semfs/semfs.h	/^	bool sems_linked;			\/* In the directory *\/$/;"	m	struct:semfs_sem	access:public
sems_lock	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct lock *sems_lock;			\/* Lock to protect count *\/$/;"	m	struct:semfs_sem	typeref:struct:semfs_sem::lock	access:public
semtest	/home/trinity/src/kern/include/test.h	/^int semtest(int, char **);$/;"	p	signature:(int, char **)
semtest	/home/trinity/src/kern/test/synchtest.c	/^semtest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semtest_current	/home/trinity/src/kern/test/synchtest.c	/^static unsigned long semtest_current;$/;"	v	file:
semtestthread	/home/trinity/src/kern/test/synchtest.c	/^semtestthread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
semu1	/home/trinity/src/kern/include/test.h	/^int semu1(int, char **);$/;"	p	signature:(int, char **)
semu1	/home/trinity/src/kern/test/semunit.c	/^semu1(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu10	/home/trinity/src/kern/include/test.h	/^int semu10(int, char **);$/;"	p	signature:(int, char **)
semu10	/home/trinity/src/kern/test/semunit.c	/^semu10(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu11	/home/trinity/src/kern/include/test.h	/^int semu11(int, char **);$/;"	p	signature:(int, char **)
semu11	/home/trinity/src/kern/test/semunit.c	/^semu11(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu12	/home/trinity/src/kern/include/test.h	/^int semu12(int, char **);$/;"	p	signature:(int, char **)
semu12	/home/trinity/src/kern/test/semunit.c	/^semu12(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu1213	/home/trinity/src/kern/test/semunit.c	/^semu1213(bool interrupthandler)$/;"	f	file:	signature:(bool interrupthandler)
semu13	/home/trinity/src/kern/include/test.h	/^int semu13(int, char **);$/;"	p	signature:(int, char **)
semu13	/home/trinity/src/kern/test/semunit.c	/^semu13(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu14	/home/trinity/src/kern/include/test.h	/^int semu14(int, char **);$/;"	p	signature:(int, char **)
semu14	/home/trinity/src/kern/test/semunit.c	/^semu14(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu15	/home/trinity/src/kern/include/test.h	/^int semu15(int, char **);$/;"	p	signature:(int, char **)
semu15	/home/trinity/src/kern/test/semunit.c	/^semu15(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu16	/home/trinity/src/kern/include/test.h	/^int semu16(int, char **);$/;"	p	signature:(int, char **)
semu16	/home/trinity/src/kern/test/semunit.c	/^semu16(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu17	/home/trinity/src/kern/include/test.h	/^int semu17(int, char **);$/;"	p	signature:(int, char **)
semu17	/home/trinity/src/kern/test/semunit.c	/^semu17(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu17_sub	/home/trinity/src/kern/test/semunit.c	/^semu17_sub(void *semv, unsigned long junk)$/;"	f	file:	signature:(void *semv, unsigned long junk)
semu17_thread	/home/trinity/src/kern/test/semunit.c	/^static struct thread *semu17_thread;$/;"	v	typeref:struct:thread	file:
semu18	/home/trinity/src/kern/include/test.h	/^int semu18(int, char **);$/;"	p	signature:(int, char **)
semu18	/home/trinity/src/kern/test/semunit.c	/^semu18(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu19	/home/trinity/src/kern/include/test.h	/^int semu19(int, char **);$/;"	p	signature:(int, char **)
semu19	/home/trinity/src/kern/test/semunit.c	/^semu19(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu19_sub	/home/trinity/src/kern/test/semunit.c	/^semu19_sub(void *semv,  unsigned long junk)$/;"	f	file:	signature:(void *semv, unsigned long junk)
semu2	/home/trinity/src/kern/include/test.h	/^int semu2(int, char **);$/;"	p	signature:(int, char **)
semu2	/home/trinity/src/kern/test/semunit.c	/^semu2(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu20	/home/trinity/src/kern/include/test.h	/^int semu20(int, char **);$/;"	p	signature:(int, char **)
semu20	/home/trinity/src/kern/test/semunit.c	/^semu20(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu21	/home/trinity/src/kern/include/test.h	/^int semu21(int, char **);$/;"	p	signature:(int, char **)
semu21	/home/trinity/src/kern/test/semunit.c	/^semu21(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu22	/home/trinity/src/kern/include/test.h	/^int semu22(int, char **);$/;"	p	signature:(int, char **)
semu22	/home/trinity/src/kern/test/semunit.c	/^semu22(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu3	/home/trinity/src/kern/include/test.h	/^int semu3(int, char **);$/;"	p	signature:(int, char **)
semu3	/home/trinity/src/kern/test/semunit.c	/^semu3(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu4	/home/trinity/src/kern/include/test.h	/^int semu4(int, char **);$/;"	p	signature:(int, char **)
semu4	/home/trinity/src/kern/test/semunit.c	/^semu4(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu5	/home/trinity/src/kern/include/test.h	/^int semu5(int, char **);$/;"	p	signature:(int, char **)
semu5	/home/trinity/src/kern/test/semunit.c	/^semu5(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu6	/home/trinity/src/kern/include/test.h	/^int semu6(int, char **);$/;"	p	signature:(int, char **)
semu6	/home/trinity/src/kern/test/semunit.c	/^semu6(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu7	/home/trinity/src/kern/include/test.h	/^int semu7(int, char **);$/;"	p	signature:(int, char **)
semu7	/home/trinity/src/kern/test/semunit.c	/^semu7(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu8	/home/trinity/src/kern/include/test.h	/^int semu8(int, char **);$/;"	p	signature:(int, char **)
semu8	/home/trinity/src/kern/test/semunit.c	/^semu8(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semu9	/home/trinity/src/kern/include/test.h	/^int semu9(int, char **);$/;"	p	signature:(int, char **)
semu9	/home/trinity/src/kern/test/semunit.c	/^semu9(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
semv_absvn	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct vnode semv_absvn;		\/* Abstract vnode *\/$/;"	m	struct:semfs_vnode	typeref:struct:semfs_vnode::vnode	access:public
semv_semfs	/home/trinity/src/kern/fs/semfs/semfs.h	/^	struct semfs *semv_semfs;		\/* Back-pointer to fs *\/$/;"	m	struct:semfs_vnode	typeref:struct:semfs_vnode::semfs	access:public
semv_semnum	/home/trinity/src/kern/fs/semfs/semfs.h	/^	unsigned semv_semnum;			\/* Which semaphore *\/$/;"	m	struct:semfs_vnode	access:public
setjmp	/home/trinity/src/kern/include/setjmp.h	/^int setjmp(jmp_buf jb);$/;"	p	signature:(jmp_buf jb)
setup	/home/trinity/src/kern/test/tt3.c	/^setup(void)$/;"	f	file:	signature:(void)
sf_gp	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_gp;$/;"	m	struct:switchframe	access:public
sf_ra	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_ra;$/;"	m	struct:switchframe	access:public
sf_s0	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s0;$/;"	m	struct:switchframe	access:public
sf_s1	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s1;$/;"	m	struct:switchframe	access:public
sf_s2	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s2;$/;"	m	struct:switchframe	access:public
sf_s3	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s3;$/;"	m	struct:switchframe	access:public
sf_s4	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s4;$/;"	m	struct:switchframe	access:public
sf_s5	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s5;$/;"	m	struct:switchframe	access:public
sf_s6	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s6;$/;"	m	struct:switchframe	access:public
sf_s8	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s8;$/;"	m	struct:switchframe	access:public
sfd_ino	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfd_ino;			\/* Inode number *\/$/;"	m	struct:sfs_direntry	access:public
sfd_name	/home/trinity/src/kern/include/kern/sfs.h	/^	char sfd_name[SFS_NAMELEN];		\/* Filename *\/$/;"	m	struct:sfs_direntry	access:public
sfi_direct	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_direct[SFS_NDIRECT];	\/* Direct blocks *\/$/;"	m	struct:sfs_dinode	access:public
sfi_indirect	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_indirect;			\/* Indirect block *\/$/;"	m	struct:sfs_dinode	access:public
sfi_linkcount	/home/trinity/src/kern/include/kern/sfs.h	/^	uint16_t sfi_linkcount;			\/* # hard links to this file *\/$/;"	m	struct:sfs_dinode	access:public
sfi_size	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_size;			\/* Size of this file (bytes) *\/$/;"	m	struct:sfs_dinode	access:public
sfi_type	/home/trinity/src/kern/include/kern/sfs.h	/^	uint16_t sfi_type;			\/* One of SFS_TYPE_* above *\/$/;"	m	struct:sfs_dinode	access:public
sfi_waste	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_waste[128-3-SFS_NDIRECT];	\/* unused space, set to 0 *\/$/;"	m	struct:sfs_dinode	access:public
sfs_absfs	/home/trinity/src/kern/include/sfs.h	/^	struct fs sfs_absfs;            \/* abstract filesystem structure *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::fs	access:public
sfs_balloc	/home/trinity/src/kern/fs/sfs/sfs_balloc.c	/^sfs_balloc(struct sfs_fs *sfs, daddr_t *diskblock)$/;"	f	signature:(struct sfs_fs *sfs, daddr_t *diskblock)
sfs_balloc	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_balloc(struct sfs_fs *sfs, daddr_t *diskblock);$/;"	p	signature:(struct sfs_fs *sfs, daddr_t *diskblock)
sfs_bfree	/home/trinity/src/kern/fs/sfs/sfs_balloc.c	/^sfs_bfree(struct sfs_fs *sfs, daddr_t diskblock)$/;"	f	signature:(struct sfs_fs *sfs, daddr_t diskblock)
sfs_bfree	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^void sfs_bfree(struct sfs_fs *sfs, daddr_t diskblock);$/;"	p	signature:(struct sfs_fs *sfs, daddr_t diskblock)
sfs_blockio	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_blockio(struct sfs_vnode *sv, struct uio *uio)$/;"	f	file:	signature:(struct sfs_vnode *sv, struct uio *uio)
sfs_bmap	/home/trinity/src/kern/fs/sfs/sfs_bmap.c	/^sfs_bmap(struct sfs_vnode *sv, uint32_t fileblock, bool doalloc,$/;"	f	signature:(struct sfs_vnode *sv, uint32_t fileblock, bool doalloc, daddr_t *diskblock)
sfs_bmap	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_bmap(struct sfs_vnode *sv, uint32_t fileblock, bool doalloc,$/;"	p	signature:(struct sfs_vnode *sv, uint32_t fileblock, bool doalloc, daddr_t *diskblock)
sfs_bused	/home/trinity/src/kern/fs/sfs/sfs_balloc.c	/^sfs_bused(struct sfs_fs *sfs, daddr_t diskblock)$/;"	f	signature:(struct sfs_fs *sfs, daddr_t diskblock)
sfs_bused	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_bused(struct sfs_fs *sfs, daddr_t diskblock);$/;"	p	signature:(struct sfs_fs *sfs, daddr_t diskblock)
sfs_clearblock	/home/trinity/src/kern/fs/sfs/sfs_balloc.c	/^sfs_clearblock(struct sfs_fs *sfs, daddr_t block)$/;"	f	file:	signature:(struct sfs_fs *sfs, daddr_t block)
sfs_creat	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_creat(struct vnode *v, const char *name, bool excl, mode_t mode,$/;"	f	file:	signature:(struct vnode *v, const char *name, bool excl, mode_t mode, struct vnode **ret)
sfs_device	/home/trinity/src/kern/include/sfs.h	/^	struct device *sfs_device;      \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device	access:public
sfs_dinode	/home/trinity/src/kern/include/kern/sfs.h	/^struct sfs_dinode {$/;"	s
sfs_dinode::sfi_direct	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_direct[SFS_NDIRECT];	\/* Direct blocks *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dinode::sfi_indirect	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_indirect;			\/* Indirect block *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dinode::sfi_linkcount	/home/trinity/src/kern/include/kern/sfs.h	/^	uint16_t sfi_linkcount;			\/* # hard links to this file *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dinode::sfi_size	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_size;			\/* Size of this file (bytes) *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dinode::sfi_type	/home/trinity/src/kern/include/kern/sfs.h	/^	uint16_t sfi_type;			\/* One of SFS_TYPE_* above *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dinode::sfi_waste	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfi_waste[128-3-SFS_NDIRECT];	\/* unused space, set to 0 *\/$/;"	m	struct:sfs_dinode	access:public
sfs_dir_findname	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_dir_findname(struct sfs_vnode *sv, const char *name,$/;"	f	signature:(struct sfs_vnode *sv, const char *name, uint32_t *ino, int *slot, int *emptyslot)
sfs_dir_findname	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_dir_findname(struct sfs_vnode *sv, const char *name,$/;"	p	signature:(struct sfs_vnode *sv, const char *name, uint32_t *ino, int *slot, int *emptyslot)
sfs_dir_link	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_dir_link(struct sfs_vnode *sv, const char *name, uint32_t ino, int *slot)$/;"	f	signature:(struct sfs_vnode *sv, const char *name, uint32_t ino, int *slot)
sfs_dir_link	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_dir_link(struct sfs_vnode *sv, const char *name, uint32_t ino,$/;"	p	signature:(struct sfs_vnode *sv, const char *name, uint32_t ino, int *slot)
sfs_dir_nentries	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_dir_nentries(struct sfs_vnode *sv)$/;"	f	file:	signature:(struct sfs_vnode *sv)
sfs_dir_unlink	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_dir_unlink(struct sfs_vnode *sv, int slot)$/;"	f	signature:(struct sfs_vnode *sv, int slot)
sfs_dir_unlink	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_dir_unlink(struct sfs_vnode *sv, int slot);$/;"	p	signature:(struct sfs_vnode *sv, int slot)
sfs_direntry	/home/trinity/src/kern/include/kern/sfs.h	/^struct sfs_direntry {$/;"	s
sfs_direntry::sfd_ino	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sfd_ino;			\/* Inode number *\/$/;"	m	struct:sfs_direntry	access:public
sfs_direntry::sfd_name	/home/trinity/src/kern/include/kern/sfs.h	/^	char sfd_name[SFS_NAMELEN];		\/* Filename *\/$/;"	m	struct:sfs_direntry	access:public
sfs_dirops	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^const struct vnode_ops sfs_dirops = {$/;"	v	typeref:struct:vnode_ops
sfs_domount	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_domount(void *options, struct device *dev, struct fs **ret)$/;"	f	file:	signature:(void *options, struct device *dev, struct fs **ret)
sfs_eachopen	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_eachopen(struct vnode *v, int openflags)$/;"	f	file:	signature:(struct vnode *v, int openflags)
sfs_eachopendir	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_eachopendir(struct vnode *v, int openflags)$/;"	f	file:	signature:(struct vnode *v, int openflags)
sfs_fileops	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^const struct vnode_ops sfs_fileops = {$/;"	v	typeref:struct:vnode_ops
sfs_freemap	/home/trinity/src/kern/include/sfs.h	/^	struct bitmap *sfs_freemap;     \/* blocks in use are marked 1 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap	access:public
sfs_freemapdirty	/home/trinity/src/kern/include/sfs.h	/^	bool sfs_freemapdirty;          \/* true if freemap modified *\/$/;"	m	struct:sfs_fs	access:public
sfs_freemapio	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_freemapio(struct sfs_fs *sfs, enum uio_rw rw)$/;"	f	file:	signature:(struct sfs_fs *sfs, enum uio_rw rw)
sfs_fs	/home/trinity/src/kern/include/sfs.h	/^struct sfs_fs {$/;"	s
sfs_fs::sfs_absfs	/home/trinity/src/kern/include/sfs.h	/^	struct fs sfs_absfs;            \/* abstract filesystem structure *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::fs	access:public
sfs_fs::sfs_device	/home/trinity/src/kern/include/sfs.h	/^	struct device *sfs_device;      \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device	access:public
sfs_fs::sfs_freemap	/home/trinity/src/kern/include/sfs.h	/^	struct bitmap *sfs_freemap;     \/* blocks in use are marked 1 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap	access:public
sfs_fs::sfs_freemapdirty	/home/trinity/src/kern/include/sfs.h	/^	bool sfs_freemapdirty;          \/* true if freemap modified *\/$/;"	m	struct:sfs_fs	access:public
sfs_fs::sfs_sb	/home/trinity/src/kern/include/sfs.h	/^	struct sfs_superblock sfs_sb;	\/* copy of on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_superblock	access:public
sfs_fs::sfs_superdirty	/home/trinity/src/kern/include/sfs.h	/^	bool sfs_superdirty;            \/* true if superblock modified *\/$/;"	m	struct:sfs_fs	access:public
sfs_fs::sfs_vnodes	/home/trinity/src/kern/include/sfs.h	/^	struct vnodearray *sfs_vnodes;  \/* vnodes loaded into memory *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::vnodearray	access:public
sfs_fs_create	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_fs_create(void)$/;"	f	file:	signature:(void)
sfs_fs_destroy	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_fs_destroy(struct sfs_fs *sfs)$/;"	f	file:	signature:(struct sfs_fs *sfs)
sfs_fsops	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^static const struct fs_ops sfs_fsops = {$/;"	v	typeref:struct:fs_ops	file:
sfs_fsync	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_fsync(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
sfs_getroot	/home/trinity/src/kern/fs/sfs/sfs_inode.c	/^sfs_getroot(struct fs *fs, struct vnode **ret)$/;"	f	signature:(struct fs *fs, struct vnode **ret)
sfs_getroot	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_getroot(struct fs *fs, struct vnode **ret);$/;"	p	signature:(struct fs *fs, struct vnode **ret)
sfs_gettype	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_gettype(struct vnode *v, uint32_t *ret)$/;"	f	file:	signature:(struct vnode *v, uint32_t *ret)
sfs_getvolname	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_getvolname(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
sfs_io	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_io(struct sfs_vnode *sv, struct uio *uio)$/;"	f	signature:(struct sfs_vnode *sv, struct uio *uio)
sfs_io	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_io(struct sfs_vnode *sv, struct uio *uio);$/;"	p	signature:(struct sfs_vnode *sv, struct uio *uio)
sfs_ioctl	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_ioctl(struct vnode *v, int op, userptr_t data)$/;"	f	file:	signature:(struct vnode *v, int op, userptr_t data)
sfs_isseekable	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_isseekable(struct vnode *v)$/;"	f	file:	signature:(struct vnode *v)
sfs_itrunc	/home/trinity/src/kern/fs/sfs/sfs_bmap.c	/^sfs_itrunc(struct sfs_vnode *sv, off_t len)$/;"	f	signature:(struct sfs_vnode *sv, off_t len)
sfs_itrunc	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_itrunc(struct sfs_vnode *sv, off_t len);$/;"	p	signature:(struct sfs_vnode *sv, off_t len)
sfs_link	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_link(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	file:	signature:(struct vnode *dir, const char *name, struct vnode *file)
sfs_loadvnode	/home/trinity/src/kern/fs/sfs/sfs_inode.c	/^sfs_loadvnode(struct sfs_fs *sfs, uint32_t ino, int forcetype,$/;"	f	signature:(struct sfs_fs *sfs, uint32_t ino, int forcetype, struct sfs_vnode **ret)
sfs_loadvnode	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_loadvnode(struct sfs_fs *sfs, uint32_t ino, int forcetype,$/;"	p	signature:(struct sfs_fs *sfs, uint32_t ino, int forcetype, struct sfs_vnode **ret)
sfs_lookonce	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_lookonce(struct sfs_vnode *sv, const char *name,$/;"	f	signature:(struct sfs_vnode *sv, const char *name, struct sfs_vnode **ret, int *slot)
sfs_lookonce	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_lookonce(struct sfs_vnode *sv, const char *name,$/;"	p	signature:(struct sfs_vnode *sv, const char *name, struct sfs_vnode **ret, int *slot)
sfs_lookparent	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_lookparent(struct vnode *v, char *path, struct vnode **ret,$/;"	f	file:	signature:(struct vnode *v, char *path, struct vnode **ret, char *buf, size_t buflen)
sfs_lookup	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_lookup(struct vnode *v, char *path, struct vnode **ret)$/;"	f	file:	signature:(struct vnode *v, char *path, struct vnode **ret)
sfs_makeobj	/home/trinity/src/kern/fs/sfs/sfs_inode.c	/^sfs_makeobj(struct sfs_fs *sfs, int type, struct sfs_vnode **ret)$/;"	f	signature:(struct sfs_fs *sfs, int type, struct sfs_vnode **ret)
sfs_makeobj	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_makeobj(struct sfs_fs *sfs, int type, struct sfs_vnode **ret);$/;"	p	signature:(struct sfs_fs *sfs, int type, struct sfs_vnode **ret)
sfs_metaio	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_metaio(struct sfs_vnode *sv, off_t actualpos, void *data, size_t len,$/;"	f	signature:(struct sfs_vnode *sv, off_t actualpos, void *data, size_t len, enum uio_rw rw)
sfs_metaio	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_metaio(struct sfs_vnode *sv, off_t pos, void *data, size_t len,$/;"	p	signature:(struct sfs_vnode *sv, off_t pos, void *data, size_t len, enum uio_rw rw)
sfs_mmap	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_mmap(struct vnode *v   \/* add stuff as needed *\/)$/;"	f	file:	signature:(struct vnode *v )
sfs_mount	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_mount(const char *device)$/;"	f	signature:(const char *device)
sfs_mount	/home/trinity/src/kern/include/sfs.h	/^int sfs_mount(const char *device);$/;"	p	signature:(const char *device)
sfs_namefile	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_namefile(struct vnode *vv, struct uio *uio)$/;"	f	file:	signature:(struct vnode *vv, struct uio *uio)
sfs_partialio	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_partialio(struct sfs_vnode *sv, struct uio *uio,$/;"	f	file:	signature:(struct sfs_vnode *sv, struct uio *uio, uint32_t skipstart, uint32_t len)
sfs_read	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_read(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
sfs_readblock	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_readblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)$/;"	f	signature:(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)
sfs_readblock	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_readblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len);$/;"	p	signature:(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)
sfs_readdir	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_readdir(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)$/;"	f	file:	signature:(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)
sfs_reclaim	/home/trinity/src/kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct vnode *v)$/;"	f	signature:(struct vnode *v)
sfs_reclaim	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_reclaim(struct vnode *v);$/;"	p	signature:(struct vnode *v)
sfs_remove	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_remove(struct vnode *dir, const char *name)$/;"	f	file:	signature:(struct vnode *dir, const char *name)
sfs_rename	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_rename(struct vnode *d1, const char *n1,$/;"	f	file:	signature:(struct vnode *d1, const char *n1, struct vnode *d2, const char *n2)
sfs_rwblock	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, struct uio *uio)$/;"	f	file:	signature:(struct sfs_fs *sfs, struct uio *uio)
sfs_sb	/home/trinity/src/kern/include/sfs.h	/^	struct sfs_superblock sfs_sb;	\/* copy of on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_superblock	access:public
sfs_stat	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_stat(struct vnode *v, struct stat *statbuf)$/;"	f	file:	signature:(struct vnode *v, struct stat *statbuf)
sfs_superblock	/home/trinity/src/kern/include/kern/sfs.h	/^struct sfs_superblock {$/;"	s
sfs_superblock::reserved	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t reserved[118];			\/* unused, set to 0 *\/$/;"	m	struct:sfs_superblock	access:public
sfs_superblock::sb_magic	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sb_magic;		\/* Magic number; should be SFS_MAGIC *\/$/;"	m	struct:sfs_superblock	access:public
sfs_superblock::sb_nblocks	/home/trinity/src/kern/include/kern/sfs.h	/^	uint32_t sb_nblocks;			\/* Number of blocks in fs *\/$/;"	m	struct:sfs_superblock	access:public
sfs_superblock::sb_volname	/home/trinity/src/kern/include/kern/sfs.h	/^	char sb_volname[SFS_VOLNAME_SIZE];	\/* Name of this volume *\/$/;"	m	struct:sfs_superblock	access:public
sfs_superdirty	/home/trinity/src/kern/include/sfs.h	/^	bool sfs_superdirty;            \/* true if superblock modified *\/$/;"	m	struct:sfs_fs	access:public
sfs_sync	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_sync(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
sfs_sync_freemap	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_sync_freemap(struct sfs_fs *sfs)$/;"	f	file:	signature:(struct sfs_fs *sfs)
sfs_sync_inode	/home/trinity/src/kern/fs/sfs/sfs_inode.c	/^sfs_sync_inode(struct sfs_vnode *sv)$/;"	f	signature:(struct sfs_vnode *sv)
sfs_sync_inode	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_sync_inode(struct sfs_vnode *sv);$/;"	p	signature:(struct sfs_vnode *sv)
sfs_sync_superblock	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_sync_superblock(struct sfs_fs *sfs)$/;"	f	file:	signature:(struct sfs_fs *sfs)
sfs_sync_vnodes	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_sync_vnodes(struct sfs_fs *sfs)$/;"	f	file:	signature:(struct sfs_fs *sfs)
sfs_truncate	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_truncate(struct vnode *v, off_t len)$/;"	f	file:	signature:(struct vnode *v, off_t len)
sfs_unmount	/home/trinity/src/kern/fs/sfs/sfs_fsops.c	/^sfs_unmount(struct fs *fs)$/;"	f	file:	signature:(struct fs *fs)
sfs_vnode	/home/trinity/src/kern/include/sfs.h	/^struct sfs_vnode {$/;"	s
sfs_vnode::sv_absvn	/home/trinity/src/kern/include/sfs.h	/^	struct vnode sv_absvn;          \/* abstract vnode structure *\/$/;"	m	struct:sfs_vnode	typeref:struct:sfs_vnode::vnode	access:public
sfs_vnode::sv_dirty	/home/trinity/src/kern/include/sfs.h	/^	bool sv_dirty;                  \/* true if sv_i modified *\/$/;"	m	struct:sfs_vnode	access:public
sfs_vnode::sv_i	/home/trinity/src/kern/include/sfs.h	/^	struct sfs_dinode sv_i;		\/* copy of on-disk inode *\/$/;"	m	struct:sfs_vnode	typeref:struct:sfs_vnode::sfs_dinode	access:public
sfs_vnode::sv_ino	/home/trinity/src/kern/include/sfs.h	/^	uint32_t sv_ino;                \/* inode number *\/$/;"	m	struct:sfs_vnode	access:public
sfs_vnodes	/home/trinity/src/kern/include/sfs.h	/^	struct vnodearray *sfs_vnodes;  \/* vnodes loaded into memory *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::vnodearray	access:public
sfs_write	/home/trinity/src/kern/fs/sfs/sfs_vnops.c	/^sfs_write(struct vnode *v, struct uio *uio)$/;"	f	file:	signature:(struct vnode *v, struct uio *uio)
sfs_writeblock	/home/trinity/src/kern/fs/sfs/sfs_io.c	/^sfs_writeblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)$/;"	f	signature:(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)
sfs_writeblock	/home/trinity/src/kern/fs/sfs/sfsprivate.h	/^int sfs_writeblock(struct sfs_fs *sfs, daddr_t block, void *data, size_t len);$/;"	p	signature:(struct sfs_fs *sfs, daddr_t block, void *data, size_t len)
sfs_writedir	/home/trinity/src/kern/fs/sfs/sfs_dir.c	/^sfs_writedir(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)$/;"	f	file:	signature:(struct sfs_vnode *sv, int slot, struct sfs_direntry *sd)
showmenu	/home/trinity/src/kern/main/menu.c	/^showmenu(const char *name, const char *x[])$/;"	f	file:	signature:(const char *name, const char *x[])
shutdown	/home/trinity/src/kern/main/main.c	/^shutdown(void)$/;"	f	file:	signature:(void)
sigaction	/home/trinity/src/kern/include/kern/signal.h	/^struct sigaction {$/;"	s
sigaction::sa_flags	/home/trinity/src/kern/include/kern/signal.h	/^	unsigned sa_flags;$/;"	m	struct:sigaction	access:public
sigaction::sa_handler	/home/trinity/src/kern/include/kern/signal.h	/^	__sigfunc sa_handler;$/;"	m	struct:sigaction	access:public
sigaction::sa_mask	/home/trinity/src/kern/include/kern/signal.h	/^	sigset_t sa_mask;$/;"	m	struct:sigaction	access:public
sigaltstack	/home/trinity/src/kern/include/kern/signal.h	/^struct sigaltstack {$/;"	s
sigaltstack::ss_flags	/home/trinity/src/kern/include/kern/signal.h	/^	unsigned ss_flags;$/;"	m	struct:sigaltstack	access:public
sigaltstack::ss_size	/home/trinity/src/kern/include/kern/signal.h	/^	size_t ss_size;$/;"	m	struct:sigaltstack	access:public
sigaltstack::ss_sp	/home/trinity/src/kern/include/kern/signal.h	/^	void *ss_sp;$/;"	m	struct:sigaltstack	access:public
sigcontext	/home/trinity/src/kern/arch/mips/include/kern/signal.h	/^struct sigcontext {$/;"	s
sigset_t	/home/trinity/src/kern/include/kern/signal.h	/^typedef __u32 sigset_t;$/;"	t
silent	/home/trinity/src/kern/include/test.h	/^static inline void silent(const char * fmt, ...) { (void)fmt; };$/;"	f	signature:(const char * fmt, ...)
size_t	/home/trinity/src/kern/include/types.h	/^typedef __size_t size_t;$/;"	t
sizebases	/home/trinity/src/kern/vm/kmalloc.c	/^static struct pageref *sizebases[NSIZES];$/;"	v	typeref:struct:pageref	file:
sizes	/home/trinity/src/kern/vm/kmalloc.c	/^static const size_t sizes[NSIZES] = { 16, 32, 64, 128, 256, 512, 1024, 2048 };$/;"	v	file:
sleepalot_thread	/home/trinity/src/kern/test/tt3.c	/^sleepalot_thread(void *junk, unsigned long num)$/;"	f	file:	signature:(void *junk, unsigned long num)
sleeperthread	/home/trinity/src/kern/test/synchtest.c	/^sleeperthread(void *junk1, unsigned long junk2) {$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
sleepthread	/home/trinity/src/kern/test/synchtest.c	/^sleepthread(void *junk1, unsigned long junk2)$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
snsecprintf	/home/trinity/src/kern/include/kern/test161.h	/^int snsecprintf(size_t len, char *buffer, const char *secret, const char *msg, const char *name);$/;"	p	signature:(size_t len, char *buffer, const char *secret, const char *msg, const char *name)
sockaddr	/home/trinity/src/kern/include/kern/socket.h	/^struct sockaddr {$/;"	s
sockaddr::sa_family	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 sa_family;$/;"	m	struct:sockaddr	access:public
sockaddr::sa_len	/home/trinity/src/kern/include/kern/socket.h	/^   __u8	sa_len;$/;"	m	struct:sockaddr	access:public
sockaddr_storage	/home/trinity/src/kern/include/kern/socket.h	/^struct sockaddr_storage {$/;"	s
sockaddr_storage::__ss_pad1	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 __ss_pad1;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad2	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 __ss_pad2;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad3	/home/trinity/src/kern/include/kern/socket.h	/^   __u32 __ss_pad3;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad4	/home/trinity/src/kern/include/kern/socket.h	/^   __u64 __ss_pad4;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::__ss_pad5	/home/trinity/src/kern/include/kern/socket.h	/^   char __ss_pad5[_SS_SIZE - sizeof(__u64) - sizeof(__u32) - 4*sizeof(__u8)];$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_family	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 ss_family;$/;"	m	struct:sockaddr_storage	access:public
sockaddr_storage::ss_len	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 ss_len;$/;"	m	struct:sockaddr_storage	access:public
socklen_t	/home/trinity/src/kern/include/types.h	/^typedef __socklen_t socklen_t;$/;"	t
sp	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	69;"	d
spinlock	/home/trinity/src/kern/include/spinlock.h	/^struct spinlock {$/;"	s
spinlock::HANGMAN_LOCKABLE	/home/trinity/src/kern/include/spinlock.h	/^	HANGMAN_LOCKABLE(splk_hangman);     \/* Deadlock detector hook. *\/$/;"	p	struct:spinlock	access:public	signature:(splk_hangman)
spinlock::splk_holder	/home/trinity/src/kern/include/spinlock.h	/^	struct cpu *splk_holder;	    \/* CPU holding this lock. *\/$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu	access:public
spinlock::splk_lock	/home/trinity/src/kern/include/spinlock.h	/^	volatile spinlock_data_t splk_lock; \/* Memory word where we spin. *\/$/;"	m	struct:spinlock	access:public
spinlock_acquire	/home/trinity/src/kern/include/spinlock.h	/^void spinlock_acquire(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock_acquire	/home/trinity/src/kern/thread/spinlock.c	/^spinlock_acquire(struct spinlock *splk)$/;"	f	signature:(struct spinlock *splk)
spinlock_cleanup	/home/trinity/src/kern/include/spinlock.h	/^void spinlock_cleanup(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock_cleanup	/home/trinity/src/kern/thread/spinlock.c	/^spinlock_cleanup(struct spinlock *splk)$/;"	f	signature:(struct spinlock *splk)
spinlock_data_get	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^spinlock_data_get(volatile spinlock_data_t *sd)$/;"	f	signature:(volatile spinlock_data_t *sd)
spinlock_data_get	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^spinlock_data_t spinlock_data_get(volatile spinlock_data_t *sd);$/;"	p	signature:(volatile spinlock_data_t *sd)
spinlock_data_set	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^spinlock_data_set(volatile spinlock_data_t *sd, unsigned val)$/;"	f	signature:(volatile spinlock_data_t *sd, unsigned val)
spinlock_data_set	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^void spinlock_data_set(volatile spinlock_data_t *sd, unsigned val);$/;"	p	signature:(volatile spinlock_data_t *sd, unsigned val)
spinlock_data_t	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^typedef unsigned spinlock_data_t;$/;"	t
spinlock_data_testandset	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^spinlock_data_t spinlock_data_testandset(volatile spinlock_data_t *sd);$/;"	p	signature:(volatile spinlock_data_t *sd)
spinlock_data_testandset	/home/trinity/src/kern/arch/mips/include/spinlock.h	/^spinlock_data_testandset(volatile spinlock_data_t *sd)$/;"	f	signature:(volatile spinlock_data_t *sd)
spinlock_do_i_hold	/home/trinity/src/kern/include/spinlock.h	/^bool spinlock_do_i_hold(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock_do_i_hold	/home/trinity/src/kern/thread/spinlock.c	/^spinlock_do_i_hold(struct spinlock *splk)$/;"	f	signature:(struct spinlock *splk)
spinlock_init	/home/trinity/src/kern/include/spinlock.h	/^void spinlock_init(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock_init	/home/trinity/src/kern/thread/spinlock.c	/^spinlock_init(struct spinlock *splk)$/;"	f	signature:(struct spinlock *splk)
spinlock_not_held	/home/trinity/src/kern/test/semunit.c	/^spinlock_not_held(struct spinlock *splk)$/;"	f	file:	signature:(struct spinlock *splk)
spinlock_release	/home/trinity/src/kern/include/spinlock.h	/^void spinlock_release(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock_release	/home/trinity/src/kern/thread/spinlock.c	/^spinlock_release(struct spinlock *splk)$/;"	f	signature:(struct spinlock *splk)
spinlocks	/home/trinity/src/kern/test/tt3.c	/^static struct spinlock spinlocks[NWAITCHANS];$/;"	v	typeref:struct:spinlock	file:
spinners_lock	/home/trinity/src/kern/test/automationtest.c	/^struct spinlock spinners_lock[MAX_SPINNERS];$/;"	v	typeref:struct:spinlock
spl0	/home/trinity/src/kern/include/spl.h	/^SPL_INLINE int spl0(void);$/;"	p	signature:(void)
spl0	/home/trinity/src/kern/include/spl.h	/^spl0(void)$/;"	f	signature:(void)
splhigh	/home/trinity/src/kern/include/spl.h	/^SPL_INLINE int splhigh(void);$/;"	p	signature:(void)
splhigh	/home/trinity/src/kern/include/spl.h	/^splhigh(void)$/;"	f	signature:(void)
split64to32	/home/trinity/src/kern/include/endian.h	/^void split64to32(uint64_t x, uint32_t *y1, uint32_t *y2);$/;"	p	signature:(uint64_t x, uint32_t *y1, uint32_t *y2)
split64to32	/home/trinity/src/kern/lib/bswap.c	/^split64to32(uint64_t x, uint32_t *y1, uint32_t *y2)$/;"	f	signature:(uint64_t x, uint32_t *y1, uint32_t *y2)
splitxy	/home/trinity/src/kern/dev/lamebus/lscreen.c	/^splitxy(uint32_t xy, unsigned *x, unsigned *y)$/;"	f	file:	signature:(uint32_t xy, unsigned *x, unsigned *y)
splk_holder	/home/trinity/src/kern/include/spinlock.h	/^	struct cpu *splk_holder;	    \/* CPU holding this lock. *\/$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu	access:public
splk_lock	/home/trinity/src/kern/include/spinlock.h	/^	volatile spinlock_data_t splk_lock; \/* Memory word where we spin. *\/$/;"	m	struct:spinlock	access:public
spllower	/home/trinity/src/kern/include/spl.h	/^void spllower(int oldipl, int newipl);$/;"	p	signature:(int oldipl, int newipl)
spllower	/home/trinity/src/kern/thread/spl.c	/^spllower(int oldspl, int newspl)$/;"	f	signature:(int oldspl, int newspl)
splraise	/home/trinity/src/kern/include/spl.h	/^void splraise(int oldipl, int newipl);$/;"	p	signature:(int oldipl, int newipl)
splraise	/home/trinity/src/kern/thread/spl.c	/^splraise(int oldspl, int newspl)$/;"	f	signature:(int oldspl, int newspl)
splx	/home/trinity/src/kern/include/spl.h	/^int splx(int);$/;"	p	signature:(int)
splx	/home/trinity/src/kern/thread/spl.c	/^splx(int spl)$/;"	f	signature:(int spl)
ss_family	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 ss_family;$/;"	m	struct:sockaddr_storage	access:public
ss_flags	/home/trinity/src/kern/include/kern/signal.h	/^	unsigned ss_flags;$/;"	m	struct:sigaltstack	access:public
ss_len	/home/trinity/src/kern/include/kern/socket.h	/^   __u8 ss_len;$/;"	m	struct:sockaddr_storage	access:public
ss_size	/home/trinity/src/kern/include/kern/signal.h	/^	size_t ss_size;$/;"	m	struct:sigaltstack	access:public
ss_sp	/home/trinity/src/kern/include/kern/signal.h	/^	void *ss_sp;$/;"	m	struct:sigaltstack	access:public
ssize_t	/home/trinity/src/kern/include/types.h	/^typedef __ssize_t ssize_t;$/;"	t
st_atime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_atime;        \/* last access time: seconds *\/$/;"	m	struct:stat	access:public
st_atimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_atimensec;     \/* last access time: nanoseconds *\/$/;"	m	struct:stat	access:public
st_blksize	/home/trinity/src/kern/include/kern/stat.h	/^	blksize_t st_blksize;   \/* recommended I\/O block size *\/$/;"	m	struct:stat	access:public
st_blocks	/home/trinity/src/kern/include/kern/stat.h	/^	blkcnt_t st_blocks;	\/* number of blocks file is using *\/$/;"	m	struct:stat	access:public
st_ctime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_ctime;        \/* inode change time: seconds *\/$/;"	m	struct:stat	access:public
st_ctimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_ctimensec;     \/* inode change time: nanoseconds *\/$/;"	m	struct:stat	access:public
st_dev	/home/trinity/src/kern/include/kern/stat.h	/^	dev_t st_dev;           \/* device object lives on *\/$/;"	m	struct:stat	access:public
st_gen	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_gen;           \/* file generation number (root only) *\/$/;"	m	struct:stat	access:public
st_gid	/home/trinity/src/kern/include/kern/stat.h	/^	gid_t st_gid;           \/* group *\/$/;"	m	struct:stat	access:public
st_ino	/home/trinity/src/kern/include/kern/stat.h	/^	ino_t st_ino;           \/* inode number (serial number) of object *\/$/;"	m	struct:stat	access:public
st_mode	/home/trinity/src/kern/include/kern/stat.h	/^	mode_t st_mode;		\/* file type and protection mode *\/$/;"	m	struct:stat	access:public
st_mtime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_mtime;        \/* modification time: seconds *\/$/;"	m	struct:stat	access:public
st_mtimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_mtimensec;     \/* modification time: nanoseconds *\/$/;"	m	struct:stat	access:public
st_nlink	/home/trinity/src/kern/include/kern/stat.h	/^	nlink_t st_nlink;	\/* number of hard links *\/$/;"	m	struct:stat	access:public
st_rdev	/home/trinity/src/kern/include/kern/stat.h	/^	dev_t st_rdev;          \/* device object is (if a device) *\/$/;"	m	struct:stat	access:public
st_size	/home/trinity/src/kern/include/kern/stat.h	/^	off_t st_size;		\/* file size in bytes *\/$/;"	m	struct:stat	access:public
st_uid	/home/trinity/src/kern/include/kern/stat.h	/^	uid_t st_uid;           \/* owner *\/$/;"	m	struct:stat	access:public
startcount	/home/trinity/src/kern/test/synchprobs.c	/^static uint32_t startcount;$/;"	v	file:
startcv	/home/trinity/src/kern/test/synchprobs.c	/^static struct cv *startcv;$/;"	v	typeref:struct:cv	file:
startsem	/home/trinity/src/kern/test/synchprobs.c	/^static struct semaphore *startsem;$/;"	v	typeref:struct:semaphore	file:
stat	/home/trinity/src/kern/include/kern/stat.h	/^struct stat {$/;"	s
stat::st_atime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_atime;        \/* last access time: seconds *\/$/;"	m	struct:stat	access:public
stat::st_atimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_atimensec;     \/* last access time: nanoseconds *\/$/;"	m	struct:stat	access:public
stat::st_blksize	/home/trinity/src/kern/include/kern/stat.h	/^	blksize_t st_blksize;   \/* recommended I\/O block size *\/$/;"	m	struct:stat	access:public
stat::st_blocks	/home/trinity/src/kern/include/kern/stat.h	/^	blkcnt_t st_blocks;	\/* number of blocks file is using *\/$/;"	m	struct:stat	access:public
stat::st_ctime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_ctime;        \/* inode change time: seconds *\/$/;"	m	struct:stat	access:public
stat::st_ctimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_ctimensec;     \/* inode change time: nanoseconds *\/$/;"	m	struct:stat	access:public
stat::st_dev	/home/trinity/src/kern/include/kern/stat.h	/^	dev_t st_dev;           \/* device object lives on *\/$/;"	m	struct:stat	access:public
stat::st_gen	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_gen;           \/* file generation number (root only) *\/$/;"	m	struct:stat	access:public
stat::st_gid	/home/trinity/src/kern/include/kern/stat.h	/^	gid_t st_gid;           \/* group *\/$/;"	m	struct:stat	access:public
stat::st_ino	/home/trinity/src/kern/include/kern/stat.h	/^	ino_t st_ino;           \/* inode number (serial number) of object *\/$/;"	m	struct:stat	access:public
stat::st_mode	/home/trinity/src/kern/include/kern/stat.h	/^	mode_t st_mode;		\/* file type and protection mode *\/$/;"	m	struct:stat	access:public
stat::st_mtime	/home/trinity/src/kern/include/kern/stat.h	/^	time_t st_mtime;        \/* modification time: seconds *\/$/;"	m	struct:stat	access:public
stat::st_mtimensec	/home/trinity/src/kern/include/kern/stat.h	/^	__u32 st_mtimensec;     \/* modification time: nanoseconds *\/$/;"	m	struct:stat	access:public
stat::st_nlink	/home/trinity/src/kern/include/kern/stat.h	/^	nlink_t st_nlink;	\/* number of hard links *\/$/;"	m	struct:stat	access:public
stat::st_rdev	/home/trinity/src/kern/include/kern/stat.h	/^	dev_t st_rdev;          \/* device object is (if a device) *\/$/;"	m	struct:stat	access:public
stat::st_size	/home/trinity/src/kern/include/kern/stat.h	/^	off_t st_size;		\/* file size in bytes *\/$/;"	m	struct:stat	access:public
stat::st_uid	/home/trinity/src/kern/include/kern/stat.h	/^	uid_t st_uid;           \/* owner *\/$/;"	m	struct:stat	access:public
status_lock	/home/trinity/src/kern/test/synchprobs.c	/^struct spinlock status_lock;$/;"	v	typeref:struct:spinlock
status_lock	/home/trinity/src/kern/test/synchtest.c	/^struct spinlock status_lock;$/;"	v	typeref:struct:spinlock
stealmem_lock	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^static struct spinlock stealmem_lock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
stoplight	/home/trinity/src/kern/include/test.h	/^int stoplight(int, char **);$/;"	p	signature:(int, char **)
stoplight	/home/trinity/src/kern/test/synchprobs.c	/^int stoplight(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
stoplight_cleanup	/home/trinity/src/kern/include/test.h	/^void stoplight_cleanup(void);$/;"	p	signature:(void)
stoplight_cleanup	/home/trinity/src/kern/synchprobs/stoplight.c	/^void stoplight_cleanup() {$/;"	f
stoplight_init	/home/trinity/src/kern/include/test.h	/^void stoplight_init(void);$/;"	p	signature:(void)
stoplight_init	/home/trinity/src/kern/synchprobs/stoplight.c	/^stoplight_init() {$/;"	f
strcat	/home/trinity/src/kern/include/lib.h	/^char *strcat(char *dest, const char *src);$/;"	p	signature:(char *dest, const char *src)
strchr	/home/trinity/src/kern/include/lib.h	/^char *strchr(const char *searched, int searchfor);$/;"	p	signature:(const char *searched, int searchfor)
strcmp	/home/trinity/src/kern/include/lib.h	/^int strcmp(const char *str1, const char *str2);$/;"	p	signature:(const char *str1, const char *str2)
strcpy	/home/trinity/src/kern/include/lib.h	/^char *strcpy(char *dest, const char *src);$/;"	p	signature:(char *dest, const char *src)
strerror	/home/trinity/src/kern/include/lib.h	/^const char *strerror(int errcode);$/;"	p	signature:(int errcode)
strerror	/home/trinity/src/kern/lib/misc.c	/^strerror(int errcode)$/;"	f	signature:(int errcode)
strlen	/home/trinity/src/kern/include/lib.h	/^size_t strlen(const char *str);$/;"	p	signature:(const char *str)
strrchr	/home/trinity/src/kern/include/lib.h	/^char *strrchr(const char *searched, int searchfor);$/;"	p	signature:(const char *searched, int searchfor)
strtok_r	/home/trinity/src/kern/include/lib.h	/^char *strtok_r(char *buf, const char *seps, char **context);$/;"	p	signature:(char *buf, const char *seps, char **context)
subpage_kfree	/home/trinity/src/kern/vm/kmalloc.c	/^subpage_kfree(void *ptr)$/;"	f	file:	signature:(void *ptr)
subpage_kmalloc	/home/trinity/src/kern/vm/kmalloc.c	/^subpage_kmalloc(size_t sz$/;"	f	file:	signature:(size_t sz , vaddr_t label )
subpage_stats	/home/trinity/src/kern/vm/kmalloc.c	/^subpage_stats(struct pageref *pr, bool quiet)$/;"	f	file:	signature:(struct pageref *pr, bool quiet)
success	/home/trinity/src/kern/include/kern/test161.h	/^int success(int, const char *, const char *);$/;"	p	signature:(int, const char *, const char *)
sv_absvn	/home/trinity/src/kern/include/sfs.h	/^	struct vnode sv_absvn;          \/* abstract vnode structure *\/$/;"	m	struct:sfs_vnode	typeref:struct:sfs_vnode::vnode	access:public
sv_dirty	/home/trinity/src/kern/include/sfs.h	/^	bool sv_dirty;                  \/* true if sv_i modified *\/$/;"	m	struct:sfs_vnode	access:public
sv_i	/home/trinity/src/kern/include/sfs.h	/^	struct sfs_dinode sv_i;		\/* copy of on-disk inode *\/$/;"	m	struct:sfs_vnode	typeref:struct:sfs_vnode::sfs_dinode	access:public
sv_ino	/home/trinity/src/kern/include/sfs.h	/^	uint32_t sv_ino;                \/* inode number *\/$/;"	m	struct:sfs_vnode	access:public
switchframe	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^struct switchframe {$/;"	s
switchframe::sf_gp	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_gp;$/;"	m	struct:switchframe	access:public
switchframe::sf_ra	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_ra;$/;"	m	struct:switchframe	access:public
switchframe::sf_s0	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s0;$/;"	m	struct:switchframe	access:public
switchframe::sf_s1	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s1;$/;"	m	struct:switchframe	access:public
switchframe::sf_s2	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s2;$/;"	m	struct:switchframe	access:public
switchframe::sf_s3	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s3;$/;"	m	struct:switchframe	access:public
switchframe::sf_s4	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s4;$/;"	m	struct:switchframe	access:public
switchframe::sf_s5	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s5;$/;"	m	struct:switchframe	access:public
switchframe::sf_s6	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s6;$/;"	m	struct:switchframe	access:public
switchframe::sf_s8	/home/trinity/src/kern/arch/mips/thread/switchframe.h	/^        uint32_t sf_s8;$/;"	m	struct:switchframe	access:public
switchframe_init	/home/trinity/src/kern/arch/mips/thread/switchframe.c	/^switchframe_init(struct thread *thread,$/;"	f	signature:(struct thread *thread, void (*entrypoint)(void *data1, unsigned long data2), void *data1, unsigned long data2)
switchframe_init	/home/trinity/src/kern/include/threadprivate.h	/^void switchframe_init(struct thread *,$/;"	p	signature:(struct thread *, void (*entrypoint)(void *data1, unsigned long data2), void *data1, unsigned long data2)
switchframe_switch	/home/trinity/src/kern/arch/mips/thread/switch.S	/^switchframe_switch:$/;"	l
switchframe_switch	/home/trinity/src/kern/include/threadprivate.h	/^void switchframe_switch(struct switchframe **prev, struct switchframe **next);$/;"	p	signature:(struct switchframe **prev, struct switchframe **next)
sys___time	/home/trinity/src/kern/include/syscall.h	/^int sys___time(userptr_t user_seconds, userptr_t user_nanoseconds);$/;"	p	signature:(userptr_t user_seconds, userptr_t user_nanoseconds)
sys___time	/home/trinity/src/kern/syscall/time_syscalls.c	/^sys___time(userptr_t user_seconds_ptr, userptr_t user_nanoseconds_ptr)$/;"	f	signature:(userptr_t user_seconds_ptr, userptr_t user_nanoseconds_ptr)
sys_errlist	/home/trinity/src/kern/include/kern/errmsg.h	/^const char *const sys_errlist[] = {$/;"	v
sys_nerr	/home/trinity/src/kern/include/kern/errmsg.h	/^const int sys_nerr = sizeof(sys_errlist)\/sizeof(const char *);$/;"	v
sys_reboot	/home/trinity/src/kern/include/syscall.h	/^int sys_reboot(int code);$/;"	p	signature:(int code)
sys_reboot	/home/trinity/src/kern/main/main.c	/^sys_reboot(int code)$/;"	f	signature:(int code)
syscall	/home/trinity/src/kern/arch/mips/syscall/syscall.c	/^syscall(struct trapframe *tf)$/;"	f	signature:(struct trapframe *tf)
syscall	/home/trinity/src/kern/include/syscall.h	/^void syscall(struct trapframe *tf);$/;"	p	signature:(struct trapframe *tf)
t0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	48;"	d
t1	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	49;"	d
t2	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	50;"	d
t3	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	51;"	d
t4	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	52;"	d
t5	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	53;"	d
t6	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	54;"	d
t7	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	55;"	d
t8	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	64;"	d
t9	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	65;"	d
t_context	/home/trinity/src/kern/include/thread.h	/^	struct switchframe *t_context;	\/* Saved register context (on stack) *\/$/;"	m	struct:thread	typeref:struct:thread::switchframe	access:public
t_cpu	/home/trinity/src/kern/include/thread.h	/^	struct cpu *t_cpu;		\/* CPU thread runs on *\/$/;"	m	struct:thread	typeref:struct:thread::cpu	access:public
t_curspl	/home/trinity/src/kern/include/thread.h	/^	int t_curspl;			\/* Current spl*() state *\/$/;"	m	struct:thread	access:public
t_in_interrupt	/home/trinity/src/kern/include/thread.h	/^	bool t_in_interrupt;		\/* Are we in an interrupt? *\/$/;"	m	struct:thread	access:public
t_iplhigh_count	/home/trinity/src/kern/include/thread.h	/^	int t_iplhigh_count;		\/* # of times IPL has been raised *\/$/;"	m	struct:thread	access:public
t_listnode	/home/trinity/src/kern/include/thread.h	/^	struct threadlistnode t_listnode; \/* Link for run\/sleep\/zombie lists *\/$/;"	m	struct:thread	typeref:struct:thread::threadlistnode	access:public
t_machdep	/home/trinity/src/kern/include/thread.h	/^	struct thread_machdep t_machdep; \/* Any machine-dependent goo *\/$/;"	m	struct:thread	typeref:struct:thread::thread_machdep	access:public
t_name	/home/trinity/src/kern/include/thread.h	/^	char t_name[MAX_NAME_LENGTH];$/;"	m	struct:thread	access:public
t_proc	/home/trinity/src/kern/include/thread.h	/^	struct proc *t_proc;		\/* Process thread belongs to *\/$/;"	m	struct:thread	typeref:struct:thread::proc	access:public
t_stack	/home/trinity/src/kern/include/thread.h	/^	void *t_stack;			\/* Kernel-level stack *\/$/;"	m	struct:thread	access:public
t_state	/home/trinity/src/kern/include/thread.h	/^	threadstate_t t_state;		\/* State this thread is in *\/$/;"	m	struct:thread	access:public
t_wchan_name	/home/trinity/src/kern/include/thread.h	/^	const char *t_wchan_name;	\/* Name of wait channel, if sleeping *\/$/;"	m	struct:thread	access:public
test161_bootstrap	/home/trinity/src/kern/include/kern/test161.h	/^void test161_bootstrap(void);$/;"	p	signature:(void)
test_message	/home/trinity/src/kern/test/synchprobs.c	/^const char *test_message;$/;"	v
test_status	/home/trinity/src/kern/test/synchprobs.c	/^static bool test_status = TEST161_FAIL;$/;"	v	file:
test_status	/home/trinity/src/kern/test/synchtest.c	/^static bool test_status = TEST161_FAIL;$/;"	v	file:
testa	/home/trinity/src/kern/test/arraytest.c	/^testa(struct array *a)$/;"	f	file:	signature:(struct array *a)
testcv	/home/trinity/src/kern/test/synchtest.c	/^static struct cv *testcv = NULL;$/;"	v	typeref:struct:cv	file:
testcvs	/home/trinity/src/kern/test/synchtest.c	/^static struct cv *testcvs[NCVS];$/;"	v	typeref:struct:cv	file:
testlock	/home/trinity/src/kern/test/synchprobs.c	/^static struct lock *testlock;$/;"	v	typeref:struct:lock	file:
testlock	/home/trinity/src/kern/test/synchtest.c	/^static struct lock *testlock = NULL;$/;"	v	typeref:struct:lock	file:
testlock2	/home/trinity/src/kern/test/synchtest.c	/^static struct lock *testlock2 = NULL;$/;"	v	typeref:struct:lock	file:
testlocks	/home/trinity/src/kern/test/synchtest.c	/^static struct lock *testlocks[NCVS];$/;"	v	typeref:struct:lock	file:
testmenu	/home/trinity/src/kern/main/menu.c	/^static const char *testmenu[] = {$/;"	v	file:
testsem	/home/trinity/src/kern/test/synchtest.c	/^static struct semaphore *testsem = NULL;$/;"	v	typeref:struct:semaphore	file:
testsem2	/home/trinity/src/kern/test/synchtest.c	/^static struct semaphore *testsem2 = NULL;$/;"	v	typeref:struct:semaphore	file:
testval1	/home/trinity/src/kern/test/synchtest.c	/^static volatile unsigned long testval1;$/;"	v	file:
testval2	/home/trinity/src/kern/test/synchtest.c	/^static volatile unsigned long testval2;$/;"	v	file:
testval3	/home/trinity/src/kern/test/synchtest.c	/^static volatile unsigned long testval3;$/;"	v	file:
testval4	/home/trinity/src/kern/test/synchtest.c	/^static volatile int32_t testval4;$/;"	v	file:
tf_a0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a0;$/;"	m	struct:trapframe	access:public
tf_a1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a1;$/;"	m	struct:trapframe	access:public
tf_a2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a2;$/;"	m	struct:trapframe	access:public
tf_a3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a3;$/;"	m	struct:trapframe	access:public
tf_at	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_at;		\/* Saved register 1 (AT) *\/$/;"	m	struct:trapframe	access:public
tf_cause	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_cause;	\/* coprocessor 0 cause register *\/$/;"	m	struct:trapframe	access:public
tf_epc	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_epc;	\/* coprocessor 0 epc register *\/$/;"	m	struct:trapframe	access:public
tf_gp	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_gp;$/;"	m	struct:trapframe	access:public
tf_hi	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_hi;$/;"	m	struct:trapframe	access:public
tf_lo	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_lo;$/;"	m	struct:trapframe	access:public
tf_ra	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_ra;		\/* Saved register 31 *\/$/;"	m	struct:trapframe	access:public
tf_s0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s0;$/;"	m	struct:trapframe	access:public
tf_s1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s1;$/;"	m	struct:trapframe	access:public
tf_s2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s2;$/;"	m	struct:trapframe	access:public
tf_s3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s3;$/;"	m	struct:trapframe	access:public
tf_s4	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s4;$/;"	m	struct:trapframe	access:public
tf_s5	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s5;$/;"	m	struct:trapframe	access:public
tf_s6	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s6;$/;"	m	struct:trapframe	access:public
tf_s7	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s7;$/;"	m	struct:trapframe	access:public
tf_s8	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s8;$/;"	m	struct:trapframe	access:public
tf_sp	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_sp;$/;"	m	struct:trapframe	access:public
tf_status	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_status;	\/* coprocessor 0 status register *\/$/;"	m	struct:trapframe	access:public
tf_t0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t0;$/;"	m	struct:trapframe	access:public
tf_t1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t1;$/;"	m	struct:trapframe	access:public
tf_t2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t2;$/;"	m	struct:trapframe	access:public
tf_t3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t3;$/;"	m	struct:trapframe	access:public
tf_t4	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t4;$/;"	m	struct:trapframe	access:public
tf_t5	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t5;$/;"	m	struct:trapframe	access:public
tf_t6	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t6;$/;"	m	struct:trapframe	access:public
tf_t7	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t7;$/;"	m	struct:trapframe	access:public
tf_t8	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t8;$/;"	m	struct:trapframe	access:public
tf_t9	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t9;$/;"	m	struct:trapframe	access:public
tf_v0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_v0;		\/* Saved register 2 (v0) *\/$/;"	m	struct:trapframe	access:public
tf_v1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_v1;		\/* etc. *\/$/;"	m	struct:trapframe	access:public
tf_vaddr	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_vaddr;	\/* coprocessor 0 vaddr register *\/$/;"	m	struct:trapframe	access:public
the_beep	/home/trinity/src/kern/dev/generic/beep.c	/^static struct beep_softc *the_beep = NULL;$/;"	v	typeref:struct:beep_softc	file:
the_clock	/home/trinity/src/kern/dev/generic/rtclock.c	/^static struct rtclock_softc *the_clock = NULL;$/;"	v	typeref:struct:rtclock_softc	file:
the_console	/home/trinity/src/kern/dev/generic/console.c	/^static struct con_softc *the_console = NULL;$/;"	v	typeref:struct:con_softc	file:
the_random	/home/trinity/src/kern/dev/generic/random.c	/^static struct random_softc *the_random = NULL;$/;"	v	typeref:struct:random_softc	file:
the_trace	/home/trinity/src/kern/dev/lamebus/ltrace.c	/^static struct ltrace_softc *the_trace;$/;"	v	typeref:struct:ltrace_softc	file:
thread	/home/trinity/src/kern/include/thread.h	/^struct thread {$/;"	s
thread::HANGMAN_ACTOR	/home/trinity/src/kern/include/thread.h	/^	HANGMAN_ACTOR(t_hangman);	\/* Deadlock detector hook *\/$/;"	p	struct:thread	access:public	signature:(t_hangman)
thread::t_context	/home/trinity/src/kern/include/thread.h	/^	struct switchframe *t_context;	\/* Saved register context (on stack) *\/$/;"	m	struct:thread	typeref:struct:thread::switchframe	access:public
thread::t_cpu	/home/trinity/src/kern/include/thread.h	/^	struct cpu *t_cpu;		\/* CPU thread runs on *\/$/;"	m	struct:thread	typeref:struct:thread::cpu	access:public
thread::t_curspl	/home/trinity/src/kern/include/thread.h	/^	int t_curspl;			\/* Current spl*() state *\/$/;"	m	struct:thread	access:public
thread::t_in_interrupt	/home/trinity/src/kern/include/thread.h	/^	bool t_in_interrupt;		\/* Are we in an interrupt? *\/$/;"	m	struct:thread	access:public
thread::t_iplhigh_count	/home/trinity/src/kern/include/thread.h	/^	int t_iplhigh_count;		\/* # of times IPL has been raised *\/$/;"	m	struct:thread	access:public
thread::t_listnode	/home/trinity/src/kern/include/thread.h	/^	struct threadlistnode t_listnode; \/* Link for run\/sleep\/zombie lists *\/$/;"	m	struct:thread	typeref:struct:thread::threadlistnode	access:public
thread::t_machdep	/home/trinity/src/kern/include/thread.h	/^	struct thread_machdep t_machdep; \/* Any machine-dependent goo *\/$/;"	m	struct:thread	typeref:struct:thread::thread_machdep	access:public
thread::t_name	/home/trinity/src/kern/include/thread.h	/^	char t_name[MAX_NAME_LENGTH];$/;"	m	struct:thread	access:public
thread::t_proc	/home/trinity/src/kern/include/thread.h	/^	struct proc *t_proc;		\/* Process thread belongs to *\/$/;"	m	struct:thread	typeref:struct:thread::proc	access:public
thread::t_stack	/home/trinity/src/kern/include/thread.h	/^	void *t_stack;			\/* Kernel-level stack *\/$/;"	m	struct:thread	access:public
thread::t_state	/home/trinity/src/kern/include/thread.h	/^	threadstate_t t_state;		\/* State this thread is in *\/$/;"	m	struct:thread	access:public
thread::t_wchan_name	/home/trinity/src/kern/include/thread.h	/^	const char *t_wchan_name;	\/* Name of wait channel, if sleeping *\/$/;"	m	struct:thread	access:public
thread_bootstrap	/home/trinity/src/kern/include/thread.h	/^void thread_bootstrap(void);$/;"	p	signature:(void)
thread_bootstrap	/home/trinity/src/kern/thread/thread.c	/^thread_bootstrap(void)$/;"	f	signature:(void)
thread_checkstack	/home/trinity/src/kern/thread/thread.c	/^thread_checkstack(struct thread *thread)$/;"	f	file:	signature:(struct thread *thread)
thread_checkstack_init	/home/trinity/src/kern/thread/thread.c	/^thread_checkstack_init(struct thread *thread)$/;"	f	file:	signature:(struct thread *thread)
thread_consider_migration	/home/trinity/src/kern/include/thread.h	/^void thread_consider_migration(void);$/;"	p	signature:(void)
thread_consider_migration	/home/trinity/src/kern/thread/thread.c	/^thread_consider_migration(void)$/;"	f	signature:(void)
thread_count	/home/trinity/src/kern/thread/thread.c	/^unsigned thread_count = 0;$/;"	v
thread_count_lock	/home/trinity/src/kern/thread/thread.c	/^static struct spinlock thread_count_lock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
thread_count_wchan	/home/trinity/src/kern/thread/thread.c	/^static struct wchan *thread_count_wchan;$/;"	v	typeref:struct:wchan	file:
thread_create	/home/trinity/src/kern/thread/thread.c	/^thread_create(const char *name)$/;"	f	file:	signature:(const char *name)
thread_destroy	/home/trinity/src/kern/thread/thread.c	/^thread_destroy(struct thread *thread)$/;"	f	file:	signature:(struct thread *thread)
thread_exit	/home/trinity/src/kern/include/thread.h	/^__DEAD void thread_exit(void);$/;"	p	signature:(void)
thread_exit	/home/trinity/src/kern/thread/thread.c	/^thread_exit(void)$/;"	f	signature:(void)
thread_fork	/home/trinity/src/kern/include/thread.h	/^int thread_fork(const char *name, struct proc *proc,$/;"	p	signature:(const char *name, struct proc *proc, void (*func)(void *, unsigned long), void *data1, unsigned long data2)
thread_fork	/home/trinity/src/kern/thread/thread.c	/^thread_fork(const char *name,$/;"	f	signature:(const char *name, struct proc *proc, void (*entrypoint)(void *data1, unsigned long data2), void *data1, unsigned long data2)
thread_machdep	/home/trinity/src/kern/arch/mips/include/thread.h	/^struct thread_machdep {$/;"	s
thread_machdep::tm_badfaultfunc	/home/trinity/src/kern/arch/mips/include/thread.h	/^	badfaultfunc_t tm_badfaultfunc;	\/* fault hook used by copyin\/out *\/$/;"	m	struct:thread_machdep	access:public
thread_machdep::tm_copyjmp	/home/trinity/src/kern/arch/mips/include/thread.h	/^	jmp_buf tm_copyjmp;		\/* longjmp area used by copyin\/out *\/$/;"	m	struct:thread_machdep	access:public
thread_machdep_cleanup	/home/trinity/src/kern/arch/mips/thread/thread_machdep.c	/^thread_machdep_cleanup(struct thread_machdep *tm)$/;"	f	signature:(struct thread_machdep *tm)
thread_machdep_cleanup	/home/trinity/src/kern/include/threadprivate.h	/^void thread_machdep_cleanup(struct thread_machdep *tm);$/;"	p	signature:(struct thread_machdep *tm)
thread_machdep_init	/home/trinity/src/kern/arch/mips/thread/thread_machdep.c	/^thread_machdep_init(struct thread_machdep *tm)$/;"	f	signature:(struct thread_machdep *tm)
thread_machdep_init	/home/trinity/src/kern/include/threadprivate.h	/^void thread_machdep_init(struct thread_machdep *tm);$/;"	p	signature:(struct thread_machdep *tm)
thread_make_runnable	/home/trinity/src/kern/thread/thread.c	/^thread_make_runnable(struct thread *target, bool already_have_lock)$/;"	f	file:	signature:(struct thread *target, bool already_have_lock)
thread_name	/home/trinity/src/kern/include/synch.h	/^	char thread_name[MAX_NAME_LENGTH];$/;"	m	struct:lock	access:public
thread_panic	/home/trinity/src/kern/include/thread.h	/^void thread_panic(void);$/;"	p	signature:(void)
thread_panic	/home/trinity/src/kern/thread/thread.c	/^thread_panic(void)$/;"	f	signature:(void)
thread_shutdown	/home/trinity/src/kern/include/thread.h	/^void thread_shutdown(void);$/;"	p	signature:(void)
thread_shutdown	/home/trinity/src/kern/thread/thread.c	/^thread_shutdown(void)$/;"	f	signature:(void)
thread_start_cpus	/home/trinity/src/kern/include/thread.h	/^void thread_start_cpus(void);$/;"	p	signature:(void)
thread_start_cpus	/home/trinity/src/kern/thread/thread.c	/^thread_start_cpus(void)$/;"	f	signature:(void)
thread_startup	/home/trinity/src/kern/include/threadprivate.h	/^void thread_startup(void (*entrypoint)(void *data1, unsigned long data2),$/;"	p	signature:(void (*entrypoint)(void *data1, unsigned long data2), void *data1, unsigned long data2)
thread_startup	/home/trinity/src/kern/thread/thread.c	/^thread_startup(void (*entrypoint)(void *data1, unsigned long data2),$/;"	f	signature:(void (*entrypoint)(void *data1, unsigned long data2), void *data1, unsigned long data2)
thread_switch	/home/trinity/src/kern/thread/thread.c	/^thread_switch(threadstate_t newstate, struct wchan *wc, struct spinlock *lk)$/;"	f	file:	signature:(threadstate_t newstate, struct wchan *wc, struct spinlock *lk)
thread_wait_for_count	/home/trinity/src/kern/include/thread.h	/^void thread_wait_for_count(unsigned);$/;"	p	signature:(unsigned)
thread_wait_for_count	/home/trinity/src/kern/thread/thread.c	/^void thread_wait_for_count(unsigned tc)$/;"	f	signature:(unsigned tc)
thread_yield	/home/trinity/src/kern/include/thread.h	/^void thread_yield(void);$/;"	p	signature:(void)
thread_yield	/home/trinity/src/kern/thread/thread.c	/^thread_yield(void)$/;"	f	signature:(void)
threadlist	/home/trinity/src/kern/include/threadlist.h	/^struct threadlist {$/;"	s
threadlist::tl_count	/home/trinity/src/kern/include/threadlist.h	/^	unsigned tl_count;$/;"	m	struct:threadlist	access:public
threadlist::tl_head	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode tl_head;$/;"	m	struct:threadlist	typeref:struct:threadlist::threadlistnode	access:public
threadlist::tl_tail	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode tl_tail;$/;"	m	struct:threadlist	typeref:struct:threadlist::threadlistnode	access:public
threadlist_addhead	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_addhead(struct threadlist *tl, struct thread *t);$/;"	p	signature:(struct threadlist *tl, struct thread *t)
threadlist_addhead	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_addhead(struct threadlist *tl, struct thread *t)$/;"	f	signature:(struct threadlist *tl, struct thread *t)
threadlist_addtail	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_addtail(struct threadlist *tl, struct thread *t);$/;"	p	signature:(struct threadlist *tl, struct thread *t)
threadlist_addtail	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_addtail(struct threadlist *tl, struct thread *t)$/;"	f	signature:(struct threadlist *tl, struct thread *t)
threadlist_cleanup	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_cleanup(struct threadlist *tl);$/;"	p	signature:(struct threadlist *tl)
threadlist_cleanup	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_cleanup(struct threadlist *tl)$/;"	f	signature:(struct threadlist *tl)
threadlist_init	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_init(struct threadlist *tl);$/;"	p	signature:(struct threadlist *tl)
threadlist_init	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_init(struct threadlist *tl)$/;"	f	signature:(struct threadlist *tl)
threadlist_insertafter	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_insertafter(struct threadlist *tl,$/;"	p	signature:(struct threadlist *tl, struct thread *onlist, struct thread *addee)
threadlist_insertafter	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_insertafter(struct threadlist *tl,$/;"	f	signature:(struct threadlist *tl, struct thread *onlist, struct thread *addee)
threadlist_insertafternode	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_insertafternode(struct threadlistnode *onlist, struct thread *t)$/;"	f	file:	signature:(struct threadlistnode *onlist, struct thread *t)
threadlist_insertbefore	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_insertbefore(struct threadlist *tl,$/;"	p	signature:(struct threadlist *tl, struct thread *addee, struct thread *onlist)
threadlist_insertbefore	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_insertbefore(struct threadlist *tl,$/;"	f	signature:(struct threadlist *tl, struct thread *addee, struct thread *onlist)
threadlist_insertbeforenode	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_insertbeforenode(struct thread *t, struct threadlistnode *onlist)$/;"	f	file:	signature:(struct thread *t, struct threadlistnode *onlist)
threadlist_isempty	/home/trinity/src/kern/include/threadlist.h	/^bool threadlist_isempty(struct threadlist *tl);$/;"	p	signature:(struct threadlist *tl)
threadlist_isempty	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_isempty(struct threadlist *tl)$/;"	f	signature:(struct threadlist *tl)
threadlist_remhead	/home/trinity/src/kern/include/threadlist.h	/^struct thread *threadlist_remhead(struct threadlist *tl);$/;"	p	signature:(struct threadlist *tl)
threadlist_remhead	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_remhead(struct threadlist *tl)$/;"	f	signature:(struct threadlist *tl)
threadlist_remove	/home/trinity/src/kern/include/threadlist.h	/^void threadlist_remove(struct threadlist *tl, struct thread *t);$/;"	p	signature:(struct threadlist *tl, struct thread *t)
threadlist_remove	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_remove(struct threadlist *tl, struct thread *t)$/;"	f	signature:(struct threadlist *tl, struct thread *t)
threadlist_removenode	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_removenode(struct threadlistnode *tln)$/;"	f	file:	signature:(struct threadlistnode *tln)
threadlist_remtail	/home/trinity/src/kern/include/threadlist.h	/^struct thread *threadlist_remtail(struct threadlist *tl);$/;"	p	signature:(struct threadlist *tl)
threadlist_remtail	/home/trinity/src/kern/thread/threadlist.c	/^threadlist_remtail(struct threadlist *tl)$/;"	f	signature:(struct threadlist *tl)
threadlistnode	/home/trinity/src/kern/include/threadlist.h	/^struct threadlistnode {$/;"	s
threadlistnode::tln_next	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode *tln_next;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::threadlistnode	access:public
threadlistnode::tln_prev	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode *tln_prev;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::threadlistnode	access:public
threadlistnode::tln_self	/home/trinity/src/kern/include/threadlist.h	/^	struct thread *tln_self;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::thread	access:public
threadlistnode_cleanup	/home/trinity/src/kern/include/threadlist.h	/^void threadlistnode_cleanup(struct threadlistnode *tln);$/;"	p	signature:(struct threadlistnode *tln)
threadlistnode_cleanup	/home/trinity/src/kern/thread/threadlist.c	/^threadlistnode_cleanup(struct threadlistnode *tln)$/;"	f	signature:(struct threadlistnode *tln)
threadlistnode_init	/home/trinity/src/kern/include/threadlist.h	/^void threadlistnode_init(struct threadlistnode *tln, struct thread *self);$/;"	p	signature:(struct threadlistnode *tln, struct thread *self)
threadlistnode_init	/home/trinity/src/kern/thread/threadlist.c	/^threadlistnode_init(struct threadlistnode *tln, struct thread *t)$/;"	f	signature:(struct threadlistnode *tln, struct thread *t)
threadlisttest	/home/trinity/src/kern/include/test.h	/^int threadlisttest(int, char **);$/;"	p	signature:(int, char **)
threadlisttest	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
threadlisttest_a	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_a(void)$/;"	f	file:	signature:(void)
threadlisttest_b	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_b(void)$/;"	f	file:	signature:(void)
threadlisttest_c	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_c(void)$/;"	f	file:	signature:(void)
threadlisttest_d	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_d(void)$/;"	f	file:	signature:(void)
threadlisttest_e	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_e(void)$/;"	f	file:	signature:(void)
threadlisttest_f	/home/trinity/src/kern/test/threadlisttest.c	/^threadlisttest_f(void)$/;"	f	file:	signature:(void)
threadsem	/home/trinity/src/kern/test/fstest.c	/^static struct semaphore *threadsem = NULL;$/;"	v	typeref:struct:semaphore	file:
threadstate_t	/home/trinity/src/kern/include/thread.h	/^} threadstate_t;$/;"	t	typeref:enum:__anon4
threadtest	/home/trinity/src/kern/include/test.h	/^int threadtest(int, char **);$/;"	p	signature:(int, char **)
threadtest	/home/trinity/src/kern/test/threadtest.c	/^threadtest(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
threadtest2	/home/trinity/src/kern/include/test.h	/^int threadtest2(int, char **);$/;"	p	signature:(int, char **)
threadtest2	/home/trinity/src/kern/test/threadtest.c	/^threadtest2(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
threadtest3	/home/trinity/src/kern/include/test.h	/^int threadtest3(int, char **);$/;"	p	signature:(int, char **)
threadtest3	/home/trinity/src/kern/test/tt3.c	/^threadtest3(int nargs, char **args)$/;"	f	signature:(int nargs, char **args)
time_t	/home/trinity/src/kern/include/types.h	/^typedef __time_t time_t;$/;"	t
timerclock	/home/trinity/src/kern/include/clock.h	/^void timerclock(void);$/;"	p	signature:(void)
timerclock	/home/trinity/src/kern/thread/clock.c	/^timerclock(void)$/;"	f	signature:(void)
timespec	/home/trinity/src/kern/include/kern/time.h	/^struct timespec {$/;"	s
timespec::tv_nsec	/home/trinity/src/kern/include/kern/time.h	/^        __i32 tv_nsec;          \/* nanoseconds *\/$/;"	m	struct:timespec	access:public
timespec::tv_sec	/home/trinity/src/kern/include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timespec	access:public
timespec_add	/home/trinity/src/kern/include/clock.h	/^void timespec_add(const struct timespec *t1,$/;"	p	signature:(const struct timespec *t1, const struct timespec *t2, struct timespec *ret)
timespec_add	/home/trinity/src/kern/lib/time.c	/^timespec_add(const struct timespec *ts1,$/;"	f	signature:(const struct timespec *ts1, const struct timespec *ts2, struct timespec *ret)
timespec_sub	/home/trinity/src/kern/include/clock.h	/^void timespec_sub(const struct timespec *t1,$/;"	p	signature:(const struct timespec *t1, const struct timespec *t2, struct timespec *ret)
timespec_sub	/home/trinity/src/kern/lib/time.c	/^timespec_sub(const struct timespec *ts1,$/;"	f	signature:(const struct timespec *ts1, const struct timespec *ts2, struct timespec *ret)
timeval	/home/trinity/src/kern/include/kern/time.h	/^struct timeval {$/;"	s
timeval::tv_sec	/home/trinity/src/kern/include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timeval	access:public
timeval::tv_usec	/home/trinity/src/kern/include/kern/time.h	/^        __i32 tv_usec;          \/* microseconds *\/$/;"	m	struct:timeval	access:public
tl_count	/home/trinity/src/kern/include/threadlist.h	/^	unsigned tl_count;$/;"	m	struct:threadlist	access:public
tl_head	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode tl_head;$/;"	m	struct:threadlist	typeref:struct:threadlist::threadlistnode	access:public
tl_tail	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode tl_tail;$/;"	m	struct:threadlist	typeref:struct:threadlist::threadlistnode	access:public
tlb_probe	/home/trinity/src/kern/arch/mips/include/tlb.h	/^int tlb_probe(uint32_t entryhi, uint32_t entrylo);$/;"	p	signature:(uint32_t entryhi, uint32_t entrylo)
tlb_probe	/home/trinity/src/kern/arch/mips/vm/tlb-mips161.S	/^tlb_probe:$/;"	l
tlb_random	/home/trinity/src/kern/arch/mips/include/tlb.h	/^void tlb_random(uint32_t entryhi, uint32_t entrylo);$/;"	p	signature:(uint32_t entryhi, uint32_t entrylo)
tlb_random	/home/trinity/src/kern/arch/mips/vm/tlb-mips161.S	/^tlb_random:$/;"	l
tlb_read	/home/trinity/src/kern/arch/mips/include/tlb.h	/^void tlb_read(uint32_t *entryhi, uint32_t *entrylo, uint32_t index);$/;"	p	signature:(uint32_t *entryhi, uint32_t *entrylo, uint32_t index)
tlb_read	/home/trinity/src/kern/arch/mips/vm/tlb-mips161.S	/^tlb_read:$/;"	l
tlb_reset	/home/trinity/src/kern/arch/mips/vm/tlb-mips161.S	/^tlb_reset:$/;"	l
tlb_write	/home/trinity/src/kern/arch/mips/include/tlb.h	/^void tlb_write(uint32_t entryhi, uint32_t entrylo, uint32_t index);$/;"	p	signature:(uint32_t entryhi, uint32_t entrylo, uint32_t index)
tlb_write	/home/trinity/src/kern/arch/mips/vm/tlb-mips161.S	/^tlb_write:$/;"	l
tlbshootdown	/home/trinity/src/kern/arch/mips/include/vm.h	/^struct tlbshootdown {$/;"	s
tlbshootdown::ts_placeholder	/home/trinity/src/kern/arch/mips/include/vm.h	/^	int ts_placeholder;$/;"	m	struct:tlbshootdown	access:public
tln_next	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode *tln_next;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::threadlistnode	access:public
tln_prev	/home/trinity/src/kern/include/threadlist.h	/^	struct threadlistnode *tln_prev;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::threadlistnode	access:public
tln_self	/home/trinity/src/kern/include/threadlist.h	/^	struct thread *tln_self;$/;"	m	struct:threadlistnode	typeref:struct:threadlistnode::thread	access:public
tm_badfaultfunc	/home/trinity/src/kern/arch/mips/include/thread.h	/^	badfaultfunc_t tm_badfaultfunc;	\/* fault hook used by copyin\/out *\/$/;"	m	struct:thread_machdep	access:public
tm_copyjmp	/home/trinity/src/kern/arch/mips/include/thread.h	/^	jmp_buf tm_copyjmp;		\/* longjmp area used by copyin\/out *\/$/;"	m	struct:thread_machdep	access:public
translate_err	/home/trinity/src/kern/dev/lamebus/emu.c	/^translate_err(struct emu_softc *sc, uint32_t code)$/;"	f	file:	signature:(struct emu_softc *sc, uint32_t code)
trapcodenames	/home/trinity/src/kern/arch/mips/locore/trap.c	/^static const char *const trapcodenames[NTRAPCODES] = {$/;"	v	file:
trapframe	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^struct trapframe {$/;"	s
trapframe::tf_a0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a0;$/;"	m	struct:trapframe	access:public
trapframe::tf_a1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a1;$/;"	m	struct:trapframe	access:public
trapframe::tf_a2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a2;$/;"	m	struct:trapframe	access:public
trapframe::tf_a3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_a3;$/;"	m	struct:trapframe	access:public
trapframe::tf_at	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_at;		\/* Saved register 1 (AT) *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_cause	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_cause;	\/* coprocessor 0 cause register *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_epc	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_epc;	\/* coprocessor 0 epc register *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_gp	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_gp;$/;"	m	struct:trapframe	access:public
trapframe::tf_hi	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_hi;$/;"	m	struct:trapframe	access:public
trapframe::tf_lo	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_lo;$/;"	m	struct:trapframe	access:public
trapframe::tf_ra	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_ra;		\/* Saved register 31 *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_s0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s0;$/;"	m	struct:trapframe	access:public
trapframe::tf_s1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s1;$/;"	m	struct:trapframe	access:public
trapframe::tf_s2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s2;$/;"	m	struct:trapframe	access:public
trapframe::tf_s3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s3;$/;"	m	struct:trapframe	access:public
trapframe::tf_s4	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s4;$/;"	m	struct:trapframe	access:public
trapframe::tf_s5	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s5;$/;"	m	struct:trapframe	access:public
trapframe::tf_s6	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s6;$/;"	m	struct:trapframe	access:public
trapframe::tf_s7	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s7;$/;"	m	struct:trapframe	access:public
trapframe::tf_s8	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_s8;$/;"	m	struct:trapframe	access:public
trapframe::tf_sp	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_sp;$/;"	m	struct:trapframe	access:public
trapframe::tf_status	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_status;	\/* coprocessor 0 status register *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_t0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t0;$/;"	m	struct:trapframe	access:public
trapframe::tf_t1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t1;$/;"	m	struct:trapframe	access:public
trapframe::tf_t2	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t2;$/;"	m	struct:trapframe	access:public
trapframe::tf_t3	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t3;$/;"	m	struct:trapframe	access:public
trapframe::tf_t4	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t4;$/;"	m	struct:trapframe	access:public
trapframe::tf_t5	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t5;$/;"	m	struct:trapframe	access:public
trapframe::tf_t6	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t6;$/;"	m	struct:trapframe	access:public
trapframe::tf_t7	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t7;$/;"	m	struct:trapframe	access:public
trapframe::tf_t8	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t8;$/;"	m	struct:trapframe	access:public
trapframe::tf_t9	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_t9;$/;"	m	struct:trapframe	access:public
trapframe::tf_v0	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_v0;		\/* Saved register 2 (v0) *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_v1	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_v1;		\/* etc. *\/$/;"	m	struct:trapframe	access:public
trapframe::tf_vaddr	/home/trinity/src/kern/arch/mips/include/trapframe.h	/^	uint32_t tf_vaddr;	\/* coprocessor 0 vaddr register *\/$/;"	m	struct:trapframe	access:public
true	/home/trinity/src/kern/include/types.h	152;"	d
tryattach_beep_to_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_beep_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct ltimer_softc *bus, int busunit)
tryattach_con_to_lser	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_con_to_lser(int devunit, struct lser_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lser_softc *bus, int busunit)
tryattach_emu_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_emu_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_lhd_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_lrandom_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_lser_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_lser_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_ltimer_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_ltrace_to_lamebus	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lamebus_softc *bus, int busunit)
tryattach_random_to_lrandom	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_random_to_lrandom(int devunit, struct lrandom_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct lrandom_softc *bus, int busunit)
tryattach_rtclock_to_ltimer	/home/trinity/src/kern/compile/DUMBVM/autoconf.c	/^tryattach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)$/;"	f	file:	signature:(int devunit, struct ltimer_softc *bus, int busunit)
ts_placeholder	/home/trinity/src/kern/arch/mips/include/vm.h	/^	int ts_placeholder;$/;"	m	struct:tlbshootdown	access:public
tsem	/home/trinity/src/kern/test/threadtest.c	/^static struct semaphore *tsem = NULL;$/;"	v	typeref:struct:semaphore	file:
turnleft	/home/trinity/src/kern/include/test.h	/^void turnleft(uint32_t, uint32_t);$/;"	p	signature:(uint32_t, uint32_t)
turnleft	/home/trinity/src/kern/synchprobs/stoplight.c	/^turnleft(uint32_t direction, uint32_t index)$/;"	f	signature:(uint32_t direction, uint32_t index)
turnleft_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^turnleft_wrapper(void *index, unsigned long direction)$/;"	f	file:	signature:(void *index, unsigned long direction)
turnright	/home/trinity/src/kern/include/test.h	/^void turnright(uint32_t, uint32_t);$/;"	p	signature:(uint32_t, uint32_t)
turnright	/home/trinity/src/kern/synchprobs/stoplight.c	/^turnright(uint32_t direction, uint32_t index)$/;"	f	signature:(uint32_t direction, uint32_t index)
turnright_wrapper	/home/trinity/src/kern/test/synchprobs.c	/^turnright_wrapper(void *index, unsigned long direction)$/;"	f	file:	signature:(void *index, unsigned long direction)
tv_nsec	/home/trinity/src/kern/include/kern/time.h	/^        __i32 tv_nsec;          \/* nanoseconds *\/$/;"	m	struct:timespec	access:public
tv_sec	/home/trinity/src/kern/include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timespec	access:public
tv_sec	/home/trinity/src/kern/include/kern/time.h	/^        __time_t tv_sec;        \/* seconds *\/$/;"	m	struct:timeval	access:public
tv_usec	/home/trinity/src/kern/include/kern/time.h	/^        __i32 tv_usec;          \/* microseconds *\/$/;"	m	struct:timeval	access:public
uid_t	/home/trinity/src/kern/include/types.h	/^typedef __uid_t uid_t;$/;"	t
uint16_t	/home/trinity/src/kern/include/types.h	/^typedef __u16 uint16_t;$/;"	t
uint32_t	/home/trinity/src/kern/include/types.h	/^typedef __u32 uint32_t;$/;"	t
uint64_t	/home/trinity/src/kern/include/types.h	/^typedef __u64 uint64_t;$/;"	t
uint8_t	/home/trinity/src/kern/include/types.h	/^typedef __u8 uint8_t;$/;"	t
uintptr_t	/home/trinity/src/kern/include/types.h	/^typedef __uintptr_t uintptr_t;$/;"	t
uio	/home/trinity/src/kern/include/uio.h	/^struct uio {$/;"	s
uio::uio_iov	/home/trinity/src/kern/include/uio.h	/^	struct iovec     *uio_iov;	\/* Data blocks *\/$/;"	m	struct:uio	typeref:struct:uio::iovec	access:public
uio::uio_iovcnt	/home/trinity/src/kern/include/uio.h	/^	unsigned          uio_iovcnt;	\/* Number of iovecs *\/$/;"	m	struct:uio	access:public
uio::uio_offset	/home/trinity/src/kern/include/uio.h	/^	off_t             uio_offset;	\/* Desired offset into object *\/$/;"	m	struct:uio	access:public
uio::uio_resid	/home/trinity/src/kern/include/uio.h	/^	size_t            uio_resid;	\/* Remaining amt of data to xfer *\/$/;"	m	struct:uio	access:public
uio::uio_rw	/home/trinity/src/kern/include/uio.h	/^	enum uio_rw       uio_rw;	\/* Whether op is a read or write *\/$/;"	m	struct:uio	typeref:enum:uio::uio_rw	access:public
uio::uio_segflg	/home/trinity/src/kern/include/uio.h	/^	enum uio_seg      uio_segflg;	\/* What kind of pointer we have *\/$/;"	m	struct:uio	typeref:enum:uio::uio_seg	access:public
uio::uio_space	/home/trinity/src/kern/include/uio.h	/^	struct addrspace *uio_space;	\/* Address space for user pointer *\/$/;"	m	struct:uio	typeref:struct:uio::addrspace	access:public
uio_iov	/home/trinity/src/kern/include/uio.h	/^	struct iovec     *uio_iov;	\/* Data blocks *\/$/;"	m	struct:uio	typeref:struct:uio::iovec	access:public
uio_iovcnt	/home/trinity/src/kern/include/uio.h	/^	unsigned          uio_iovcnt;	\/* Number of iovecs *\/$/;"	m	struct:uio	access:public
uio_kinit	/home/trinity/src/kern/include/uio.h	/^void uio_kinit(struct iovec *, struct uio *,$/;"	p	signature:(struct iovec *, struct uio *, void *kbuf, size_t len, off_t pos, enum uio_rw rw)
uio_kinit	/home/trinity/src/kern/lib/uio.c	/^uio_kinit(struct iovec *iov, struct uio *u,$/;"	f	signature:(struct iovec *iov, struct uio *u, void *kbuf, size_t len, off_t pos, enum uio_rw rw)
uio_offset	/home/trinity/src/kern/include/uio.h	/^	off_t             uio_offset;	\/* Desired offset into object *\/$/;"	m	struct:uio	access:public
uio_resid	/home/trinity/src/kern/include/uio.h	/^	size_t            uio_resid;	\/* Remaining amt of data to xfer *\/$/;"	m	struct:uio	access:public
uio_rw	/home/trinity/src/kern/include/uio.h	/^	enum uio_rw       uio_rw;	\/* Whether op is a read or write *\/$/;"	m	struct:uio	typeref:enum:uio::uio_rw	access:public
uio_rw	/home/trinity/src/kern/include/uio.h	/^enum uio_rw {$/;"	g
uio_seg	/home/trinity/src/kern/include/uio.h	/^enum uio_seg {$/;"	g
uio_segflg	/home/trinity/src/kern/include/uio.h	/^	enum uio_seg      uio_segflg;	\/* What kind of pointer we have *\/$/;"	m	struct:uio	typeref:enum:uio::uio_seg	access:public
uio_space	/home/trinity/src/kern/include/uio.h	/^	struct addrspace *uio_space;	\/* Address space for user pointer *\/$/;"	m	struct:uio	typeref:struct:uio::addrspace	access:public
uiomove	/home/trinity/src/kern/include/uio.h	/^int uiomove(void *kbuffer, size_t len, struct uio *uio);$/;"	p	signature:(void *kbuffer, size_t len, struct uio *uio)
uiomove	/home/trinity/src/kern/lib/uio.c	/^uiomove(void *ptr, size_t n, struct uio *uio)$/;"	f	signature:(void *ptr, size_t n, struct uio *uio)
uiomovezeros	/home/trinity/src/kern/include/uio.h	/^int uiomovezeros(size_t len, struct uio *uio);$/;"	p	signature:(size_t len, struct uio *uio)
uiomovezeros	/home/trinity/src/kern/lib/uio.c	/^uiomovezeros(size_t n, struct uio *uio)$/;"	f	signature:(size_t n, struct uio *uio)
userptr_t	/home/trinity/src/kern/include/types.h	/^typedef struct __userptr *userptr_t;$/;"	t	typeref:struct:__userptr
v	/home/trinity/src/kern/include/array.h	/^	void **v;$/;"	m	struct:array	access:public
v	/home/trinity/src/kern/lib/bitmap.c	/^        WORD_TYPE *v;$/;"	m	struct:bitmap	file:	access:public
v0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	42;"	d
v1	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	43;"	d
va_arg	/home/trinity/src/kern/include/stdarg.h	53;"	d
va_copy	/home/trinity/src/kern/include/stdarg.h	54;"	d
va_end	/home/trinity/src/kern/include/stdarg.h	55;"	d
va_list	/home/trinity/src/kern/include/stdarg.h	/^typedef __va_list va_list;$/;"	t
va_start	/home/trinity/src/kern/include/stdarg.h	49;"	d
va_start	/home/trinity/src/kern/include/stdarg.h	51;"	d
vaddr_t	/home/trinity/src/kern/arch/mips/include/types.h	/^typedef __u32 vaddr_t;$/;"	t
vfs_adddev	/home/trinity/src/kern/include/vfs.h	/^int vfs_adddev(const char *devname, struct device *dev, int mountable);$/;"	p	signature:(const char *devname, struct device *dev, int mountable)
vfs_adddev	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_adddev(const char *devname, struct device *dev, int mountable)$/;"	f	signature:(const char *devname, struct device *dev, int mountable)
vfs_addfs	/home/trinity/src/kern/include/vfs.h	/^int vfs_addfs(const char *devname, struct fs *fs);$/;"	p	signature:(const char *devname, struct fs *fs)
vfs_addfs	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_addfs(const char *devname, struct fs *fs)$/;"	f	signature:(const char *devname, struct fs *fs)
vfs_biglock	/home/trinity/src/kern/vfs/vfslist.c	/^static struct lock *vfs_biglock;$/;"	v	typeref:struct:lock	file:
vfs_biglock_acquire	/home/trinity/src/kern/include/vfs.h	/^void vfs_biglock_acquire(void);$/;"	p	signature:(void)
vfs_biglock_acquire	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_biglock_acquire(void)$/;"	f	signature:(void)
vfs_biglock_depth	/home/trinity/src/kern/vfs/vfslist.c	/^static unsigned vfs_biglock_depth;$/;"	v	file:
vfs_biglock_do_i_hold	/home/trinity/src/kern/include/vfs.h	/^bool vfs_biglock_do_i_hold(void);$/;"	p	signature:(void)
vfs_biglock_do_i_hold	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_biglock_do_i_hold(void)$/;"	f	signature:(void)
vfs_biglock_release	/home/trinity/src/kern/include/vfs.h	/^void vfs_biglock_release(void);$/;"	p	signature:(void)
vfs_biglock_release	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_biglock_release(void)$/;"	f	signature:(void)
vfs_bootstrap	/home/trinity/src/kern/include/vfs.h	/^void vfs_bootstrap(void);$/;"	p	signature:(void)
vfs_bootstrap	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_bootstrap(void)$/;"	f	signature:(void)
vfs_chdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_chdir(char *path);$/;"	p	signature:(char *path)
vfs_chdir	/home/trinity/src/kern/vfs/vfscwd.c	/^vfs_chdir(char *path)$/;"	f	signature:(char *path)
vfs_clearbootfs	/home/trinity/src/kern/include/vfs.h	/^void vfs_clearbootfs(void);$/;"	p	signature:(void)
vfs_clearbootfs	/home/trinity/src/kern/vfs/vfslookup.c	/^vfs_clearbootfs(void)$/;"	f	signature:(void)
vfs_clearcurdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_clearcurdir(void);$/;"	p	signature:(void)
vfs_clearcurdir	/home/trinity/src/kern/vfs/vfscwd.c	/^vfs_clearcurdir(void)$/;"	f	signature:(void)
vfs_close	/home/trinity/src/kern/include/vfs.h	/^void vfs_close(struct vnode *vn);$/;"	p	signature:(struct vnode *vn)
vfs_close	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_close(struct vnode *vn)$/;"	f	signature:(struct vnode *vn)
vfs_doadd	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_doadd(const char *dname, int mountable, struct device *dev, struct fs *fs)$/;"	f	file:	signature:(const char *dname, int mountable, struct device *dev, struct fs *fs)
vfs_getcurdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_getcurdir(struct vnode **retdir);$/;"	p	signature:(struct vnode **retdir)
vfs_getcurdir	/home/trinity/src/kern/vfs/vfscwd.c	/^vfs_getcurdir(struct vnode **ret)$/;"	f	signature:(struct vnode **ret)
vfs_getcwd	/home/trinity/src/kern/include/vfs.h	/^int vfs_getcwd(struct uio *buf);$/;"	p	signature:(struct uio *buf)
vfs_getcwd	/home/trinity/src/kern/vfs/vfscwd.c	/^vfs_getcwd(struct uio *uio)$/;"	f	signature:(struct uio *uio)
vfs_getdevname	/home/trinity/src/kern/include/vfs.h	/^const char *vfs_getdevname(struct fs *fs);$/;"	p	signature:(struct fs *fs)
vfs_getdevname	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_getdevname(struct fs *fs)$/;"	f	signature:(struct fs *fs)
vfs_getroot	/home/trinity/src/kern/include/vfs.h	/^int vfs_getroot(const char *devname, struct vnode **result);$/;"	p	signature:(const char *devname, struct vnode **result)
vfs_getroot	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_getroot(const char *devname, struct vnode **ret)$/;"	f	signature:(const char *devname, struct vnode **ret)
vfs_link	/home/trinity/src/kern/include/vfs.h	/^int vfs_link(char *oldpath, char *newpath);$/;"	p	signature:(char *oldpath, char *newpath)
vfs_link	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_link(char *oldpath, char *newpath)$/;"	f	signature:(char *oldpath, char *newpath)
vfs_lookparent	/home/trinity/src/kern/include/vfs.h	/^int vfs_lookparent(char *path, struct vnode **result,$/;"	p	signature:(char *path, struct vnode **result, char *buf, size_t buflen)
vfs_lookparent	/home/trinity/src/kern/vfs/vfslookup.c	/^vfs_lookparent(char *path, struct vnode **retval,$/;"	f	signature:(char *path, struct vnode **retval, char *buf, size_t buflen)
vfs_lookup	/home/trinity/src/kern/include/vfs.h	/^int vfs_lookup(char *path, struct vnode **result);$/;"	p	signature:(char *path, struct vnode **result)
vfs_lookup	/home/trinity/src/kern/vfs/vfslookup.c	/^vfs_lookup(char *path, struct vnode **retval)$/;"	f	signature:(char *path, struct vnode **retval)
vfs_mkdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_mkdir(char *path, mode_t mode);$/;"	p	signature:(char *path, mode_t mode)
vfs_mkdir	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_mkdir(char *path, mode_t mode)$/;"	f	signature:(char *path, mode_t mode)
vfs_mount	/home/trinity/src/kern/include/vfs.h	/^int vfs_mount(const char *devname, void *data,$/;"	p	signature:(const char *devname, void *data, int (*mountfunc)(void *data, struct device *dev, struct fs **result))
vfs_mount	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_mount(const char *devname, void *data,$/;"	f	signature:(const char *devname, void *data, int (*mountfunc)(void *data, struct device *, struct fs **ret))
vfs_open	/home/trinity/src/kern/include/vfs.h	/^int vfs_open(char *path, int openflags, mode_t mode, struct vnode **ret);$/;"	p	signature:(char *path, int openflags, mode_t mode, struct vnode **ret)
vfs_open	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_open(char *path, int openflags, mode_t mode, struct vnode **ret)$/;"	f	signature:(char *path, int openflags, mode_t mode, struct vnode **ret)
vfs_readlink	/home/trinity/src/kern/include/vfs.h	/^int vfs_readlink(char *path, struct uio *data);$/;"	p	signature:(char *path, struct uio *data)
vfs_readlink	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_readlink(char *path, struct uio *uio)$/;"	f	signature:(char *path, struct uio *uio)
vfs_remove	/home/trinity/src/kern/include/vfs.h	/^int vfs_remove(char *path);$/;"	p	signature:(char *path)
vfs_remove	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_remove(char *path)$/;"	f	signature:(char *path)
vfs_rename	/home/trinity/src/kern/include/vfs.h	/^int vfs_rename(char *oldpath, char *newpath);$/;"	p	signature:(char *oldpath, char *newpath)
vfs_rename	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_rename(char *oldpath, char *newpath)$/;"	f	signature:(char *oldpath, char *newpath)
vfs_rmdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_rmdir(char *path);$/;"	p	signature:(char *path)
vfs_rmdir	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_rmdir(char *path)$/;"	f	signature:(char *path)
vfs_setbootfs	/home/trinity/src/kern/include/vfs.h	/^int vfs_setbootfs(const char *fsname);$/;"	p	signature:(const char *fsname)
vfs_setbootfs	/home/trinity/src/kern/vfs/vfslookup.c	/^vfs_setbootfs(const char *fsname)$/;"	f	signature:(const char *fsname)
vfs_setcurdir	/home/trinity/src/kern/include/vfs.h	/^int vfs_setcurdir(struct vnode *dir);$/;"	p	signature:(struct vnode *dir)
vfs_setcurdir	/home/trinity/src/kern/vfs/vfscwd.c	/^vfs_setcurdir(struct vnode *dir)$/;"	f	signature:(struct vnode *dir)
vfs_swapoff	/home/trinity/src/kern/include/vfs.h	/^int vfs_swapoff(const char *devname);$/;"	p	signature:(const char *devname)
vfs_swapoff	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_swapoff(const char *devname)$/;"	f	signature:(const char *devname)
vfs_swapon	/home/trinity/src/kern/include/vfs.h	/^int vfs_swapon(const char *devname, struct vnode **result);$/;"	p	signature:(const char *devname, struct vnode **result)
vfs_swapon	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_swapon(const char *devname, struct vnode **ret)$/;"	f	signature:(const char *devname, struct vnode **ret)
vfs_symlink	/home/trinity/src/kern/include/vfs.h	/^int vfs_symlink(const char *contents, char *path);$/;"	p	signature:(const char *contents, char *path)
vfs_symlink	/home/trinity/src/kern/vfs/vfspath.c	/^vfs_symlink(const char *contents, char *path)$/;"	f	signature:(const char *contents, char *path)
vfs_sync	/home/trinity/src/kern/include/vfs.h	/^int vfs_sync(void);$/;"	p	signature:(void)
vfs_sync	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_sync(void)$/;"	f	signature:(void)
vfs_unmount	/home/trinity/src/kern/include/vfs.h	/^int vfs_unmount(const char *devname);$/;"	p	signature:(const char *devname)
vfs_unmount	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_unmount(const char *devname)$/;"	f	signature:(const char *devname)
vfs_unmountall	/home/trinity/src/kern/include/vfs.h	/^int vfs_unmountall(void);$/;"	p	signature:(void)
vfs_unmountall	/home/trinity/src/kern/vfs/vfslist.c	/^vfs_unmountall(void)$/;"	f	signature:(void)
vm_bootstrap	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^vm_bootstrap(void)$/;"	f	signature:(void)
vm_bootstrap	/home/trinity/src/kern/include/vm.h	/^void vm_bootstrap(void);$/;"	p	signature:(void)
vm_fault	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^vm_fault(int faulttype, vaddr_t faultaddress)$/;"	f	signature:(int faulttype, vaddr_t faultaddress)
vm_fault	/home/trinity/src/kern/include/vm.h	/^int vm_fault(int faulttype, vaddr_t faultaddress);$/;"	p	signature:(int faulttype, vaddr_t faultaddress)
vm_tlbshootdown	/home/trinity/src/kern/arch/mips/vm/dumbvm.c	/^vm_tlbshootdown(const struct tlbshootdown *ts)$/;"	f	signature:(const struct tlbshootdown *ts)
vm_tlbshootdown	/home/trinity/src/kern/include/vm.h	/^void vm_tlbshootdown(const struct tlbshootdown *);$/;"	p	signature:(const struct tlbshootdown *)
vn_countlock	/home/trinity/src/kern/include/vnode.h	/^	struct spinlock vn_countlock;   \/* Lock for vn_refcount *\/$/;"	m	struct:vnode	typeref:struct:vnode::spinlock	access:public
vn_data	/home/trinity/src/kern/include/vnode.h	/^	void *vn_data;                  \/* Filesystem-specific data *\/$/;"	m	struct:vnode	access:public
vn_fs	/home/trinity/src/kern/include/vnode.h	/^	struct fs *vn_fs;               \/* Filesystem vnode belongs to *\/$/;"	m	struct:vnode	typeref:struct:vnode::fs	access:public
vn_ops	/home/trinity/src/kern/include/vnode.h	/^	const struct vnode_ops *vn_ops; \/* Functions on this vnode *\/$/;"	m	struct:vnode	typeref:struct:vnode::vnode_ops	access:public
vn_refcount	/home/trinity/src/kern/include/vnode.h	/^	int vn_refcount;                \/* Reference count *\/$/;"	m	struct:vnode	access:public
vnode	/home/trinity/src/kern/include/vnode.h	/^struct vnode {$/;"	s
vnode::vn_countlock	/home/trinity/src/kern/include/vnode.h	/^	struct spinlock vn_countlock;   \/* Lock for vn_refcount *\/$/;"	m	struct:vnode	typeref:struct:vnode::spinlock	access:public
vnode::vn_data	/home/trinity/src/kern/include/vnode.h	/^	void *vn_data;                  \/* Filesystem-specific data *\/$/;"	m	struct:vnode	access:public
vnode::vn_fs	/home/trinity/src/kern/include/vnode.h	/^	struct fs *vn_fs;               \/* Filesystem vnode belongs to *\/$/;"	m	struct:vnode	typeref:struct:vnode::fs	access:public
vnode::vn_ops	/home/trinity/src/kern/include/vnode.h	/^	const struct vnode_ops *vn_ops; \/* Functions on this vnode *\/$/;"	m	struct:vnode	typeref:struct:vnode::vnode_ops	access:public
vnode::vn_refcount	/home/trinity/src/kern/include/vnode.h	/^	int vn_refcount;                \/* Reference count *\/$/;"	m	struct:vnode	access:public
vnode_check	/home/trinity/src/kern/include/vnode.h	/^void vnode_check(struct vnode *, const char *op);$/;"	p	signature:(struct vnode *, const char *op)
vnode_check	/home/trinity/src/kern/vfs/vnode.c	/^vnode_check(struct vnode *v, const char *opstr)$/;"	f	signature:(struct vnode *v, const char *opstr)
vnode_cleanup	/home/trinity/src/kern/include/vnode.h	/^void vnode_cleanup(struct vnode *);$/;"	p	signature:(struct vnode *)
vnode_cleanup	/home/trinity/src/kern/vfs/vnode.c	/^vnode_cleanup(struct vnode *vn)$/;"	f	signature:(struct vnode *vn)
vnode_decref	/home/trinity/src/kern/include/vnode.h	/^void vnode_decref(struct vnode *);$/;"	p	signature:(struct vnode *)
vnode_decref	/home/trinity/src/kern/vfs/vnode.c	/^vnode_decref(struct vnode *vn)$/;"	f	signature:(struct vnode *vn)
vnode_incref	/home/trinity/src/kern/include/vnode.h	/^void vnode_incref(struct vnode *);$/;"	p	signature:(struct vnode *)
vnode_incref	/home/trinity/src/kern/vfs/vnode.c	/^vnode_incref(struct vnode *vn)$/;"	f	signature:(struct vnode *vn)
vnode_init	/home/trinity/src/kern/include/vnode.h	/^int vnode_init(struct vnode *, const struct vnode_ops *ops,$/;"	p	signature:(struct vnode *, const struct vnode_ops *ops, struct fs *fs, void *fsdata)
vnode_init	/home/trinity/src/kern/vfs/vnode.c	/^vnode_init(struct vnode *vn, const struct vnode_ops *ops,$/;"	f	signature:(struct vnode *vn, const struct vnode_ops *ops, struct fs *fs, void *fsdata)
vnode_ops	/home/trinity/src/kern/include/vnode.h	/^struct vnode_ops {$/;"	s
vnode_ops::vop_creat	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_creat)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_eachopen	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_eachopen)(struct vnode *object, int flags_from_open);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_fsync	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_fsync)(struct vnode *object);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_getdirentry	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_getdirentry)(struct vnode *dir, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_gettype	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_gettype)(struct vnode *object, mode_t *result);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_ioctl	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_ioctl)(struct vnode *object, int op, userptr_t data);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_isseekable	/home/trinity/src/kern/include/vnode.h	/^	bool (*vop_isseekable)(struct vnode *object);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_link	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_link)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_lookparent	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_lookparent)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_lookup	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_lookup)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_magic	/home/trinity/src/kern/include/vnode.h	/^	unsigned long vop_magic;	\/* should always be VOP_MAGIC *\/$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_mkdir	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_mkdir)(struct vnode *parentdir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_mmap	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_mmap)(struct vnode *file \/* add stuff *\/);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_namefile	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_namefile)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_read	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_read)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_readlink	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_readlink)(struct vnode *link, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_reclaim	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_reclaim)(struct vnode *vnode);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_remove	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_remove)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_rename	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_rename)(struct vnode *vn1, const char *name1,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_rmdir	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_rmdir)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_stat	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_stat)(struct vnode *object, struct stat *statbuf);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_symlink	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_symlink)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_truncate	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_truncate)(struct vnode *file, off_t len);$/;"	m	struct:vnode_ops	access:public
vnode_ops::vop_write	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_write)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vop_creat	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_creat)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_eachopen	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_eachopen)(struct vnode *object, int flags_from_open);$/;"	m	struct:vnode_ops	access:public
vop_fsync	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_fsync)(struct vnode *object);$/;"	m	struct:vnode_ops	access:public
vop_getdirentry	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_getdirentry)(struct vnode *dir, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vop_gettype	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_gettype)(struct vnode *object, mode_t *result);$/;"	m	struct:vnode_ops	access:public
vop_ioctl	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_ioctl)(struct vnode *object, int op, userptr_t data);$/;"	m	struct:vnode_ops	access:public
vop_isseekable	/home/trinity/src/kern/include/vnode.h	/^	bool (*vop_isseekable)(struct vnode *object);$/;"	m	struct:vnode_ops	access:public
vop_link	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_link)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_lookparent	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_lookparent)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_lookup	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_lookup)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_magic	/home/trinity/src/kern/include/vnode.h	/^	unsigned long vop_magic;	\/* should always be VOP_MAGIC *\/$/;"	m	struct:vnode_ops	access:public
vop_mkdir	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_mkdir)(struct vnode *parentdir,$/;"	m	struct:vnode_ops	access:public
vop_mmap	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_mmap)(struct vnode *file \/* add stuff *\/);$/;"	m	struct:vnode_ops	access:public
vop_namefile	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_namefile)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vop_read	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_read)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vop_readlink	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_readlink)(struct vnode *link, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vop_reclaim	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_reclaim)(struct vnode *vnode);$/;"	m	struct:vnode_ops	access:public
vop_remove	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_remove)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_rename	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_rename)(struct vnode *vn1, const char *name1,$/;"	m	struct:vnode_ops	access:public
vop_rmdir	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_rmdir)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_stat	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_stat)(struct vnode *object, struct stat *statbuf);$/;"	m	struct:vnode_ops	access:public
vop_symlink	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_symlink)(struct vnode *dir,$/;"	m	struct:vnode_ops	access:public
vop_truncate	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_truncate)(struct vnode *file, off_t len);$/;"	m	struct:vnode_ops	access:public
vop_write	/home/trinity/src/kern/include/vnode.h	/^	int (*vop_write)(struct vnode *file, struct uio *uio);$/;"	m	struct:vnode_ops	access:public
vopfail_creat_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_creat_notdir(struct vnode *vn, const char *name, bool excl,$/;"	p	signature:(struct vnode *vn, const char *name, bool excl, mode_t mode, struct vnode **result)
vopfail_creat_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_creat_notdir(struct vnode *vn, const char *name, bool excl,$/;"	f	signature:(struct vnode *vn, const char *name, bool excl, mode_t mode, struct vnode **result)
vopfail_link_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_link_nosys(struct vnode *dir, const char *name,$/;"	p	signature:(struct vnode *dir, const char *name, struct vnode *file)
vopfail_link_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_link_nosys(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	signature:(struct vnode *dir, const char *name, struct vnode *file)
vopfail_link_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_link_notdir(struct vnode *dir, const char *name,$/;"	p	signature:(struct vnode *dir, const char *name, struct vnode *file)
vopfail_link_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_link_notdir(struct vnode *dir, const char *name, struct vnode *file)$/;"	f	signature:(struct vnode *dir, const char *name, struct vnode *file)
vopfail_lookparent_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_lookparent_notdir(struct vnode *vn, char *path,$/;"	p	signature:(struct vnode *vn, char *path, struct vnode **result, char *buf, size_t len)
vopfail_lookparent_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_lookparent_notdir(struct vnode *vn, char *path, struct vnode **result,$/;"	f	signature:(struct vnode *vn, char *path, struct vnode **result, char *buf, size_t len)
vopfail_lookup_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_lookup_notdir(struct vnode *vn, char *path, struct vnode **result);$/;"	p	signature:(struct vnode *vn, char *path, struct vnode **result)
vopfail_lookup_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_lookup_notdir(struct vnode *vn, char *path, struct vnode **result)$/;"	f	signature:(struct vnode *vn, char *path, struct vnode **result)
vopfail_mkdir_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_mkdir_nosys(struct vnode *vn, const char *name, mode_t mode);$/;"	p	signature:(struct vnode *vn, const char *name, mode_t mode)
vopfail_mkdir_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_mkdir_nosys(struct vnode *vn, const char *name, mode_t mode)$/;"	f	signature:(struct vnode *vn, const char *name, mode_t mode)
vopfail_mkdir_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_mkdir_notdir(struct vnode *vn, const char *name, mode_t mode);$/;"	p	signature:(struct vnode *vn, const char *name, mode_t mode)
vopfail_mkdir_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_mkdir_notdir(struct vnode *vn, const char *name, mode_t mode)$/;"	f	signature:(struct vnode *vn, const char *name, mode_t mode)
vopfail_mmap_isdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_mmap_isdir(struct vnode *vn \/* add stuff *\/);$/;"	p	signature:(struct vnode *vn )
vopfail_mmap_isdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_mmap_isdir(struct vnode *vn \/*add stuff *\/)$/;"	f	signature:(struct vnode *vn )
vopfail_mmap_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_mmap_nosys(struct vnode *vn \/* add stuff *\/);$/;"	p	signature:(struct vnode *vn )
vopfail_mmap_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_mmap_nosys(struct vnode *vn \/*add stuff *\/)$/;"	f	signature:(struct vnode *vn )
vopfail_mmap_perm	/home/trinity/src/kern/include/vnode.h	/^int vopfail_mmap_perm(struct vnode *vn \/* add stuff *\/);$/;"	p	signature:(struct vnode *vn )
vopfail_mmap_perm	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_mmap_perm(struct vnode *vn \/*add stuff *\/)$/;"	f	signature:(struct vnode *vn )
vopfail_rename_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_rename_nosys(struct vnode *fromdir, const char *fromname,$/;"	p	signature:(struct vnode *fromdir, const char *fromname, struct vnode *todir, const char *toname)
vopfail_rename_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_rename_nosys(struct vnode *fromdir, const char *fromname,$/;"	f	signature:(struct vnode *fromdir, const char *fromname, struct vnode *todir, const char *toname)
vopfail_rename_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_rename_notdir(struct vnode *fromdir, const char *fromname,$/;"	p	signature:(struct vnode *fromdir, const char *fromname, struct vnode *todir, const char *toname)
vopfail_rename_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_rename_notdir(struct vnode *fromdir, const char *fromname,$/;"	f	signature:(struct vnode *fromdir, const char *fromname, struct vnode *todir, const char *toname)
vopfail_string_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_string_nosys(struct vnode *vn, const char *name);$/;"	p	signature:(struct vnode *vn, const char *name)
vopfail_string_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_string_nosys(struct vnode *vn, const char *name)$/;"	f	signature:(struct vnode *vn, const char *name)
vopfail_string_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_string_notdir(struct vnode *vn, const char *name);$/;"	p	signature:(struct vnode *vn, const char *name)
vopfail_string_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_string_notdir(struct vnode *vn, const char *name)$/;"	f	signature:(struct vnode *vn, const char *name)
vopfail_symlink_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_symlink_nosys(struct vnode *vn, const char *contents,$/;"	p	signature:(struct vnode *vn, const char *contents, const char *name)
vopfail_symlink_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_symlink_nosys(struct vnode *vn, const char *contents,$/;"	f	signature:(struct vnode *vn, const char *contents, const char *name)
vopfail_symlink_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_symlink_notdir(struct vnode *vn, const char *contents,$/;"	p	signature:(struct vnode *vn, const char *contents, const char *name)
vopfail_symlink_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_symlink_notdir(struct vnode *vn, const char *contents,$/;"	f	signature:(struct vnode *vn, const char *contents, const char *name)
vopfail_truncate_isdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_truncate_isdir(struct vnode *vn, off_t pos);$/;"	p	signature:(struct vnode *vn, off_t pos)
vopfail_truncate_isdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_truncate_isdir(struct vnode *vn, off_t pos)$/;"	f	signature:(struct vnode *vn, off_t pos)
vopfail_uio_inval	/home/trinity/src/kern/include/vnode.h	/^int vopfail_uio_inval(struct vnode *vn, struct uio *uio);$/;"	p	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_inval	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_uio_inval(struct vnode *vn, struct uio *uio)$/;"	f	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_isdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_uio_isdir(struct vnode *vn, struct uio *uio);$/;"	p	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_isdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_uio_isdir(struct vnode *vn, struct uio *uio)$/;"	f	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_nosys	/home/trinity/src/kern/include/vnode.h	/^int vopfail_uio_nosys(struct vnode *vn, struct uio *uio);$/;"	p	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_nosys	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_uio_nosys(struct vnode *vn, struct uio *uio)$/;"	f	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_notdir	/home/trinity/src/kern/include/vnode.h	/^int vopfail_uio_notdir(struct vnode *vn, struct uio *uio);$/;"	p	signature:(struct vnode *vn, struct uio *uio)
vopfail_uio_notdir	/home/trinity/src/kern/vfs/vfsfail.c	/^vopfail_uio_notdir(struct vnode *vn, struct uio *uio)$/;"	f	signature:(struct vnode *vn, struct uio *uio)
wait	/home/trinity/src/kern/arch/mips/thread/cpu.c	/^wait(void)$/;"	f	file:	signature:(void)
waitchans	/home/trinity/src/kern/test/tt3.c	/^static struct wchan *waitchans[NWAITCHANS];$/;"	v	typeref:struct:wchan	file:
waiter	/home/trinity/src/kern/test/semunit.c	/^waiter(void *vsem, unsigned long junk)$/;"	f	file:	signature:(void *vsem, unsigned long junk)
waiters_lock	/home/trinity/src/kern/test/semunit.c	/^static struct spinlock waiters_lock = SPINLOCK_INITIALIZER;$/;"	v	typeref:struct:spinlock	file:
waiters_running	/home/trinity/src/kern/test/semunit.c	/^static unsigned waiters_running = 0;$/;"	v	file:
waker_thread	/home/trinity/src/kern/test/tt3.c	/^waker_thread(void *junk1, unsigned long junk2)$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
wakerdone	/home/trinity/src/kern/test/tt3.c	/^static volatile int wakerdone;$/;"	v	file:
wakersem	/home/trinity/src/kern/test/tt3.c	/^static struct semaphore *wakersem;$/;"	v	typeref:struct:semaphore	file:
wakerthread	/home/trinity/src/kern/test/synchtest.c	/^wakerthread(void *junk1, unsigned long junk2) {$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
wakethread	/home/trinity/src/kern/test/synchtest.c	/^wakethread(void *junk1, unsigned long junk2)$/;"	f	file:	signature:(void *junk1, unsigned long junk2)
wc_name	/home/trinity/src/kern/thread/thread.c	/^	const char *wc_name;		\/* name for this channel *\/$/;"	m	struct:wchan	file:	access:public
wc_threads	/home/trinity/src/kern/thread/thread.c	/^	struct threadlist wc_threads;	\/* list of waiting threads *\/$/;"	m	struct:wchan	typeref:struct:wchan::threadlist	file:	access:public
wchan	/home/trinity/src/kern/thread/thread.c	/^struct wchan {$/;"	s	file:
wchan::wc_name	/home/trinity/src/kern/thread/thread.c	/^	const char *wc_name;		\/* name for this channel *\/$/;"	m	struct:wchan	file:	access:public
wchan::wc_threads	/home/trinity/src/kern/thread/thread.c	/^	struct threadlist wc_threads;	\/* list of waiting threads *\/$/;"	m	struct:wchan	typeref:struct:wchan::threadlist	file:	access:public
wchan_create	/home/trinity/src/kern/include/wchan.h	/^struct wchan *wchan_create(const char *name);$/;"	p	signature:(const char *name)
wchan_create	/home/trinity/src/kern/thread/thread.c	/^wchan_create(const char *name)$/;"	f	signature:(const char *name)
wchan_destroy	/home/trinity/src/kern/include/wchan.h	/^void wchan_destroy(struct wchan *wc);$/;"	p	signature:(struct wchan *wc)
wchan_destroy	/home/trinity/src/kern/thread/thread.c	/^wchan_destroy(struct wchan *wc)$/;"	f	signature:(struct wchan *wc)
wchan_isempty	/home/trinity/src/kern/include/wchan.h	/^bool wchan_isempty(struct wchan *wc, struct spinlock *lk);$/;"	p	signature:(struct wchan *wc, struct spinlock *lk)
wchan_isempty	/home/trinity/src/kern/thread/thread.c	/^wchan_isempty(struct wchan *wc, struct spinlock *lk)$/;"	f	signature:(struct wchan *wc, struct spinlock *lk)
wchan_sleep	/home/trinity/src/kern/include/wchan.h	/^void wchan_sleep(struct wchan *wc, struct spinlock *lk);$/;"	p	signature:(struct wchan *wc, struct spinlock *lk)
wchan_sleep	/home/trinity/src/kern/thread/thread.c	/^wchan_sleep(struct wchan *wc, struct spinlock *lk)$/;"	f	signature:(struct wchan *wc, struct spinlock *lk)
wchan_wakeall	/home/trinity/src/kern/include/wchan.h	/^void wchan_wakeall(struct wchan *wc, struct spinlock *lk);$/;"	p	signature:(struct wchan *wc, struct spinlock *lk)
wchan_wakeall	/home/trinity/src/kern/thread/thread.c	/^wchan_wakeall(struct wchan *wc, struct spinlock *lk)$/;"	f	signature:(struct wchan *wc, struct spinlock *lk)
wchan_wakeone	/home/trinity/src/kern/include/wchan.h	/^void wchan_wakeone(struct wchan *wc, struct spinlock *lk);$/;"	p	signature:(struct wchan *wc, struct spinlock *lk)
wchan_wakeone	/home/trinity/src/kern/thread/thread.c	/^wchan_wakeone(struct wchan *wc, struct spinlock *lk)$/;"	f	signature:(struct wchan *wc, struct spinlock *lk)
whale_roles	/home/trinity/src/kern/test/synchprobs.c	/^static volatile int whale_roles[3 * NMATING];$/;"	v	file:
whale_threads	/home/trinity/src/kern/test/synchprobs.c	/^static volatile void* whale_threads[3 * NMATING];$/;"	v	file:
whalemating	/home/trinity/src/kern/include/test.h	/^int whalemating(int, char **);$/;"	p	signature:(int, char **)
whalemating	/home/trinity/src/kern/test/synchprobs.c	/^whalemating(int nargs, char **args) {$/;"	f	signature:(int nargs, char **args)
whalemating_cleanup	/home/trinity/src/kern/include/test.h	/^void whalemating_cleanup(void);$/;"	p	signature:(void)
whalemating_cleanup	/home/trinity/src/kern/synchprobs/whalemating.c	/^whalemating_cleanup() {$/;"	f
whalemating_init	/home/trinity/src/kern/include/test.h	/^void whalemating_init(void);$/;"	p	signature:(void)
whalemating_init	/home/trinity/src/kern/synchprobs/whalemating.c	/^void whalemating_init() {$/;"	f
write_cfg_register	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^write_cfg_register(struct lamebus_softc *lb, int slot, uint32_t offset,$/;"	f	file:	signature:(struct lamebus_softc *lb, int slot, uint32_t offset, uint32_t val)
write_ctl_register	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^write_ctl_register(struct lamebus_softc *lb, uint32_t offset, uint32_t val)$/;"	f	file:	signature:(struct lamebus_softc *lb, uint32_t offset, uint32_t val)
write_ctlcpu_register	/home/trinity/src/kern/dev/lamebus/lamebus.c	/^write_ctlcpu_register(struct lamebus_softc *lb, unsigned hw_cpunum,$/;"	f	file:	signature:(struct lamebus_softc *lb, unsigned hw_cpunum, uint32_t offset, uint32_t val)
writestress	/home/trinity/src/kern/include/test.h	/^int writestress(int, char **);$/;"	p	signature:(int, char **)
writestress	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(writestress);$/;"	v
writestress2	/home/trinity/src/kern/include/test.h	/^int writestress2(int, char **);$/;"	p	signature:(int, char **)
writestress2	/home/trinity/src/kern/test/fstest.c	/^DEFTEST(writestress2);$/;"	v
writestress2_thread	/home/trinity/src/kern/test/fstest.c	/^writestress2_thread(void *fs, unsigned long num)$/;"	f	file:	signature:(void *fs, unsigned long num)
writestress_thread	/home/trinity/src/kern/test/fstest.c	/^writestress_thread(void *fs, unsigned long num)$/;"	f	file:	signature:(void *fs, unsigned long num)
z0	/home/trinity/src/kern/arch/mips/include/kern/regdefs.h	40;"	d
